   1              		.file	"apc.c"
   9              	.Ltext0:
  10              		.section	.text.apc_tx_dbm2auxapc,"ax",%progbits
  11              		.align	2
  12              		.global	apc_tx_dbm2auxapc
  14              	apc_tx_dbm2auxapc:
  15              	.LFB5:
  16              		.file 1 "layer1/apc.c"
   1:layer1/apc.c  **** /* APC (Automatic Power Control) Implementation */
   2:layer1/apc.c  **** 
   3:layer1/apc.c  **** /* (C) 2010 by Harald Welte <laforge@gnumonks.org>
   4:layer1/apc.c  ****  *
   5:layer1/apc.c  ****  * All Rights Reserved
   6:layer1/apc.c  ****  *
   7:layer1/apc.c  ****  * This program is free software; you can redistribute it and/or modify
   8:layer1/apc.c  ****  * it under the terms of the GNU General Public License as published by
   9:layer1/apc.c  ****  * the Free Software Foundation; either version 2 of the License, or
  10:layer1/apc.c  ****  * (at your option) any later version.
  11:layer1/apc.c  ****  *
  12:layer1/apc.c  ****  * This program is distributed in the hope that it will be useful,
  13:layer1/apc.c  ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:layer1/apc.c  ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:layer1/apc.c  ****  * GNU General Public License for more details.
  16:layer1/apc.c  ****  *
  17:layer1/apc.c  ****  * You should have received a copy of the GNU General Public License along
  18:layer1/apc.c  ****  * with this program; if not, write to the Free Software Foundation, Inc.,
  19:layer1/apc.c  ****  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
  20:layer1/apc.c  ****  *
  21:layer1/apc.c  ****  */
  22:layer1/apc.c  **** 
  23:layer1/apc.c  **** #include <errno.h>
  24:layer1/apc.c  **** 
  25:layer1/apc.c  **** #include <osmocom/core/utils.h>
  26:layer1/apc.c  **** #include <osmocom/gsm/gsm_utils.h>
  27:layer1/apc.c  **** 
  28:layer1/apc.c  **** #include <layer1/apc.h>
  29:layer1/apc.c  **** 
  30:layer1/apc.c  **** /* calibration table defined in board file */
  31:layer1/apc.c  **** extern const int16_t dbm2apc_gsm900[];
  32:layer1/apc.c  **** extern const int dbm2apc_gsm900_max;
  33:layer1/apc.c  **** 
  34:layer1/apc.c  **** 
  35:layer1/apc.c  **** /* determine the AUXAPC value by the Tx Power Level */
  36:layer1/apc.c  **** int16_t apc_tx_dbm2auxapc(enum gsm_band band, int8_t dbm)
  37:layer1/apc.c  **** {
  17              		.loc 1 37 0
  18              		@ args = 0, pretend = 0, frame = 0
  19              		@ frame_needed = 0, uses_anonymous_args = 0
  20              		@ link register save eliminated.
  21              	.LVL0:
  22 0000 FF1001E2 		and	r1, r1, #255
  38:layer1/apc.c  **** 	if (dbm < 0)
  23              		.loc 1 38 0
  24 0004 013CA0E1 		mov	r3, r1, asl #24
  25 0008 432CB0E1 		movs	r2, r3, asr #24
  26              		.loc 1 37 0
  27              		@ lr needed for prologue
  28              		.loc 1 38 0
  29 000c 2100E0E3 		mvn	r0, #33
  30              	.LVL1:
  31 0010 1EFF2F41 		bxmi	lr
  39:layer1/apc.c  **** 		return -ERANGE;
  40:layer1/apc.c  **** 
  41:layer1/apc.c  **** 	/* FIXME: offsets for different bands! */
  42:layer1/apc.c  **** 	if (dbm > dbm2apc_gsm900_max)
  32              		.loc 1 42 0
  33 0014 1C309FE5 		ldr	r3, .L8
  34 0018 003093E5 		ldr	r3, [r3, #0]
  35 001c 030052E1 		cmp	r2, r3
  43:layer1/apc.c  **** 		dbm = dbm2apc_gsm900_max;
  36              		.loc 1 43 0
  37 0020 FF1003C2 		andgt	r1, r3, #255
  44:layer1/apc.c  **** 
  45:layer1/apc.c  **** 	return dbm2apc_gsm900[dbm];
  38              		.loc 1 45 0
  39 0024 013CA0E1 		mov	r3, r1, asl #24
  40 0028 0C209FE5 		ldr	r2, .L8+4
  41 002c C33BA0E1 		mov	r3, r3, asr #23
  42 0030 F20093E1 		ldrsh	r0, [r3, r2]
  46:layer1/apc.c  **** }
  43              		.loc 1 46 0
  44 0034 1EFF2FE1 		bx	lr
  45              	.L9:
  46              		.align	2
  47              	.L8:
  48 0038 00000000 		.word	dbm2apc_gsm900_max
  49 003c 00000000 		.word	dbm2apc_gsm900
  50              	.LFE5:
  52              		.section	.text.apc_tx_pwrlvl2auxapc,"ax",%progbits
  53              		.align	2
  54              		.global	apc_tx_pwrlvl2auxapc
  56              	apc_tx_pwrlvl2auxapc:
  57              	.LFB6:
  47:layer1/apc.c  **** 
  48:layer1/apc.c  **** /* determine the AUXAPC value by the Tx Power Level */
  49:layer1/apc.c  **** int16_t apc_tx_pwrlvl2auxapc(enum gsm_band band, uint8_t lvl)
  50:layer1/apc.c  **** {
  58              		.loc 1 50 0
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 0, uses_anonymous_args = 0
  61              	.LVL2:
  62 0000 10402DE9 		stmfd	sp!, {r4, lr}
  63              	.LCFI0:
  64              		.loc 1 50 0
  65 0004 FF1001E2 		and	r1, r1, #255
  66 0008 0040A0E1 		mov	r4, r0
  51:layer1/apc.c  **** 	/* convert tx power level to dBm */
  52:layer1/apc.c  **** 	int dbm = ms_pwr_dbm(band, lvl);
  67              		.loc 1 52 0
  68 000c FEFFFFEB 		bl	ms_pwr_dbm
  69              	.LVL3:
  53:layer1/apc.c  **** 	if (dbm < 0)
  70              		.loc 1 53 0
  71 0010 001050E2 		subs	r1, r0, #0
  72              	.LVL4:
  54:layer1/apc.c  **** 		return dbm;
  73              		.loc 1 54 0
  74 0014 0138A0E1 		mov	r3, r1, asl #16
  55:layer1/apc.c  **** 
  56:layer1/apc.c  **** 	return apc_tx_dbm2auxapc(band, dbm);
  75              		.loc 1 56 0
  76 0018 011CA0E1 		mov	r1, r1, asl #24
  77              	.LVL5:
  78              		.loc 1 54 0
  79 001c 4338A0E1 		mov	r3, r3, asr #16
  80              		.loc 1 56 0
  81 0020 0400A0E1 		mov	r0, r4
  82 0024 411CA0E1 		mov	r1, r1, asr #24
  83              		.loc 1 53 0
  84 0028 0B0000BA 		blt	.L13
  85              	.LVL6:
  86              		.loc 1 56 0
  87 002c FEFFFFEB 		bl	apc_tx_dbm2auxapc
  88              	.LVL7:
  89 0030 0030A0E1 		mov	r3, r0
  90              	.LVL8:
  91              	.L13:
  57:layer1/apc.c  **** }
  92              		.loc 1 57 0
  93 0034 0300A0E1 		mov	r0, r3
  94 0038 1080BDE8 		ldmfd	sp!, {r4, pc}
  95              	.LFE6:
 139              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 apc.c
     /tmp/ccIXqN1s.s:14     .text.apc_tx_dbm2auxapc:0000000000000000 apc_tx_dbm2auxapc
     /tmp/ccIXqN1s.s:22     .text.apc_tx_dbm2auxapc:0000000000000000 $a
     /tmp/ccIXqN1s.s:48     .text.apc_tx_dbm2auxapc:0000000000000038 $d
     /tmp/ccIXqN1s.s:56     .text.apc_tx_pwrlvl2auxapc:0000000000000000 apc_tx_pwrlvl2auxapc
     /tmp/ccIXqN1s.s:62     .text.apc_tx_pwrlvl2auxapc:0000000000000000 $a

UNDEFINED SYMBOLS
dbm2apc_gsm900_max
dbm2apc_gsm900
ms_pwr_dbm
