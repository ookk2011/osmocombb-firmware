   1              		.file	"main.c"
   9              	.Ltext0:
  10              		.global	hr
  11              		.section	.rodata.str1.4,"aMS",%progbits,1
  12 0001 000000   		.align	2
  13              	.LC0:
  14 0004 3D3D3D3D 		.ascii	"==================================================="
  14      3D3D3D3D 
  14      3D3D3D3D 
  14      3D3D3D3D 
  14      3D3D3D3D 
  15 0037 3D3D3D3D 		.ascii	"===================\012\000"
  15      3D3D3D3D 
  15      3D3D3D3D 
  15      3D3D3D3D 
  15      3D3D3D0A 
  16              		.data
  17              		.align	2
  20              	hr:
  21 0000 04000000 		.word	.LC0
  22              		.global	rach
  23              		.bss
  24              		.align	2
  27              	rach:
  28 0000 00000000 		.space	4
  29              		.global	si_new
  30              		.align	1
  33              	si_new:
  34 0004 0000     		.space	2
  35              		.global	tone_on
  36 0006 0000     		.align	2
  39              	tone_on:
  40 0008 00000000 		.space	4
  41              		.global	tone
  42              		.align	2
  45              	tone:
  46 000c 00000000 		.space	4
  47              		.global	pm_scale
  48              		.data
  49              		.align	2
  52              	pm_scale:
  53 0004 01000000 		.word	1
  54              		.global	pm_max
  55              		.align	2
  58              	pm_max:
  59 0008 02000000 		.word	2
  60              		.global	pm_count
  61              		.bss
  62              		.align	2
  65              	pm_count:
  66 0010 00000000 		.space	4
  67              		.global	pm_mode
  68              		.align	2
  71              	pm_mode:
  72 0014 00000000 		.space	4
  73              		.global	sync_msg
  74              		.section	.rodata.str1.4
  75              		.subsection	-1
  76              		.align	2
  77              	.LC1:
  78 0000 00       		.ascii	"\000"
  79              		.data
  80              		.align	2
  83              	sync_msg:
  84 000c 00000000 		.word	.LC1
  85              		.global	sync_result
  86              		.bss
  87              		.align	2
  90              	sync_result:
  91 0018 00000000 		.space	4
  92              		.global	max
  93              		.align	2
  96              	max:
  97 001c 00000000 		.space	4
  98              		.global	uplink
  99              		.align	2
 102              	uplink:
 103 0020 00000000 		.space	4
 104              		.global	pcs
 105              		.align	2
 108              	pcs:
 109 0024 00000000 		.space	4
 110              		.global	mode
 111              		.align	2
 114              	mode:
 115 0028 00000000 		.space	4
 116              		.global	key_pressed
 117              		.align	2
 120              	key_pressed:
 121 002c 00000000 		.space	4
 122              		.global	key_code
 123              		.data
 124              		.align	2
 127              	key_code:
 128 0010 FF000000 		.word	255
 129              		.bss
 130              		.align	1
 131              	arfcn:
 132 0030 0000     		.space	2
 133              		.data
 134              		.align	2
 137              	bands:
 138 0014 80000000 		.word	128
 139 0018 FB000000 		.word	251
 140 001c 7C000000 		.word	124
 141 0020 00020000 		.word	512
 142 0024 32200000 		.word	8242
 143 0028 F4210000 		.word	8692
 144 002c BB030000 		.word	955
 145 0030 7C000000 		.word	124
 146 0034 75030000 		.word	885
 147 0038 80000000 		.word	128
 148 003c 3A220000 		.word	8762
 149 0040 FC230000 		.word	9212
 150 0044 00020000 		.word	512
 151 0048 75030000 		.word	885
 152 004c FB000000 		.word	251
 153 0050 BB030000 		.word	955
 154 0054 CE420000 		.word	17102
 155 0058 84460000 		.word	18052
 156 005c 00000000 		.word	0
 157 0060 00000000 		.word	0
 158 0064 00000000 		.word	0
 159 0068 00000000 		.word	0
 160 006c 00000000 		.word	0
 161 0070 00000000 		.word	0
 162              		.section	.text.__fswab16,"ax",%progbits
 163              		.align	2
 165              	__fswab16:
 166              	.LFB3:
 167              		.file 1 "include/swab.h"
   1:include/swab.h **** #ifndef _LINUX_SWAB_H
   2:include/swab.h **** #define _LINUX_SWAB_H
   3:include/swab.h **** 
   4:include/swab.h **** #include <stdint.h>
   5:include/swab.h **** #include <defines.h>
   6:include/swab.h **** #include <asm/swab.h>
   7:include/swab.h **** 
   8:include/swab.h **** /*
   9:include/swab.h ****  * casts are necessary for constants, because we never know how for sure
  10:include/swab.h ****  * how U/UL/ULL map to uint16_t, uint32_t, uint64_t. At least not in a portable way.
  11:include/swab.h ****  */
  12:include/swab.h **** #define ___constant_swab16(x) ((uint16_t)(				\
  13:include/swab.h **** 	(((uint16_t)(x) & (uint16_t)0x00ffU) << 8) |			\
  14:include/swab.h **** 	(((uint16_t)(x) & (uint16_t)0xff00U) >> 8)))
  15:include/swab.h **** 
  16:include/swab.h **** #define ___constant_swab32(x) ((uint32_t)(				\
  17:include/swab.h **** 	(((uint32_t)(x) & (uint32_t)0x000000ffUL) << 24) |		\
  18:include/swab.h **** 	(((uint32_t)(x) & (uint32_t)0x0000ff00UL) <<  8) |		\
  19:include/swab.h **** 	(((uint32_t)(x) & (uint32_t)0x00ff0000UL) >>  8) |		\
  20:include/swab.h **** 	(((uint32_t)(x) & (uint32_t)0xff000000UL) >> 24)))
  21:include/swab.h **** 
  22:include/swab.h **** #define ___constant_swab64(x) ((uint64_t)(				\
  23:include/swab.h **** 	(((uint64_t)(x) & (uint64_t)0x00000000000000ffULL) << 56) |	\
  24:include/swab.h **** 	(((uint64_t)(x) & (uint64_t)0x000000000000ff00ULL) << 40) |	\
  25:include/swab.h **** 	(((uint64_t)(x) & (uint64_t)0x0000000000ff0000ULL) << 24) |	\
  26:include/swab.h **** 	(((uint64_t)(x) & (uint64_t)0x00000000ff000000ULL) <<  8) |	\
  27:include/swab.h **** 	(((uint64_t)(x) & (uint64_t)0x000000ff00000000ULL) >>  8) |	\
  28:include/swab.h **** 	(((uint64_t)(x) & (uint64_t)0x0000ff0000000000ULL) >> 24) |	\
  29:include/swab.h **** 	(((uint64_t)(x) & (uint64_t)0x00ff000000000000ULL) >> 40) |	\
  30:include/swab.h **** 	(((uint64_t)(x) & (uint64_t)0xff00000000000000ULL) >> 56)))
  31:include/swab.h **** 
  32:include/swab.h **** #define ___constant_swahw32(x) ((uint32_t)(			\
  33:include/swab.h **** 	(((uint32_t)(x) & (uint32_t)0x0000ffffUL) << 16) |		\
  34:include/swab.h **** 	(((uint32_t)(x) & (uint32_t)0xffff0000UL) >> 16)))
  35:include/swab.h **** 
  36:include/swab.h **** #define ___constant_swahb32(x) ((uint32_t)(			\
  37:include/swab.h **** 	(((uint32_t)(x) & (uint32_t)0x00ff00ffUL) << 8) |		\
  38:include/swab.h **** 	(((uint32_t)(x) & (uint32_t)0xff00ff00UL) >> 8)))
  39:include/swab.h **** 
  40:include/swab.h **** /*
  41:include/swab.h ****  * Implement the following as inlines, but define the interface using
  42:include/swab.h ****  * macros to allow constant folding when possible:
  43:include/swab.h ****  * ___swab16, ___swab32, ___swab64, ___swahw32, ___swahb32
  44:include/swab.h ****  */
  45:include/swab.h **** 
  46:include/swab.h **** static inline __attribute_const__ uint16_t __fswab16(uint16_t val)
  47:include/swab.h **** {
 168              		.loc 1 47 0
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 172              	.LVL0:
 173 0000 0008A0E1 		mov	r0, r0, asl #16
 174              	.LVL1:
 175 0004 2008A0E1 		mov	r0, r0, lsr #16
 176              	.LVL2:
  48:include/swab.h **** #ifdef __arch_swab16
  49:include/swab.h **** 	return __arch_swab16(val);
  50:include/swab.h **** #else
  51:include/swab.h **** 	return ___constant_swab16(val);
 177              		.loc 1 51 0
 178 0008 2034A0E1 		mov	r3, r0, lsr #8
 179 000c FF0000E2 		and	r0, r0, #255
 180              	.LVL3:
  52:include/swab.h **** #endif
  53:include/swab.h **** }
 181              		.loc 1 53 0
 182 0010 000483E1 		orr	r0, r3, r0, asl #8
 183              		.loc 1 47 0
 184              		@ lr needed for prologue
 185              		.loc 1 53 0
 186 0014 1EFF2FE1 		bx	lr
 187              	.LFE3:
 189              		.section	.text.msgb_tailroom,"ax",%progbits
 190              		.align	2
 192              	msgb_tailroom:
 193              	.LFB47:
 194              		.file 2 "../../shared/libosmocore/include/osmocom/core/msgb.h"
   1:../../shared/libosmocore/include/osmocom/core/msgb.h **** #ifndef _MSGB_H
   2:../../shared/libosmocore/include/osmocom/core/msgb.h **** #define _MSGB_H
   3:../../shared/libosmocore/include/osmocom/core/msgb.h **** 
   4:../../shared/libosmocore/include/osmocom/core/msgb.h **** /* (C) 2008 by Harald Welte <laforge@gnumonks.org>
   5:../../shared/libosmocore/include/osmocom/core/msgb.h ****  * All Rights Reserved
   6:../../shared/libosmocore/include/osmocom/core/msgb.h ****  *
   7:../../shared/libosmocore/include/osmocom/core/msgb.h ****  * This program is free software; you can redistribute it and/or modify
   8:../../shared/libosmocore/include/osmocom/core/msgb.h ****  * it under the terms of the GNU General Public License as published by
   9:../../shared/libosmocore/include/osmocom/core/msgb.h ****  * the Free Software Foundation; either version 2 of the License, or
  10:../../shared/libosmocore/include/osmocom/core/msgb.h ****  * (at your option) any later version.
  11:../../shared/libosmocore/include/osmocom/core/msgb.h ****  *
  12:../../shared/libosmocore/include/osmocom/core/msgb.h ****  * This program is distributed in the hope that it will be useful,
  13:../../shared/libosmocore/include/osmocom/core/msgb.h ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:../../shared/libosmocore/include/osmocom/core/msgb.h ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:../../shared/libosmocore/include/osmocom/core/msgb.h ****  * GNU General Public License for more details.
  16:../../shared/libosmocore/include/osmocom/core/msgb.h ****  *
  17:../../shared/libosmocore/include/osmocom/core/msgb.h ****  * You should have received a copy of the GNU General Public License along
  18:../../shared/libosmocore/include/osmocom/core/msgb.h ****  * with this program; if not, write to the Free Software Foundation, Inc.,
  19:../../shared/libosmocore/include/osmocom/core/msgb.h ****  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
  20:../../shared/libosmocore/include/osmocom/core/msgb.h ****  *
  21:../../shared/libosmocore/include/osmocom/core/msgb.h ****  */
  22:../../shared/libosmocore/include/osmocom/core/msgb.h **** 
  23:../../shared/libosmocore/include/osmocom/core/msgb.h **** #include <stdint.h>
  24:../../shared/libosmocore/include/osmocom/core/msgb.h **** #include <osmocom/core/linuxlist.h>
  25:../../shared/libosmocore/include/osmocom/core/msgb.h **** #include <osmocom/core/utils.h>
  26:../../shared/libosmocore/include/osmocom/core/msgb.h **** 
  27:../../shared/libosmocore/include/osmocom/core/msgb.h **** /*! \defgroup msgb Message buffers
  28:../../shared/libosmocore/include/osmocom/core/msgb.h ****  *  @{
  29:../../shared/libosmocore/include/osmocom/core/msgb.h ****  */
  30:../../shared/libosmocore/include/osmocom/core/msgb.h **** 
  31:../../shared/libosmocore/include/osmocom/core/msgb.h **** /*! \file msgb.h
  32:../../shared/libosmocore/include/osmocom/core/msgb.h ****  *  \brief Osmocom message buffers
  33:../../shared/libosmocore/include/osmocom/core/msgb.h ****  * The Osmocom message buffers are modelled after the 'struct skb'
  34:../../shared/libosmocore/include/osmocom/core/msgb.h ****  * inside the Linux kernel network stack.  As they exist in userspace,
  35:../../shared/libosmocore/include/osmocom/core/msgb.h ****  * they are much simplified.  However, terminology such as headroom,
  36:../../shared/libosmocore/include/osmocom/core/msgb.h ****  * tailroom, push/pull/put etc. remains the same.
  37:../../shared/libosmocore/include/osmocom/core/msgb.h ****  */
  38:../../shared/libosmocore/include/osmocom/core/msgb.h **** 
  39:../../shared/libosmocore/include/osmocom/core/msgb.h **** #define MSGB_DEBUG
  40:../../shared/libosmocore/include/osmocom/core/msgb.h **** 
  41:../../shared/libosmocore/include/osmocom/core/msgb.h **** /*! \brief Osmocom message buffer */
  42:../../shared/libosmocore/include/osmocom/core/msgb.h **** struct msgb {
  43:../../shared/libosmocore/include/osmocom/core/msgb.h **** 	struct llist_head list; /*!< \brief linked list header */
  44:../../shared/libosmocore/include/osmocom/core/msgb.h **** 
  45:../../shared/libosmocore/include/osmocom/core/msgb.h **** 
  46:../../shared/libosmocore/include/osmocom/core/msgb.h **** 	/* Part of which TRX logical channel we were received / transmitted */
  47:../../shared/libosmocore/include/osmocom/core/msgb.h **** 	/* FIXME: move them into the control buffer */
  48:../../shared/libosmocore/include/osmocom/core/msgb.h **** 	union {
  49:../../shared/libosmocore/include/osmocom/core/msgb.h **** 		void *dst; /*!< \brief reference of origin/destination */
  50:../../shared/libosmocore/include/osmocom/core/msgb.h **** 		struct gsm_bts_trx *trx;
  51:../../shared/libosmocore/include/osmocom/core/msgb.h **** 	};
  52:../../shared/libosmocore/include/osmocom/core/msgb.h **** 	struct gsm_lchan *lchan; /*!< \brief logical channel */
  53:../../shared/libosmocore/include/osmocom/core/msgb.h **** 
  54:../../shared/libosmocore/include/osmocom/core/msgb.h **** 	unsigned char *l1h; /*!< \brief pointer to Layer1 header (if any) */
  55:../../shared/libosmocore/include/osmocom/core/msgb.h **** 	unsigned char *l2h; /*!< \brief pointer to A-bis layer 2 header: OML, RSL(RLL), NS */
  56:../../shared/libosmocore/include/osmocom/core/msgb.h **** 	unsigned char *l3h; /*!< \brief pointer to Layer 3 header. For OML: FOM; RSL: 04.08; GPRS: BSSGP *
  57:../../shared/libosmocore/include/osmocom/core/msgb.h **** 	unsigned char *l4h; /*!< \brief pointer to layer 4 header */
  58:../../shared/libosmocore/include/osmocom/core/msgb.h **** 
  59:../../shared/libosmocore/include/osmocom/core/msgb.h **** 	unsigned long cb[5]; /*!< \brief control buffer */
  60:../../shared/libosmocore/include/osmocom/core/msgb.h **** 
  61:../../shared/libosmocore/include/osmocom/core/msgb.h **** 	uint16_t data_len;   /*!< \brief length of underlying data array */
  62:../../shared/libosmocore/include/osmocom/core/msgb.h **** 	uint16_t len;	     /*!< \brief length of bytes used in msgb */
  63:../../shared/libosmocore/include/osmocom/core/msgb.h **** 
  64:../../shared/libosmocore/include/osmocom/core/msgb.h **** 	unsigned char *head;	/*!< \brief start of underlying memory buffer */
  65:../../shared/libosmocore/include/osmocom/core/msgb.h **** 	unsigned char *tail;	/*!< \brief end of message in buffer */
  66:../../shared/libosmocore/include/osmocom/core/msgb.h **** 	unsigned char *data;	/*!< \brief start of message in buffer */
  67:../../shared/libosmocore/include/osmocom/core/msgb.h **** 	unsigned char _data[0]; /*!< \brief optional immediate data array */
  68:../../shared/libosmocore/include/osmocom/core/msgb.h **** };
  69:../../shared/libosmocore/include/osmocom/core/msgb.h **** 
  70:../../shared/libosmocore/include/osmocom/core/msgb.h **** extern struct msgb *msgb_alloc(uint16_t size, const char *name);
  71:../../shared/libosmocore/include/osmocom/core/msgb.h **** extern void msgb_free(struct msgb *m);
  72:../../shared/libosmocore/include/osmocom/core/msgb.h **** extern void msgb_enqueue(struct llist_head *queue, struct msgb *msg);
  73:../../shared/libosmocore/include/osmocom/core/msgb.h **** extern struct msgb *msgb_dequeue(struct llist_head *queue);
  74:../../shared/libosmocore/include/osmocom/core/msgb.h **** extern void msgb_reset(struct msgb *m);
  75:../../shared/libosmocore/include/osmocom/core/msgb.h **** uint16_t msgb_length(const struct msgb *msg);
  76:../../shared/libosmocore/include/osmocom/core/msgb.h **** 
  77:../../shared/libosmocore/include/osmocom/core/msgb.h **** #ifdef MSGB_DEBUG
  78:../../shared/libosmocore/include/osmocom/core/msgb.h **** #include <osmocom/core/panic.h>
  79:../../shared/libosmocore/include/osmocom/core/msgb.h **** #define MSGB_ABORT(msg, fmt, args ...) do {		\
  80:../../shared/libosmocore/include/osmocom/core/msgb.h **** 	osmo_panic("msgb(%p): " fmt, msg, ## args);	\
  81:../../shared/libosmocore/include/osmocom/core/msgb.h **** 	} while(0)
  82:../../shared/libosmocore/include/osmocom/core/msgb.h **** #else
  83:../../shared/libosmocore/include/osmocom/core/msgb.h **** #define MSGB_ABORT(msg, fmt, args ...)
  84:../../shared/libosmocore/include/osmocom/core/msgb.h **** #endif
  85:../../shared/libosmocore/include/osmocom/core/msgb.h **** 
  86:../../shared/libosmocore/include/osmocom/core/msgb.h **** /*! \brief obtain L1 header of msgb */
  87:../../shared/libosmocore/include/osmocom/core/msgb.h **** #define msgb_l1(m)	((void *)(m->l1h))
  88:../../shared/libosmocore/include/osmocom/core/msgb.h **** /*! \brief obtain L2 header of msgb */
  89:../../shared/libosmocore/include/osmocom/core/msgb.h **** #define msgb_l2(m)	((void *)(m->l2h))
  90:../../shared/libosmocore/include/osmocom/core/msgb.h **** /*! \brief obtain L3 header of msgb */
  91:../../shared/libosmocore/include/osmocom/core/msgb.h **** #define msgb_l3(m)	((void *)(m->l3h))
  92:../../shared/libosmocore/include/osmocom/core/msgb.h **** /*! \brief obtain SMS header of msgb */
  93:../../shared/libosmocore/include/osmocom/core/msgb.h **** #define msgb_sms(m)	((void *)(m->l4h))
  94:../../shared/libosmocore/include/osmocom/core/msgb.h **** 
  95:../../shared/libosmocore/include/osmocom/core/msgb.h **** /*! \brief determine length of L1 message
  96:../../shared/libosmocore/include/osmocom/core/msgb.h ****  *  \param[in] msgb message buffer
  97:../../shared/libosmocore/include/osmocom/core/msgb.h ****  *  \returns size of L1 message in bytes
  98:../../shared/libosmocore/include/osmocom/core/msgb.h ****  *
  99:../../shared/libosmocore/include/osmocom/core/msgb.h ****  * This function computes the number of bytes between the tail of the
 100:../../shared/libosmocore/include/osmocom/core/msgb.h ****  * message and the layer 1 header.
 101:../../shared/libosmocore/include/osmocom/core/msgb.h ****  */
 102:../../shared/libosmocore/include/osmocom/core/msgb.h **** static inline unsigned int msgb_l1len(const struct msgb *msgb)
 103:../../shared/libosmocore/include/osmocom/core/msgb.h **** {
 104:../../shared/libosmocore/include/osmocom/core/msgb.h **** 	return msgb->tail - (uint8_t *)msgb_l1(msgb);
 105:../../shared/libosmocore/include/osmocom/core/msgb.h **** }
 106:../../shared/libosmocore/include/osmocom/core/msgb.h **** 
 107:../../shared/libosmocore/include/osmocom/core/msgb.h **** /*! \brief determine length of L2 message
 108:../../shared/libosmocore/include/osmocom/core/msgb.h ****  *  \param[in] msgb message buffer
 109:../../shared/libosmocore/include/osmocom/core/msgb.h ****  *  \returns size of L2 message in bytes
 110:../../shared/libosmocore/include/osmocom/core/msgb.h ****  *
 111:../../shared/libosmocore/include/osmocom/core/msgb.h ****  * This function computes the number of bytes between the tail of the
 112:../../shared/libosmocore/include/osmocom/core/msgb.h ****  * message and the layer 2 header.
 113:../../shared/libosmocore/include/osmocom/core/msgb.h ****  */
 114:../../shared/libosmocore/include/osmocom/core/msgb.h **** static inline unsigned int msgb_l2len(const struct msgb *msgb)
 115:../../shared/libosmocore/include/osmocom/core/msgb.h **** {
 116:../../shared/libosmocore/include/osmocom/core/msgb.h **** 	return msgb->tail - (uint8_t *)msgb_l2(msgb);
 117:../../shared/libosmocore/include/osmocom/core/msgb.h **** }
 118:../../shared/libosmocore/include/osmocom/core/msgb.h **** 
 119:../../shared/libosmocore/include/osmocom/core/msgb.h **** /*! \brief determine length of L3 message
 120:../../shared/libosmocore/include/osmocom/core/msgb.h ****  *  \param[in] msgb message buffer
 121:../../shared/libosmocore/include/osmocom/core/msgb.h ****  *  \returns size of L3 message in bytes
 122:../../shared/libosmocore/include/osmocom/core/msgb.h ****  *
 123:../../shared/libosmocore/include/osmocom/core/msgb.h ****  * This function computes the number of bytes between the tail of the
 124:../../shared/libosmocore/include/osmocom/core/msgb.h ****  * message and the layer 3 header.
 125:../../shared/libosmocore/include/osmocom/core/msgb.h ****  */
 126:../../shared/libosmocore/include/osmocom/core/msgb.h **** static inline unsigned int msgb_l3len(const struct msgb *msgb)
 127:../../shared/libosmocore/include/osmocom/core/msgb.h **** {
 128:../../shared/libosmocore/include/osmocom/core/msgb.h **** 	return msgb->tail - (uint8_t *)msgb_l3(msgb);
 129:../../shared/libosmocore/include/osmocom/core/msgb.h **** }
 130:../../shared/libosmocore/include/osmocom/core/msgb.h **** 
 131:../../shared/libosmocore/include/osmocom/core/msgb.h **** /*! \brief determine the length of the header
 132:../../shared/libosmocore/include/osmocom/core/msgb.h ****  *  \param[in] msgb message buffer
 133:../../shared/libosmocore/include/osmocom/core/msgb.h ****  *  \returns number of bytes between start of buffer and start of msg
 134:../../shared/libosmocore/include/osmocom/core/msgb.h ****  *
 135:../../shared/libosmocore/include/osmocom/core/msgb.h ****  * This function computes the length difference between the underlying
 136:../../shared/libosmocore/include/osmocom/core/msgb.h ****  * data buffer and the used section of the \a msgb.
 137:../../shared/libosmocore/include/osmocom/core/msgb.h ****  */
 138:../../shared/libosmocore/include/osmocom/core/msgb.h **** static inline unsigned int msgb_headlen(const struct msgb *msgb)
 139:../../shared/libosmocore/include/osmocom/core/msgb.h **** {
 140:../../shared/libosmocore/include/osmocom/core/msgb.h **** 	return msgb->len - msgb->data_len;
 141:../../shared/libosmocore/include/osmocom/core/msgb.h **** }
 142:../../shared/libosmocore/include/osmocom/core/msgb.h **** 
 143:../../shared/libosmocore/include/osmocom/core/msgb.h **** /*! \brief determine how much tail room is left in msgb
 144:../../shared/libosmocore/include/osmocom/core/msgb.h ****  *  \param[in] msgb message buffer
 145:../../shared/libosmocore/include/osmocom/core/msgb.h ****  *  \returns number of bytes remaining at end of msgb
 146:../../shared/libosmocore/include/osmocom/core/msgb.h ****  *
 147:../../shared/libosmocore/include/osmocom/core/msgb.h ****  * This function computes the amount of octets left in the underlying
 148:../../shared/libosmocore/include/osmocom/core/msgb.h ****  * data buffer after the end of the message.
 149:../../shared/libosmocore/include/osmocom/core/msgb.h ****  */
 150:../../shared/libosmocore/include/osmocom/core/msgb.h **** static inline int msgb_tailroom(const struct msgb *msgb)
 151:../../shared/libosmocore/include/osmocom/core/msgb.h **** {
 195              		.loc 2 151 0
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198              		@ link register save eliminated.
 199              	.LVL4:
 200 0000 B423D0E1 		ldrh	r2, [r0, #52]
 201 0004 383090E5 		ldr	r3, [r0, #56]
 202 0008 3C0090E5 		ldr	r0, [r0, #60]
 203              	.LVL5:
 204 000c 023083E0 		add	r3, r3, r2
 152:../../shared/libosmocore/include/osmocom/core/msgb.h **** 	return (msgb->head + msgb->data_len) - msgb->tail;
 153:../../shared/libosmocore/include/osmocom/core/msgb.h **** }
 205              		.loc 2 153 0
 206 0010 030060E0 		rsb	r0, r0, r3
 207              		.loc 2 151 0
 208              		@ lr needed for prologue
 209              		.loc 2 153 0
 210 0014 1EFF2FE1 		bx	lr
 211              	.LFE47:
 213              		.section	.rodata.str1.4
 214              		.align	2
 215              	.LC2:
 216 004c 6D736762 		.ascii	"msgb(%p): Not enough tailroom msgb_push (%u < %u)\012"
 216      28257029 
 216      3A204E6F 
 216      7420656E 
 216      6F756768 
 217 007e 00       		.ascii	"\000"
 218              		.section	.text.msgb_put,"ax",%progbits
 219              		.align	2
 221              	msgb_put:
 222              	.LFB49:
 154:../../shared/libosmocore/include/osmocom/core/msgb.h **** 
 155:../../shared/libosmocore/include/osmocom/core/msgb.h **** /*! \brief determine the amount of headroom in msgb
 156:../../shared/libosmocore/include/osmocom/core/msgb.h ****  *  \param[in] msgb message buffer
 157:../../shared/libosmocore/include/osmocom/core/msgb.h ****  *  \returns number of bytes left ahead of message start in msgb
 158:../../shared/libosmocore/include/osmocom/core/msgb.h ****  *
 159:../../shared/libosmocore/include/osmocom/core/msgb.h ****  * This function computes the amount of bytes left in the underlying
 160:../../shared/libosmocore/include/osmocom/core/msgb.h ****  * data buffer before the start of the actual message.
 161:../../shared/libosmocore/include/osmocom/core/msgb.h ****  */
 162:../../shared/libosmocore/include/osmocom/core/msgb.h **** static inline int msgb_headroom(const struct msgb *msgb)
 163:../../shared/libosmocore/include/osmocom/core/msgb.h **** {
 164:../../shared/libosmocore/include/osmocom/core/msgb.h **** 	return (msgb->data - msgb->head);
 165:../../shared/libosmocore/include/osmocom/core/msgb.h **** }
 166:../../shared/libosmocore/include/osmocom/core/msgb.h **** 
 167:../../shared/libosmocore/include/osmocom/core/msgb.h **** /*! \brief append data to end of message buffer
 168:../../shared/libosmocore/include/osmocom/core/msgb.h ****  *  \param[in] msgb message buffer
 169:../../shared/libosmocore/include/osmocom/core/msgb.h ****  *  \param[in] len number of bytes to append to message
 170:../../shared/libosmocore/include/osmocom/core/msgb.h ****  *  \returns pointer to start of newly-appended data
 171:../../shared/libosmocore/include/osmocom/core/msgb.h ****  *
 172:../../shared/libosmocore/include/osmocom/core/msgb.h ****  * This function will move the \a tail pointer of the message buffer \a
 173:../../shared/libosmocore/include/osmocom/core/msgb.h ****  * len bytes further, thus enlarging the message by \a len bytes.
 174:../../shared/libosmocore/include/osmocom/core/msgb.h ****  *
 175:../../shared/libosmocore/include/osmocom/core/msgb.h ****  * The return value is a pointer to start of the newly added section at
 176:../../shared/libosmocore/include/osmocom/core/msgb.h ****  * the end of the message and can be used for actually filling/copying
 177:../../shared/libosmocore/include/osmocom/core/msgb.h ****  * data into it.
 178:../../shared/libosmocore/include/osmocom/core/msgb.h ****  */
 179:../../shared/libosmocore/include/osmocom/core/msgb.h **** static inline unsigned char *msgb_put(struct msgb *msgb, unsigned int len)
 180:../../shared/libosmocore/include/osmocom/core/msgb.h **** {
 223              		.loc 2 180 0
 224              		@ args = 0, pretend = 0, frame = 0
 225              		@ frame_needed = 0, uses_anonymous_args = 0
 226              	.LVL6:
 227 0000 70402DE9 		stmfd	sp!, {r4, r5, r6, lr}
 228              	.LCFI0:
 229              		.loc 2 180 0
 230 0004 0150A0E1 		mov	r5, r1
 231 0008 0040A0E1 		mov	r4, r0
 181:../../shared/libosmocore/include/osmocom/core/msgb.h **** 	unsigned char *tmp = msgb->tail;
 182:../../shared/libosmocore/include/osmocom/core/msgb.h **** 	if (msgb_tailroom(msgb) < (int) len)
 232              		.loc 2 182 0
 233 000c FEFFFFEB 		bl	msgb_tailroom
 234              	.LVL7:
 235 0010 050050E1 		cmp	r0, r5
 236 0014 0020A0E1 		mov	r2, r0
 183:../../shared/libosmocore/include/osmocom/core/msgb.h **** 		MSGB_ABORT(msgb, "Not enough tailroom msgb_push (%u < %u)\n",
 237              		.loc 2 183 0
 238 0018 0410A0E1 		mov	r1, r4
 239 001c 28009FE5 		ldr	r0, .L9
 240 0020 0530A0E1 		mov	r3, r5
 241              		.loc 2 181 0
 242 0024 3C6094E5 		ldr	r6, [r4, #60]
 243              	.LVL8:
 244              		.loc 2 182 0
 245              	.LVL9:
 246              		.loc 2 183 0
 247 0028 FEFFFFBB 		bllt	osmo_panic
 248              	.LVL10:
 249              	.L6:
 184:../../shared/libosmocore/include/osmocom/core/msgb.h **** 			   msgb_tailroom(msgb), len);
 185:../../shared/libosmocore/include/osmocom/core/msgb.h **** 	msgb->tail += len;
 250              		.loc 2 185 0
 251 002c 3C2094E5 		ldr	r2, [r4, #60]
 186:../../shared/libosmocore/include/osmocom/core/msgb.h **** 	msgb->len += len;
 252              		.loc 2 186 0
 253 0030 B633D4E1 		ldrh	r3, [r4, #54]
 254              		.loc 2 185 0
 255 0034 052082E0 		add	r2, r2, r5
 256              		.loc 2 186 0
 257 0038 053083E0 		add	r3, r3, r5
 187:../../shared/libosmocore/include/osmocom/core/msgb.h **** 	return tmp;
 188:../../shared/libosmocore/include/osmocom/core/msgb.h **** }
 258              		.loc 2 188 0
 259 003c 0600A0E1 		mov	r0, r6
 260              		.loc 2 186 0
 261 0040 B633C4E1 		strh	r3, [r4, #54]	@ movhi
 262              		.loc 2 185 0
 263 0044 3C2084E5 		str	r2, [r4, #60]
 264              		.loc 2 188 0
 265 0048 7080BDE8 		ldmfd	sp!, {r4, r5, r6, pc}
 266              	.L10:
 267              		.align	2
 268              	.L9:
 269 004c 4C000000 		.word	.LC2
 270              	.LFE49:
 272              		.section	.text.fb_boxto,"ax",%progbits
 273              		.align	2
 275              	fb_boxto:
 276              	.LFB69:
 277              		.file 3 "include/fb/framebuffer.h"
   1:include/fb/framebuffer.h **** #ifndef _FB_FRAMEBUFFER_H
   2:include/fb/framebuffer.h **** #define _FB_FRAMEBUFFER_H
   3:include/fb/framebuffer.h **** 
   4:include/fb/framebuffer.h **** #include <fb/font.h>
   5:include/fb/framebuffer.h **** #include <stdint.h>
   6:include/fb/framebuffer.h **** 
   7:include/fb/framebuffer.h **** /* color is encoded as <special><red><green><blue> */
   8:include/fb/framebuffer.h **** /* if a color is "special", then the RGB components most likely
   9:include/fb/framebuffer.h ****    don't make sense. Use "special" colours when you have to
  10:include/fb/framebuffer.h ****    mask out bits with transparency or you have to encode
  11:include/fb/framebuffer.h ****    colours in a fixed color palette... */
  12:include/fb/framebuffer.h **** 
  13:include/fb/framebuffer.h **** #define FB_COLOR_WHITE		0x00ffffffU
  14:include/fb/framebuffer.h **** #define FB_COLOR_BLACK		0x00000000U
  15:include/fb/framebuffer.h **** #define FB_COLOR_TRANSP		0x01ffffffU
  16:include/fb/framebuffer.h **** 
  17:include/fb/framebuffer.h **** #define FB_COLOR_RGB(r,g,b) ((((r) & 0xff)<<16)|(((g)&0xff)<<8)|((b)&0xff))
  18:include/fb/framebuffer.h **** #define FB_COLOR_RED		FB_COLOR_RGB(0xff,0x00,0x00)
  19:include/fb/framebuffer.h **** #define FB_COLOR_GREEN		FB_COLOR_RGB(0x00,0xff,0x00)
  20:include/fb/framebuffer.h **** #define FB_COLOR_BLUE		FB_COLOR_RGB(0x00,0x00,0xff)
  21:include/fb/framebuffer.h **** 
  22:include/fb/framebuffer.h **** /* encode */
  23:include/fb/framebuffer.h **** 
  24:include/fb/framebuffer.h **** /* decode */
  25:include/fb/framebuffer.h **** #define FB_COLOR_IS_SPECIAL(v)     (!!((v) & 0xff000000U))
  26:include/fb/framebuffer.h **** #define FB_COLOR_TO_R(v)		(((v)>>16) & 0xff)
  27:include/fb/framebuffer.h **** #define FB_COLOR_TO_G(v)		(((v)>> 8) & 0xff)
  28:include/fb/framebuffer.h **** #define FB_COLOR_TO_B(v)		( (v)      & 0xff)
  29:include/fb/framebuffer.h **** 
  30:include/fb/framebuffer.h **** struct framebuffer {
  31:include/fb/framebuffer.h **** 	char name[8];				// keep it short!
  32:include/fb/framebuffer.h **** 	void (*init)();				// (re)initialize
  33:include/fb/framebuffer.h **** 	void (*clear)();			// clear display
  34:include/fb/framebuffer.h **** 	void (*boxto)(uint16_t x,uint16_t y);	// draw box to xy
  35:include/fb/framebuffer.h **** 	void (*lineto)(uint16_t x,uint16_t y);	// draw line to xy
  36:include/fb/framebuffer.h **** 	int (*putstr)(char *c,int maxwidth);	// put text in current font to fb
  37:include/fb/framebuffer.h **** 	void (*flush)();			// flush changes
  38:include/fb/framebuffer.h **** 
  39:include/fb/framebuffer.h **** 	uint16_t width,height;			// width/height of fb
  40:include/fb/framebuffer.h **** 	uint16_t cursor_x,cursor_y;		// current cursor
  41:include/fb/framebuffer.h **** 	uint32_t fg_color,bg_color;		// current fg/bg color
  42:include/fb/framebuffer.h **** 	enum fb_font_id font;			// current font
  43:include/fb/framebuffer.h **** };
  44:include/fb/framebuffer.h **** 
  45:include/fb/framebuffer.h **** /* there is a single framebuffer, the specific driver defines
  46:include/fb/framebuffer.h ****    the "framebuffer" symbol */
  47:include/fb/framebuffer.h **** extern struct framebuffer *framebuffer;
  48:include/fb/framebuffer.h **** 
  49:include/fb/framebuffer.h **** static inline void
  50:include/fb/framebuffer.h **** fb_init(){
  51:include/fb/framebuffer.h **** 	framebuffer->init();
  52:include/fb/framebuffer.h **** }
  53:include/fb/framebuffer.h **** 
  54:include/fb/framebuffer.h **** static inline void
  55:include/fb/framebuffer.h **** fb_clear(){
  56:include/fb/framebuffer.h **** 	framebuffer->clear();
  57:include/fb/framebuffer.h **** }
  58:include/fb/framebuffer.h **** 
  59:include/fb/framebuffer.h **** static inline void
  60:include/fb/framebuffer.h **** fb_boxto(uint16_t x,uint16_t y){
 278              		.loc 3 60 0
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281              	.LVL11:
 282 0000 04E02DE5 		str	lr, [sp, #-4]!
 283              	.LCFI1:
  61:include/fb/framebuffer.h **** 	framebuffer->boxto(x,y);
 284              		.loc 3 61 0
 285 0004 1C309FE5 		ldr	r3, .L13
 286              		.loc 3 60 0
 287 0008 0008A0E1 		mov	r0, r0, asl #16
 288              	.LVL12:
 289 000c 0118A0E1 		mov	r1, r1, asl #16
 290              	.LVL13:
 291              		.loc 3 61 0
 292 0010 003093E5 		ldr	r3, [r3, #0]
 293 0014 2008A0E1 		mov	r0, r0, lsr #16
 294              	.LVL14:
 295 0018 2118A0E1 		mov	r1, r1, lsr #16
 296              	.LVL15:
 297 001c 0FE0A0E1 		mov	lr, pc
 298 0020 10F093E5 		ldr	pc, [r3, #16]
 299              	.LVL16:
  62:include/fb/framebuffer.h **** }
 300              		.loc 3 62 0
 301 0024 04F09DE4 		ldr	pc, [sp], #4
 302              	.L14:
 303              		.align	2
 304              	.L13:
 305 0028 00000000 		.word	framebuffer
 306              	.LFE69:
 308              		.section	.text.fb_putstr,"ax",%progbits
 309              		.align	2
 311              	fb_putstr:
 312              	.LFB71:
  63:include/fb/framebuffer.h **** 
  64:include/fb/framebuffer.h **** static inline void
  65:include/fb/framebuffer.h **** fb_lineto(uint16_t x,uint16_t y){
  66:include/fb/framebuffer.h **** 	framebuffer->lineto(x,y);
  67:include/fb/framebuffer.h **** }
  68:include/fb/framebuffer.h **** 
  69:include/fb/framebuffer.h **** static inline int
  70:include/fb/framebuffer.h **** fb_putstr(char *str,int maxwidth){
 313              		.loc 3 70 0
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              	.LVL17:
 317 0000 04E02DE5 		str	lr, [sp, #-4]!
 318              	.LCFI2:
  71:include/fb/framebuffer.h **** 	return framebuffer->putstr(str,maxwidth);
 319              		.loc 3 71 0
 320 0004 0C309FE5 		ldr	r3, .L17
 321 0008 003093E5 		ldr	r3, [r3, #0]
 322 000c 0FE0A0E1 		mov	lr, pc
 323 0010 18F093E5 		ldr	pc, [r3, #24]
 324              	.LVL18:
  72:include/fb/framebuffer.h **** }
 325              		.loc 3 72 0
 326 0014 04F09DE4 		ldr	pc, [sp], #4
 327              	.L18:
 328              		.align	2
 329              	.L17:
 330 0018 00000000 		.word	framebuffer
 331              	.LFE71:
 333              		.section	.text.exit_sync,"ax",%progbits
 334              		.align	2
 336              	exit_sync:
 337              	.LFB128:
 338              		.file 4 "apps/rssi/main.c"
   1:apps/rssi/main.c **** /* Cell Monitor of Free Software for Calypso Phone */
   2:apps/rssi/main.c **** 
   3:apps/rssi/main.c **** /* (C) 2012 by Andreas Eversberg <jolly@eversberg.eu>
   4:apps/rssi/main.c ****  *
   5:apps/rssi/main.c ****  * All Rights Reserved
   6:apps/rssi/main.c ****  *
   7:apps/rssi/main.c ****  * This program is free software; you can redistribute it and/or modify
   8:apps/rssi/main.c ****  * it under the terms of the GNU General Public License as published by
   9:apps/rssi/main.c ****  * the Free Software Foundation; either version 2 of the License, or
  10:apps/rssi/main.c ****  * (at your option) any later version.
  11:apps/rssi/main.c ****  *
  12:apps/rssi/main.c ****  * This program is distributed in the hope that it will be useful,
  13:apps/rssi/main.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:apps/rssi/main.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:apps/rssi/main.c ****  * GNU General Public License for more details.
  16:apps/rssi/main.c ****  *
  17:apps/rssi/main.c ****  * You should have received a copy of the GNU General Public License along
  18:apps/rssi/main.c ****  * with this program; if not, write to the Free Software Foundation, Inc.,
  19:apps/rssi/main.c ****  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
  20:apps/rssi/main.c ****  *
  21:apps/rssi/main.c ****  */
  22:apps/rssi/main.c **** 
  23:apps/rssi/main.c **** #include <stdint.h>
  24:apps/rssi/main.c **** #include <stdio.h>
  25:apps/rssi/main.c **** #include <string.h>
  26:apps/rssi/main.c **** #include <errno.h>
  27:apps/rssi/main.c **** 
  28:apps/rssi/main.c **** #include <debug.h>
  29:apps/rssi/main.c **** #include <memory.h>
  30:apps/rssi/main.c **** #include <delay.h>
  31:apps/rssi/main.c **** #include <byteorder.h>
  32:apps/rssi/main.c **** #include <rffe.h>
  33:apps/rssi/main.c **** #include <keypad.h>
  34:apps/rssi/main.c **** #include <board.h>
  35:apps/rssi/main.c **** #include <abb/twl3025.h>
  36:apps/rssi/main.c **** #include <rf/trf6151.h>
  37:apps/rssi/main.c **** #include <calypso/clock.h>
  38:apps/rssi/main.c **** #include <calypso/tpu.h>
  39:apps/rssi/main.c **** #include <calypso/tsp.h>
  40:apps/rssi/main.c **** #include <calypso/dsp.h>
  41:apps/rssi/main.c **** #include <calypso/irq.h>
  42:apps/rssi/main.c **** #include <calypso/misc.h>
  43:apps/rssi/main.c **** #include <calypso/buzzer.h>
  44:apps/rssi/main.c **** #include <comm/sercomm.h>
  45:apps/rssi/main.c **** #include <comm/timer.h>
  46:apps/rssi/main.c **** #include <fb/framebuffer.h>
  47:apps/rssi/main.c **** #include <layer1/sync.h>
  48:apps/rssi/main.c **** #include <layer1/async.h>
  49:apps/rssi/main.c **** #include <layer1/l23_api.h>
  50:apps/rssi/main.c **** #include <osmocom/gsm/rsl.h>
  51:apps/rssi/main.c **** #include <osmocom/gsm/protocol/gsm_04_08.h>
  52:apps/rssi/main.c **** #include <osmocom/gsm/gsm48_ie.h>
  53:apps/rssi/main.c **** #include <battery/battery.h>
  54:apps/rssi/main.c **** 
  55:apps/rssi/main.c **** enum key_codes key_code = KEY_INV;
  56:apps/rssi/main.c **** int key_pressed = 0;
  57:apps/rssi/main.c **** enum key_codes key_pressed_code;
  58:apps/rssi/main.c **** unsigned long key_pressed_when;
  59:apps/rssi/main.c **** unsigned int key_pressed_delay;
  60:apps/rssi/main.c **** 
  61:apps/rssi/main.c **** enum mode {
  62:apps/rssi/main.c **** 	MODE_MAIN,
  63:apps/rssi/main.c **** 	MODE_SPECTRUM,
  64:apps/rssi/main.c **** 	MODE_ARFCN,
  65:apps/rssi/main.c **** 	MODE_SYNC,
  66:apps/rssi/main.c **** 	MODE_RACH,
  67:apps/rssi/main.c **** } mode = MODE_MAIN;
  68:apps/rssi/main.c **** enum mode last_mode; /* where to return after entering ARFCN */
  69:apps/rssi/main.c **** 
  70:apps/rssi/main.c **** static uint16_t arfcn = 0, ul_arfcn;
  71:apps/rssi/main.c **** int pcs = 0;
  72:apps/rssi/main.c **** int uplink = 0;
  73:apps/rssi/main.c **** int max = 0;
  74:apps/rssi/main.c **** uint8_t power, max_power;
  75:apps/rssi/main.c **** char input[5];
  76:apps/rssi/main.c **** int cursor;
  77:apps/rssi/main.c **** 
  78:apps/rssi/main.c **** char *sync_result = NULL;
  79:apps/rssi/main.c **** char *sync_msg = "";
  80:apps/rssi/main.c **** 
  81:apps/rssi/main.c **** static struct band {
  82:apps/rssi/main.c **** 	int min, max, prev, next, freq_ul, freq_dl;
  83:apps/rssi/main.c **** } bands[] = {
  84:apps/rssi/main.c ****         { 128, 251, 124, 512, 8242, 8692 }, /* GSM 850 */
  85:apps/rssi/main.c ****         { 955, 124, 885, 128, 8762, 9212 }, /* P,E,R GSM */
  86:apps/rssi/main.c ****         { 512, 885, 251, 955, 17102, 18052 }, /* DCS 1800 */
  87:apps/rssi/main.c **** 	{ 0, 0, 0, 0, 0, 0},
  88:apps/rssi/main.c **** };
  89:apps/rssi/main.c **** 
  90:apps/rssi/main.c **** struct band *band;
  91:apps/rssi/main.c **** 
  92:apps/rssi/main.c **** #define PCS_MIN 512
  93:apps/rssi/main.c **** #define PCS_MAX 810
  94:apps/rssi/main.c **** #define DCS_MIN 512
  95:apps/rssi/main.c **** #define DCS_MAX 885
  96:apps/rssi/main.c **** #define PCS_UL 18502
  97:apps/rssi/main.c **** #define PCS_DL 19302
  98:apps/rssi/main.c **** 
  99:apps/rssi/main.c **** enum pm_mode {
 100:apps/rssi/main.c **** 	PM_IDLE,
 101:apps/rssi/main.c **** 	PM_SENT,
 102:apps/rssi/main.c **** 	PM_RANGE_SENT,
 103:apps/rssi/main.c **** 	PM_RANGE_RESULT,
 104:apps/rssi/main.c **** 	PM_RESULT,
 105:apps/rssi/main.c **** } pm_mode = PM_IDLE;
 106:apps/rssi/main.c **** 
 107:apps/rssi/main.c **** #define NUM_PM_DL 2
 108:apps/rssi/main.c **** #define NUM_PM_UL 10
 109:apps/rssi/main.c **** int pm_meas[NUM_PM_UL];
 110:apps/rssi/main.c **** int pm_count = 0;
 111:apps/rssi/main.c **** int pm_max = 2;
 112:apps/rssi/main.c **** uint8_t pm_spectrum[1024];
 113:apps/rssi/main.c **** int pm_scale = 1; /* scale measured power level */
 114:apps/rssi/main.c **** 
 115:apps/rssi/main.c **** #define TONE_JIFFIES ((HZ < 25) ? 1 : HZ / 25)
 116:apps/rssi/main.c **** int tone = 0;
 117:apps/rssi/main.c **** unsigned long tone_time;
 118:apps/rssi/main.c **** int tone_on = 0;
 119:apps/rssi/main.c **** 
 120:apps/rssi/main.c **** uint8_t bsic;
 121:apps/rssi/main.c **** uint8_t ul_levels[8], ul_max[8]; /* 8 uplink levels */
 122:apps/rssi/main.c **** uint8_t si_1[23];
 123:apps/rssi/main.c **** uint8_t si_2[23];
 124:apps/rssi/main.c **** uint8_t si_2bis[23];
 125:apps/rssi/main.c **** uint8_t si_2ter[23];
 126:apps/rssi/main.c **** uint8_t si_3[23];
 127:apps/rssi/main.c **** uint8_t si_4[23];
 128:apps/rssi/main.c **** uint16_t si_new = 0, ul_new;
 129:apps/rssi/main.c **** uint16_t mcc, mnc, lac, cell_id;
 130:apps/rssi/main.c **** int ccch_conf;
 131:apps/rssi/main.c **** int nb_num;
 132:apps/rssi/main.c **** struct gsm_sysinfo_freq freq[1024];
 133:apps/rssi/main.c **** #define NEIGH_LINES	((framebuffer->height - 25) / 8)
 134:apps/rssi/main.c **** 
 135:apps/rssi/main.c **** #define FREQ_TYPE_SERV		0x01 /* frequency of the serving cell */
 136:apps/rssi/main.c **** #define FREQ_TYPE_NCELL		0x1c /* frequency of the neighbor cell */
 137:apps/rssi/main.c **** #define FREQ_TYPE_NCELL_2	0x04 /* sub channel of SI 2 */
 138:apps/rssi/main.c **** #define FREQ_TYPE_NCELL_2bis	0x08 /* sub channel of SI 2bis */
 139:apps/rssi/main.c **** #define FREQ_TYPE_NCELL_2ter	0x10 /* sub channel of SI 2ter */
 140:apps/rssi/main.c **** 
 141:apps/rssi/main.c **** int rach = 0;
 142:apps/rssi/main.c **** struct gsm48_req_ref rach_ref;
 143:apps/rssi/main.c **** uint8_t rach_ra;
 144:apps/rssi/main.c **** unsigned long rach_when;
 145:apps/rssi/main.c **** uint8_t ta;
 146:apps/rssi/main.c **** 
 147:apps/rssi/main.c **** enum assign {
 148:apps/rssi/main.c **** 	ASSIGN_NONE,
 149:apps/rssi/main.c **** 	ASSIGN_NO_TX,
 150:apps/rssi/main.c **** 	ASSIGN_RESULT,
 151:apps/rssi/main.c **** 	ASSIGN_REJECT,
 152:apps/rssi/main.c **** 	ASSIGN_TIMEOUT,
 153:apps/rssi/main.c **** } assign;
 154:apps/rssi/main.c **** 
 155:apps/rssi/main.c **** /* UI */
 156:apps/rssi/main.c **** 
 157:apps/rssi/main.c **** static void print_display(char *text, int *y, int c)
 158:apps/rssi/main.c **** {
 159:apps/rssi/main.c **** 	/* skip lines, given by cursor */
 160:apps/rssi/main.c **** 	(*y)++;
 161:apps/rssi/main.c **** 	if (c >= (*y))
 162:apps/rssi/main.c **** 		return;
 163:apps/rssi/main.c **** 	/* skip, if end of display area is reached */
 164:apps/rssi/main.c **** 	if ((*y) - c > NEIGH_LINES)
 165:apps/rssi/main.c **** 		return;
 166:apps/rssi/main.c **** 
 167:apps/rssi/main.c **** 	fb_gotoxy(0, 20 + (((*y) - c - 1) << 3));
 168:apps/rssi/main.c **** 	fb_putstr(text, framebuffer->width);
 169:apps/rssi/main.c **** }
 170:apps/rssi/main.c **** 
 171:apps/rssi/main.c **** static void refresh_display(void)
 172:apps/rssi/main.c **** {
 173:apps/rssi/main.c **** 	char text[16];
 174:apps/rssi/main.c **** 	int bat = battery_info.battery_percent;
 175:apps/rssi/main.c **** 
 176:apps/rssi/main.c **** 	fb_clear();
 177:apps/rssi/main.c **** 
 178:apps/rssi/main.c **** 	/* header */
 179:apps/rssi/main.c **** 	fb_setbg(FB_COLOR_WHITE);
 180:apps/rssi/main.c **** 	if (mode != MODE_SPECTRUM && !(mode == MODE_SYNC && cursor < 0)) {
 181:apps/rssi/main.c **** 		fb_setfg(FB_COLOR_BLUE);
 182:apps/rssi/main.c **** 		fb_setfont(FB_FONT_HELVR08);
 183:apps/rssi/main.c **** 		fb_gotoxy(0, 7);
 184:apps/rssi/main.c **** 		fb_putstr("Osmocom RSSI", -1);
 185:apps/rssi/main.c **** 		fb_setfg(FB_COLOR_RGB(0xc0, 0xc0, 0x00));
 186:apps/rssi/main.c **** 		fb_setfont(FB_FONT_SYMBOLS);
 187:apps/rssi/main.c **** 		fb_gotoxy(framebuffer->width - 15, 8);
 188:apps/rssi/main.c **** 		if (bat >= 100 && (battery_info.flags & BATTERY_CHG_ENABLED)
 189:apps/rssi/main.c **** 		 && !(battery_info.flags & BATTERY_CHARGING))
 190:apps/rssi/main.c **** 			fb_putstr("@HHBC", framebuffer->width);
 191:apps/rssi/main.c **** 		else {
 192:apps/rssi/main.c **** 			sprintf(text, "@%c%c%cC", (bat >= 30) ? 'B':'A',
 193:apps/rssi/main.c **** 				(bat >= 60) ? 'B':'A', (bat >= 90) ? 'B':'A');
 194:apps/rssi/main.c **** 			fb_putstr(text, framebuffer->width);
 195:apps/rssi/main.c **** 		}
 196:apps/rssi/main.c **** 		fb_gotoxy(0, 8);
 197:apps/rssi/main.c **** 		sprintf(text, "%c%cE%c%c", (power >= 40) ? 'D':'G',
 198:apps/rssi/main.c **** 			(power >= 10) ? 'D':'G', (power >= 10) ? 'F':'G',
 199:apps/rssi/main.c **** 			(power >= 40) ? 'F':'G');
 200:apps/rssi/main.c **** 		fb_putstr(text, framebuffer->width);
 201:apps/rssi/main.c **** 		fb_setfg(FB_COLOR_GREEN);
 202:apps/rssi/main.c **** 		fb_gotoxy(0, 10);
 203:apps/rssi/main.c **** 		fb_boxto(framebuffer->width - 1, 10);
 204:apps/rssi/main.c **** 	}
 205:apps/rssi/main.c **** 	fb_setfg(FB_COLOR_BLACK);
 206:apps/rssi/main.c **** 	fb_setfont(FB_FONT_C64);
 207:apps/rssi/main.c **** 
 208:apps/rssi/main.c **** 	/* RACH */
 209:apps/rssi/main.c **** 	if (mode == MODE_RACH) {
 210:apps/rssi/main.c **** 		unsigned long elapsed = jiffies - rach_when;
 211:apps/rssi/main.c **** 
 212:apps/rssi/main.c **** 		fb_gotoxy(0,28);
 213:apps/rssi/main.c **** 		switch (assign) {
 214:apps/rssi/main.c **** 		case ASSIGN_NONE:
 215:apps/rssi/main.c **** 			fb_putstr("Rach sent...", -1);
 216:apps/rssi/main.c **** 			break;
 217:apps/rssi/main.c **** 		case ASSIGN_RESULT:
 218:apps/rssi/main.c **** 			sprintf(text, "TA = %d", ta);
 219:apps/rssi/main.c **** 			fb_putstr(text, -1);
 220:apps/rssi/main.c **** 			fb_gotoxy(0,36);
 221:apps/rssi/main.c **** 			sprintf(text, "(%dm)", ta * 554);
 222:apps/rssi/main.c **** 			fb_putstr(text, -1);
 223:apps/rssi/main.c **** 			break;
 224:apps/rssi/main.c **** 		case ASSIGN_REJECT:
 225:apps/rssi/main.c **** 			fb_putstr("Rejected!", -1);
 226:apps/rssi/main.c **** 			break;
 227:apps/rssi/main.c **** 		case ASSIGN_NO_TX:
 228:apps/rssi/main.c **** 			fb_putstr("TX disabled", -1);
 229:apps/rssi/main.c **** 			break;
 230:apps/rssi/main.c **** 		case ASSIGN_TIMEOUT:
 231:apps/rssi/main.c **** 			fb_putstr("Timeout", -1);
 232:apps/rssi/main.c **** 			break;
 233:apps/rssi/main.c **** 		}
 234:apps/rssi/main.c **** 		switch (assign) {
 235:apps/rssi/main.c **** 		case ASSIGN_RESULT:
 236:apps/rssi/main.c **** 		case ASSIGN_REJECT:
 237:apps/rssi/main.c **** 			fb_gotoxy(0,44);
 238:apps/rssi/main.c **** 			sprintf(text, "Delay:%ldms", elapsed * 1000 / HZ);
 239:apps/rssi/main.c **** 			fb_putstr(text, -1);
 240:apps/rssi/main.c **** 			break;
 241:apps/rssi/main.c **** 		default:
 242:apps/rssi/main.c **** 			break;
 243:apps/rssi/main.c **** 		}
 244:apps/rssi/main.c **** 	}
 245:apps/rssi/main.c **** 
 246:apps/rssi/main.c **** 	/* SYNC / UL levels */
 247:apps/rssi/main.c **** 	if (mode == MODE_SYNC && cursor < 0) {
 248:apps/rssi/main.c **** 		int i, tn, l;
 249:apps/rssi/main.c **** 		int offset = (framebuffer->width - 96) >> 1;
 250:apps/rssi/main.c **** 		int height = framebuffer->height - 25;
 251:apps/rssi/main.c **** 
 252:apps/rssi/main.c **** 		fb_setfont(FB_FONT_HELVR08);
 253:apps/rssi/main.c **** 		for (i = 0; i < 8; i++) {
 254:apps/rssi/main.c **** 			if (uplink)
 255:apps/rssi/main.c **** 				tn = (i + 3) & 7; /* UL is shifted by 3 */
 256:apps/rssi/main.c **** 			else
 257:apps/rssi/main.c **** 				tn = i;
 258:apps/rssi/main.c **** 			fb_setbg(FB_COLOR_WHITE);
 259:apps/rssi/main.c **** 			fb_gotoxy(offset + 12 * i, 7);
 260:apps/rssi/main.c **** 			l = (max) ? ul_max[tn] : ul_levels[tn];
 261:apps/rssi/main.c **** 			l = 110 - l;
 262:apps/rssi/main.c **** 			if (l >= 100)
 263:apps/rssi/main.c **** 				l -= 100;
 264:apps/rssi/main.c **** 			sprintf(text, "%02d", l);
 265:apps/rssi/main.c **** 			fb_putstr(text, framebuffer->width);
 266:apps/rssi/main.c **** 			fb_setbg(FB_COLOR_BLACK);
 267:apps/rssi/main.c **** 			fb_gotoxy(offset + 3 + 12 * i, height + 10);
 268:apps/rssi/main.c **** 			fb_boxto(offset + 3 + 12 * i + 5, height + 10 - ul_levels[tn] * height / 64);
 269:apps/rssi/main.c **** 			if (max) {
 270:apps/rssi/main.c **** 				fb_gotoxy(offset + 3 + 12 * i, height + 10 - ul_max[tn] * height / 64);
 271:apps/rssi/main.c **** 				fb_boxto(offset + 3 + 12 * i + 5, height + 10 - ul_max[tn] * height / 64);
 272:apps/rssi/main.c **** 			}
 273:apps/rssi/main.c **** 		}
 274:apps/rssi/main.c **** 		fb_setbg(FB_COLOR_TRANSP);
 275:apps/rssi/main.c **** 		if (max) {
 276:apps/rssi/main.c **** 			fb_setfg(FB_COLOR_RED);
 277:apps/rssi/main.c **** 			fb_gotoxy(framebuffer->width - 16, 15);
 278:apps/rssi/main.c **** 			fb_putstr("max", framebuffer->width);
 279:apps/rssi/main.c **** 		}
 280:apps/rssi/main.c **** 		fb_setfont(FB_FONT_C64);
 281:apps/rssi/main.c **** 		fb_setfg(FB_COLOR_BLUE);
 282:apps/rssi/main.c **** 		fb_gotoxy(0, 16);
 283:apps/rssi/main.c **** 		if (pcs && ul_arfcn >= PCS_MIN && ul_arfcn <= PCS_MAX)
 284:apps/rssi/main.c **** 			sprintf(text, "%4dP", ul_arfcn);
 285:apps/rssi/main.c **** 		else if (ul_arfcn >= DCS_MIN && ul_arfcn <= DCS_MAX)
 286:apps/rssi/main.c **** 			sprintf(text, "%4dD", ul_arfcn);
 287:apps/rssi/main.c **** 		else
 288:apps/rssi/main.c **** 			sprintf(text, "%4d ", ul_arfcn);
 289:apps/rssi/main.c **** 		fb_putstr(text, framebuffer->width);
 290:apps/rssi/main.c **** 		fb_setbg(FB_COLOR_WHITE);
 291:apps/rssi/main.c **** 		fb_setfg(FB_COLOR_BLACK);
 292:apps/rssi/main.c **** 	}
 293:apps/rssi/main.c **** 
 294:apps/rssi/main.c **** 	/* SYNC / SI */
 295:apps/rssi/main.c **** 	if (mode == MODE_SYNC && cursor == 0) {
 296:apps/rssi/main.c **** 		fb_gotoxy(0, 20);
 297:apps/rssi/main.c **** 		if (sync_msg[0] == 'o')
 298:apps/rssi/main.c **** 			sprintf(text, "BSIC%d/%d %4d", bsic >> 3, bsic & 7,
 299:apps/rssi/main.c **** 				power - 110);
 300:apps/rssi/main.c **** 		else
 301:apps/rssi/main.c **** 			sprintf(text, "Sync %s", sync_msg);
 302:apps/rssi/main.c **** 		fb_putstr(text, -1);
 303:apps/rssi/main.c **** 
 304:apps/rssi/main.c **** 		fb_gotoxy(0,28);
 305:apps/rssi/main.c **** 		text[0] = si_1[2] ? '1' : '-';
 306:apps/rssi/main.c **** 		text[1] = ' ';
 307:apps/rssi/main.c **** 		text[2] = si_2[2] ? '2' : '-';
 308:apps/rssi/main.c **** 		text[3] = ' ';
 309:apps/rssi/main.c **** 		text[4] = si_2bis[2] ? '2' : '-';
 310:apps/rssi/main.c **** 		text[5] = si_2bis[2] ? 'b' : ' ';
 311:apps/rssi/main.c **** 		text[6] = si_2ter[2] ? '2' : '-';
 312:apps/rssi/main.c **** 		text[7] = si_2ter[2] ? 't' : ' ';
 313:apps/rssi/main.c **** 		text[8] = ' ';
 314:apps/rssi/main.c **** 		text[9] = si_3[2] ? '3' : '-';
 315:apps/rssi/main.c **** 		text[10] = ' ';
 316:apps/rssi/main.c **** 		text[11] = si_4[2] ? '4' : '-';
 317:apps/rssi/main.c **** 		text[12] = '\0';
 318:apps/rssi/main.c **** 		fb_putstr(text, -1);
 319:apps/rssi/main.c **** 
 320:apps/rssi/main.c **** 		fb_gotoxy(0, 36);
 321:apps/rssi/main.c **** 		fb_putstr("MCC MNC LAC ", -1);
 322:apps/rssi/main.c **** 		fb_gotoxy(0, 44);
 323:apps/rssi/main.c **** 		if (mcc) {
 324:apps/rssi/main.c **** 			if ((mnc & 0x00f) == 0x00f)
 325:apps/rssi/main.c **** 				sprintf(text, "%3x %02x  %04x", mcc, mnc >> 4, lac);
 326:apps/rssi/main.c **** 			else
 327:apps/rssi/main.c **** 				sprintf(text, "%3x %03x %04x", mcc, mnc, lac);
 328:apps/rssi/main.c **** 			fb_putstr(text, -1);
 329:apps/rssi/main.c **** 		} else
 330:apps/rssi/main.c **** 			fb_putstr("--- --- ----", -1);
 331:apps/rssi/main.c **** 		fb_gotoxy(0, 52);
 332:apps/rssi/main.c **** 		if (si_3[2]) {
 333:apps/rssi/main.c **** 			sprintf(text, "cell id:%04x", cell_id);
 334:apps/rssi/main.c **** 			fb_putstr(text, -1);
 335:apps/rssi/main.c **** 		} else
 336:apps/rssi/main.c **** 			fb_putstr("cell id:----", -1);
 337:apps/rssi/main.c **** 	}
 338:apps/rssi/main.c **** 
 339:apps/rssi/main.c **** 	/* SYNC / neighbour cells */
 340:apps/rssi/main.c **** 	if (mode == MODE_SYNC && cursor > 0) {
 341:apps/rssi/main.c **** 		int i, y = 0;
 342:apps/rssi/main.c **** 
 343:apps/rssi/main.c **** 		text[0] = '\0';
 344:apps/rssi/main.c **** 		for (i = 0; i < 1024; i++) {
 345:apps/rssi/main.c **** 			if (freq[i].mask & FREQ_TYPE_SERV) {
 346:apps/rssi/main.c **** 				if (!text[0])
 347:apps/rssi/main.c **** 					sprintf(text, "S: %4d", i);
 348:apps/rssi/main.c **** 				else {
 349:apps/rssi/main.c **** 					sprintf(text + 7, " %4d", i);
 350:apps/rssi/main.c **** 					print_display(text, &y, cursor - 1);
 351:apps/rssi/main.c **** 					text[0] = '\0';
 352:apps/rssi/main.c **** 				}
 353:apps/rssi/main.c **** 			}
 354:apps/rssi/main.c **** 		}
 355:apps/rssi/main.c **** 		if (text[0])
 356:apps/rssi/main.c **** 			print_display(text, &y, cursor - 1);
 357:apps/rssi/main.c **** 		text[0] = '\0';
 358:apps/rssi/main.c **** 		for (i = 0; i < 1024; i++) {
 359:apps/rssi/main.c **** 			if (freq[i].mask & FREQ_TYPE_NCELL) {
 360:apps/rssi/main.c **** 				if (!text[0])
 361:apps/rssi/main.c **** 					sprintf(text, "N: %4d", i);
 362:apps/rssi/main.c **** 				else {
 363:apps/rssi/main.c **** 					sprintf(text + 7, " %4d", i);
 364:apps/rssi/main.c **** 					print_display(text, &y, cursor - 1);
 365:apps/rssi/main.c **** 					text[0] = '\0';
 366:apps/rssi/main.c **** 				}
 367:apps/rssi/main.c **** 			}
 368:apps/rssi/main.c **** 		}
 369:apps/rssi/main.c **** 		if (text[0])
 370:apps/rssi/main.c **** 			print_display(text, &y, cursor - 1);
 371:apps/rssi/main.c **** 		nb_num = y;
 372:apps/rssi/main.c **** 	}
 373:apps/rssi/main.c **** 
 374:apps/rssi/main.c **** 	/* ARFCN */
 375:apps/rssi/main.c **** 	if (mode == MODE_MAIN || mode == MODE_ARFCN) {
 376:apps/rssi/main.c **** 		fb_gotoxy(0, 20);
 377:apps/rssi/main.c **** 		if (mode == MODE_ARFCN)
 378:apps/rssi/main.c **** 			sprintf(text, "ARFCN %s", input);
 379:apps/rssi/main.c **** 		else if (pcs && arfcn >= PCS_MIN && arfcn <= PCS_MAX)
 380:apps/rssi/main.c **** 			sprintf(text, "ARFCN %dPCS", arfcn);
 381:apps/rssi/main.c **** 		else if (arfcn >= DCS_MIN && arfcn <= DCS_MAX)
 382:apps/rssi/main.c **** 			sprintf(text, "ARFCN %dDCS", arfcn);
 383:apps/rssi/main.c **** 		else
 384:apps/rssi/main.c **** 			sprintf(text, "ARFCN %d", arfcn);
 385:apps/rssi/main.c **** 		fb_putstr(text,framebuffer->width);
 386:apps/rssi/main.c **** 	}
 387:apps/rssi/main.c **** 
 388:apps/rssi/main.c **** 	/* cursor */
 389:apps/rssi/main.c **** 	if (mode == MODE_ARFCN) {
 390:apps/rssi/main.c **** 		fb_setfg(FB_COLOR_WHITE);
 391:apps/rssi/main.c **** 		fb_setbg(FB_COLOR_BLUE);
 392:apps/rssi/main.c **** 		fb_putstr(" ", framebuffer->width);
 393:apps/rssi/main.c **** 		fb_setfg(FB_COLOR_BLACK);
 394:apps/rssi/main.c **** 		fb_setbg(FB_COLOR_WHITE);
 395:apps/rssi/main.c **** 	}
 396:apps/rssi/main.c **** 
 397:apps/rssi/main.c **** 	/* Frequency / power */
 398:apps/rssi/main.c **** 	if (mode == MODE_MAIN) {
 399:apps/rssi/main.c **** 		int f;
 400:apps/rssi/main.c **** 
 401:apps/rssi/main.c **** 		if (pcs && arfcn >= PCS_MIN && arfcn <= PCS_MAX) {
 402:apps/rssi/main.c **** 			if (uplink)
 403:apps/rssi/main.c **** 				f = PCS_UL;
 404:apps/rssi/main.c **** 			else
 405:apps/rssi/main.c **** 				f = PCS_DL;
 406:apps/rssi/main.c **** 		} else if (uplink)
 407:apps/rssi/main.c **** 			f = band->freq_ul;
 408:apps/rssi/main.c **** 		else
 409:apps/rssi/main.c **** 			f = band->freq_dl;
 410:apps/rssi/main.c **** 		f += ((arfcn - band->min) & 1023) << 1;
 411:apps/rssi/main.c **** 
 412:apps/rssi/main.c **** 		fb_gotoxy(0, 30);
 413:apps/rssi/main.c **** 		sprintf(text, "Freq. %d.%d", f / 10, f % 10);
 414:apps/rssi/main.c **** 		fb_putstr(text,framebuffer->width);
 415:apps/rssi/main.c **** 
 416:apps/rssi/main.c **** 		fb_gotoxy(0, 40);
 417:apps/rssi/main.c **** 		sprintf(text, "Power %d", ((max) ? max_power : power) - 110);
 418:apps/rssi/main.c **** 		fb_putstr(text, framebuffer->width);
 419:apps/rssi/main.c **** 		if (max) {
 420:apps/rssi/main.c **** 			fb_setfont(FB_FONT_HELVR08);
 421:apps/rssi/main.c **** 			fb_setfg(FB_COLOR_RED);
 422:apps/rssi/main.c **** 			fb_gotoxy(framebuffer->width - 16, 39);
 423:apps/rssi/main.c **** 			fb_putstr("max", framebuffer->width);
 424:apps/rssi/main.c **** 			fb_setfont(FB_FONT_C64);
 425:apps/rssi/main.c **** 			fb_setfg(FB_COLOR_BLACK);
 426:apps/rssi/main.c **** 		}
 427:apps/rssi/main.c **** 		fb_setbg(FB_COLOR_BLACK);
 428:apps/rssi/main.c **** 		fb_gotoxy(0, 45);
 429:apps/rssi/main.c **** 		fb_boxto(framebuffer->width * power / 64, 50);
 430:apps/rssi/main.c **** 		if (max) {
 431:apps/rssi/main.c **** 			fb_gotoxy(framebuffer->width * max_power / 64 ,45);
 432:apps/rssi/main.c **** 			fb_boxto(framebuffer->width * max_power / 64, 50);
 433:apps/rssi/main.c **** 		}
 434:apps/rssi/main.c **** 		fb_setbg(FB_COLOR_WHITE);
 435:apps/rssi/main.c **** 	}
 436:apps/rssi/main.c **** 
 437:apps/rssi/main.c **** 	/* spectrum */
 438:apps/rssi/main.c **** 	if (mode == MODE_SPECTRUM) {
 439:apps/rssi/main.c **** 		int i;
 440:apps/rssi/main.c **** 		uint16_t a, e, p;
 441:apps/rssi/main.c **** 		int height = framebuffer->height - 25;
 442:apps/rssi/main.c **** 
 443:apps/rssi/main.c **** 		fb_gotoxy(0, 8);
 444:apps/rssi/main.c **** 		if (pcs && arfcn >= PCS_MIN && arfcn <= PCS_MAX)
 445:apps/rssi/main.c **** 			sprintf(text, "%4dP", arfcn);
 446:apps/rssi/main.c **** 		else if (arfcn >= DCS_MIN && arfcn <= DCS_MAX)
 447:apps/rssi/main.c **** 			sprintf(text, "%4dD", arfcn);
 448:apps/rssi/main.c **** 		else
 449:apps/rssi/main.c **** 			sprintf(text, "%4d ", arfcn);
 450:apps/rssi/main.c **** 		sprintf(text + 5, "   %4d", pm_spectrum[arfcn & 1023] - 110);
 451:apps/rssi/main.c **** 		fb_putstr(text, -1);
 452:apps/rssi/main.c **** 		fb_setfg(FB_COLOR_RED);
 453:apps/rssi/main.c **** 		if (max) {
 454:apps/rssi/main.c **** 			fb_setfont(FB_FONT_HELVR08);
 455:apps/rssi/main.c **** 			fb_gotoxy(framebuffer->width - 16,15);
 456:apps/rssi/main.c **** 			fb_putstr("max", framebuffer->width);
 457:apps/rssi/main.c **** 			fb_setfont(FB_FONT_C64);
 458:apps/rssi/main.c **** 		}
 459:apps/rssi/main.c **** 		if (pm_scale != 1) {
 460:apps/rssi/main.c **** 			fb_setfont(FB_FONT_HELVR08);
 461:apps/rssi/main.c **** 			fb_gotoxy(1, 15);
 462:apps/rssi/main.c **** 			sprintf(text, "x%d", pm_scale);
 463:apps/rssi/main.c **** 			fb_putstr(text, framebuffer->width);
 464:apps/rssi/main.c **** 			fb_setfont(FB_FONT_C64);
 465:apps/rssi/main.c **** 		}
 466:apps/rssi/main.c **** 		fb_setfg(FB_COLOR_BLACK);
 467:apps/rssi/main.c **** 		if (pcs && arfcn >= PCS_MIN && arfcn <= PCS_MAX) {
 468:apps/rssi/main.c **** 			a = PCS_MIN;
 469:apps/rssi/main.c **** 			e = PCS_MAX;
 470:apps/rssi/main.c **** 		} else {
 471:apps/rssi/main.c **** 			a = band->min;
 472:apps/rssi/main.c **** 			e = band->max;
 473:apps/rssi/main.c **** 		}
 474:apps/rssi/main.c **** 		for (i = 0; i < framebuffer->width; i++) {
 475:apps/rssi/main.c **** 			p = (arfcn + i - (framebuffer->width >> 1)) & 1023;
 476:apps/rssi/main.c **** 			if ((((p - a) & 1023) & 512))
 477:apps/rssi/main.c **** 				continue;
 478:apps/rssi/main.c **** 			if ((((e - p) & 1023) & 512))
 479:apps/rssi/main.c **** 				continue;
 480:apps/rssi/main.c **** 			p = (pm_spectrum[p] * pm_scale * height / 64);
 481:apps/rssi/main.c **** 			if (p > height)
 482:apps/rssi/main.c **** 				p = height;
 483:apps/rssi/main.c **** 			if (i == (framebuffer->width >> 1))
 484:apps/rssi/main.c **** 				fb_setfg(FB_COLOR_RED);
 485:apps/rssi/main.c **** 			fb_gotoxy(i, height + 10 - p);
 486:apps/rssi/main.c **** 			fb_boxto(i, height + 10);
 487:apps/rssi/main.c **** 			if (i == (framebuffer->width >> 1))
 488:apps/rssi/main.c **** 				fb_setfg(FB_COLOR_BLACK);
 489:apps/rssi/main.c **** 		}
 490:apps/rssi/main.c **** 		i = framebuffer->width >> 1;
 491:apps/rssi/main.c **** 		fb_gotoxy(i, 0);
 492:apps/rssi/main.c **** 		fb_boxto(i, 4);
 493:apps/rssi/main.c **** 		fb_gotoxy(i, height + 10);
 494:apps/rssi/main.c **** 		fb_boxto(i, height + 14);
 495:apps/rssi/main.c **** 	}
 496:apps/rssi/main.c **** 
 497:apps/rssi/main.c **** 	/* footer */
 498:apps/rssi/main.c **** 	fb_setfg(FB_COLOR_GREEN);
 499:apps/rssi/main.c **** 	fb_gotoxy(0, framebuffer->height - 10);
 500:apps/rssi/main.c **** 	fb_boxto(framebuffer->width-1, framebuffer->height - 10);
 501:apps/rssi/main.c **** 	fb_gotoxy(0, framebuffer->height - 1);
 502:apps/rssi/main.c **** 	fb_setfg(FB_COLOR_RED);
 503:apps/rssi/main.c **** 	if (mode == MODE_ARFCN)
 504:apps/rssi/main.c **** 		sprintf(text, "%s   %s", (cursor) ? "del " : "back",
 505:apps/rssi/main.c **** 			(cursor) ? "enter" : "     ");
 506:apps/rssi/main.c **** 	else if (mode == MODE_SYNC && cursor < 0)
 507:apps/rssi/main.c **** 		sprintf(text, "%s      %s", "back",
 508:apps/rssi/main.c **** 			(uplink) ? "UL" : "DL");
 509:apps/rssi/main.c **** 	else if (mode == MODE_SYNC || mode == MODE_RACH)
 510:apps/rssi/main.c **** 		sprintf(text, "%s        ", "back");
 511:apps/rssi/main.c **** 	else
 512:apps/rssi/main.c **** 		sprintf(text, "%s       %s", (pcs) ? "PCS" : "DCS",
 513:apps/rssi/main.c **** 			(uplink) ? "UL" : "DL");
 514:apps/rssi/main.c **** 	fb_putstr(text, -1);
 515:apps/rssi/main.c **** 	fb_setfg(FB_COLOR_BLACK);
 516:apps/rssi/main.c **** 	fb_setfont(FB_FONT_HELVR08);
 517:apps/rssi/main.c **** 	fb_gotoxy(0, framebuffer->height - 2);
 518:apps/rssi/main.c **** 	sprintf(text, "%d", tone / 25);
 519:apps/rssi/main.c **** 	fb_putstr(text, -1);
 520:apps/rssi/main.c **** 
 521:apps/rssi/main.c **** 	fb_flush();
 522:apps/rssi/main.c **** }
 523:apps/rssi/main.c **** 
 524:apps/rssi/main.c **** static void exit_arfcn(void)
 525:apps/rssi/main.c **** {
 526:apps/rssi/main.c **** 	mode = last_mode;
 527:apps/rssi/main.c **** 	refresh_display();
 528:apps/rssi/main.c **** }
 529:apps/rssi/main.c **** 
 530:apps/rssi/main.c **** static void enter_arfcn(enum key_codes code)
 531:apps/rssi/main.c **** {
 532:apps/rssi/main.c **** 	/* enter mode */
 533:apps/rssi/main.c **** 	if (mode != MODE_ARFCN) {
 534:apps/rssi/main.c **** 		last_mode = mode;
 535:apps/rssi/main.c **** 		mode = MODE_ARFCN;
 536:apps/rssi/main.c **** 		input[0] = code - KEY_0 + '0';
 537:apps/rssi/main.c **** 		input[1] = '\0';
 538:apps/rssi/main.c **** 		cursor = 1;
 539:apps/rssi/main.c **** 		refresh_display();
 540:apps/rssi/main.c **** 		return;
 541:apps/rssi/main.c **** 	}
 542:apps/rssi/main.c **** 
 543:apps/rssi/main.c **** 	if (code == KEY_LEFT_SB) {
 544:apps/rssi/main.c **** 		/* back */
 545:apps/rssi/main.c **** 		if (cursor == 0) {
 546:apps/rssi/main.c **** 			exit_arfcn();
 547:apps/rssi/main.c **** 			return;
 548:apps/rssi/main.c **** 		}
 549:apps/rssi/main.c **** 		/* delete */
 550:apps/rssi/main.c **** 		cursor--;
 551:apps/rssi/main.c **** 		input[cursor] = '\0';
 552:apps/rssi/main.c **** 		refresh_display();
 553:apps/rssi/main.c **** 		return;
 554:apps/rssi/main.c **** 	}
 555:apps/rssi/main.c **** 
 556:apps/rssi/main.c **** 	if (code == KEY_RIGHT_SB) {
 557:apps/rssi/main.c **** 		int check = 0;
 558:apps/rssi/main.c **** 		int i;
 559:apps/rssi/main.c **** 		struct band *temp = NULL;
 560:apps/rssi/main.c **** 
 561:apps/rssi/main.c **** 		/* nothing entered */
 562:apps/rssi/main.c **** 		if (cursor == 0) {
 563:apps/rssi/main.c **** 			return;
 564:apps/rssi/main.c **** 		}
 565:apps/rssi/main.c **** 		for (i = 0; i < cursor; i++)
 566:apps/rssi/main.c **** 			check = (check << 3) + (check << 1) + input[i] - '0';
 567:apps/rssi/main.c **** 
 568:apps/rssi/main.c **** 		/* check */
 569:apps/rssi/main.c **** 		for (i = 0; bands[i].max; i++) {
 570:apps/rssi/main.c **** 			temp = &bands[i];
 571:apps/rssi/main.c **** 			if (temp->min < temp->max) {
 572:apps/rssi/main.c **** 				if (check >= temp->min && check <= temp->max)
 573:apps/rssi/main.c **** 					break;
 574:apps/rssi/main.c **** 			} else {
 575:apps/rssi/main.c **** 				if (check >= temp->min || check <= temp->max)
 576:apps/rssi/main.c **** 					break;
 577:apps/rssi/main.c **** 			}
 578:apps/rssi/main.c **** 		}
 579:apps/rssi/main.c **** 		if (!bands[i].max)
 580:apps/rssi/main.c **** 			return;
 581:apps/rssi/main.c **** 		if (check > 1023)
 582:apps/rssi/main.c **** 			return;
 583:apps/rssi/main.c **** 		arfcn = check;
 584:apps/rssi/main.c **** 		band = temp;
 585:apps/rssi/main.c **** 		mode = last_mode;
 586:apps/rssi/main.c **** 		refresh_display();
 587:apps/rssi/main.c **** 		return;
 588:apps/rssi/main.c **** 	}
 589:apps/rssi/main.c **** 
 590:apps/rssi/main.c **** 	if (cursor == 4)
 591:apps/rssi/main.c **** 		return;
 592:apps/rssi/main.c **** 
 593:apps/rssi/main.c **** 	input[cursor] = code - KEY_0 + '0';
 594:apps/rssi/main.c **** 	cursor++;
 595:apps/rssi/main.c **** 	input[cursor] = '\0';
 596:apps/rssi/main.c **** 	refresh_display();
 597:apps/rssi/main.c **** }
 598:apps/rssi/main.c **** 
 599:apps/rssi/main.c **** static int inc_dec_arfcn(int inc)
 600:apps/rssi/main.c **** {
 601:apps/rssi/main.c **** 	int i;
 602:apps/rssi/main.c **** 
 603:apps/rssi/main.c **** 	/* select current band */
 604:apps/rssi/main.c **** 	for (i = 0; bands[i].max; i++) {
 605:apps/rssi/main.c **** 		band = &bands[i];
 606:apps/rssi/main.c **** 		if (band->min < band->max) {
 607:apps/rssi/main.c **** 			if (arfcn >= band->min && arfcn <= band->max)
 608:apps/rssi/main.c **** 				break;
 609:apps/rssi/main.c **** 		} else {
 610:apps/rssi/main.c **** 			if (arfcn >= band->min || arfcn <= band->max)
 611:apps/rssi/main.c **** 				break;
 612:apps/rssi/main.c **** 		}
 613:apps/rssi/main.c **** 	}
 614:apps/rssi/main.c **** 	if (!bands[i].max)
 615:apps/rssi/main.c **** 		return -EINVAL;
 616:apps/rssi/main.c **** 
 617:apps/rssi/main.c **** 	if (inc) {
 618:apps/rssi/main.c **** 		if (arfcn == band->max)
 619:apps/rssi/main.c **** 			arfcn = band->next;
 620:apps/rssi/main.c **** 		else if (arfcn == 1023)
 621:apps/rssi/main.c **** 			arfcn = 0;
 622:apps/rssi/main.c **** 		else
 623:apps/rssi/main.c **** 			arfcn++;
 624:apps/rssi/main.c **** 	} else {
 625:apps/rssi/main.c **** 		if (arfcn == band->min)
 626:apps/rssi/main.c **** 			arfcn = band->prev;
 627:apps/rssi/main.c **** 		else if (arfcn == 0)
 628:apps/rssi/main.c **** 			arfcn = 1023;
 629:apps/rssi/main.c **** 		else
 630:apps/rssi/main.c **** 			arfcn--;
 631:apps/rssi/main.c **** 	}
 632:apps/rssi/main.c **** 	/* select next band */
 633:apps/rssi/main.c **** 	for (i = 0; bands[i].max; i++) {
 634:apps/rssi/main.c **** 		band = &bands[i];
 635:apps/rssi/main.c **** 		if (band->min < band->max) {
 636:apps/rssi/main.c **** 			if (arfcn >= band->min && arfcn <= band->max)
 637:apps/rssi/main.c **** 				break;
 638:apps/rssi/main.c **** 		} else {
 639:apps/rssi/main.c **** 			if (arfcn >= band->min || arfcn <= band->max)
 640:apps/rssi/main.c **** 				break;
 641:apps/rssi/main.c **** 		}
 642:apps/rssi/main.c **** 	}
 643:apps/rssi/main.c **** 	if (!bands[i].max)
 644:apps/rssi/main.c **** 		return -EINVAL;
 645:apps/rssi/main.c **** 
 646:apps/rssi/main.c **** 	refresh_display();
 647:apps/rssi/main.c **** 
 648:apps/rssi/main.c **** 	return 0;
 649:apps/rssi/main.c **** }
 650:apps/rssi/main.c **** 
 651:apps/rssi/main.c **** static void request_ul_levels(uint16_t a);
 652:apps/rssi/main.c **** 
 653:apps/rssi/main.c **** static int inc_dec_ul_arfcn(int inc)
 654:apps/rssi/main.c **** {
 655:apps/rssi/main.c **** 	uint16_t a;
 656:apps/rssi/main.c **** 
 657:apps/rssi/main.c **** 	/* loop until we hit a serving cell or our current bcch arfcn */
 658:apps/rssi/main.c **** 	if (inc) {
 659:apps/rssi/main.c **** 		for (a = (ul_arfcn + 1) & 1023; a != (arfcn & 1023);
 660:apps/rssi/main.c **** 					a = (a + 1) & 1023) {
 661:apps/rssi/main.c **** 			if ((freq[a].mask & FREQ_TYPE_SERV))
 662:apps/rssi/main.c **** 				break;
 663:apps/rssi/main.c **** 		}
 664:apps/rssi/main.c **** 	} else {
 665:apps/rssi/main.c **** 		for (a = (ul_arfcn - 1) & 1023; a != (arfcn & 1023);
 666:apps/rssi/main.c **** 					a = (a - 1) & 1023) {
 667:apps/rssi/main.c **** 			if ((freq[a].mask & FREQ_TYPE_SERV))
 668:apps/rssi/main.c **** 				break;
 669:apps/rssi/main.c **** 		}
 670:apps/rssi/main.c **** 	}
 671:apps/rssi/main.c **** 	ul_arfcn = a;
 672:apps/rssi/main.c **** 
 673:apps/rssi/main.c **** 	refresh_display();
 674:apps/rssi/main.c **** 
 675:apps/rssi/main.c **** 	request_ul_levels(a);
 676:apps/rssi/main.c **** 
 677:apps/rssi/main.c **** 	return 0;
 678:apps/rssi/main.c **** }
 679:apps/rssi/main.c **** 
 680:apps/rssi/main.c **** static void toggle_dcs_pcs(void)
 681:apps/rssi/main.c **** {
 682:apps/rssi/main.c **** 	pcs = !pcs;
 683:apps/rssi/main.c **** 	refresh_display();
 684:apps/rssi/main.c **** }
 685:apps/rssi/main.c **** 
 686:apps/rssi/main.c **** static void toggle_up_down(void)
 687:apps/rssi/main.c **** {
 688:apps/rssi/main.c **** 	uplink = !uplink;
 689:apps/rssi/main.c **** 	refresh_display();
 690:apps/rssi/main.c **** 
 691:apps/rssi/main.c **** 	if (mode == MODE_SYNC && cursor < 0)
 692:apps/rssi/main.c **** 		request_ul_levels(ul_arfcn);
 693:apps/rssi/main.c **** }
 694:apps/rssi/main.c **** 
 695:apps/rssi/main.c **** static void toggle_spectrum(void)
 696:apps/rssi/main.c **** {
 697:apps/rssi/main.c **** 	if (mode == MODE_MAIN) {
 698:apps/rssi/main.c **** 		mode = MODE_SPECTRUM;
 699:apps/rssi/main.c **** 		pm_mode = PM_IDLE;
 700:apps/rssi/main.c **** 	} else if (mode == MODE_SPECTRUM) {
 701:apps/rssi/main.c **** 		mode = MODE_MAIN;
 702:apps/rssi/main.c **** 		pm_mode = PM_IDLE;
 703:apps/rssi/main.c **** 	}
 704:apps/rssi/main.c **** 	l1s_reset();
 705:apps/rssi/main.c **** 	l1s_reset_hw();
 706:apps/rssi/main.c **** 	pm_count = 0;
 707:apps/rssi/main.c **** 	refresh_display();
 708:apps/rssi/main.c **** }
 709:apps/rssi/main.c **** 
 710:apps/rssi/main.c **** static void tone_inc_dec(int inc)
 711:apps/rssi/main.c **** {
 712:apps/rssi/main.c **** 	if (inc) {
 713:apps/rssi/main.c **** 		if (tone + 25 <= 255)
 714:apps/rssi/main.c **** 			tone += 25;
 715:apps/rssi/main.c **** 	} else {
 716:apps/rssi/main.c **** 		if (tone - 25 >= 0)
 717:apps/rssi/main.c **** 			tone -= 25;
 718:apps/rssi/main.c **** 	}
 719:apps/rssi/main.c **** 
 720:apps/rssi/main.c **** 	refresh_display();
 721:apps/rssi/main.c **** }
 722:apps/rssi/main.c **** 
 723:apps/rssi/main.c **** static void hold_max(void)
 724:apps/rssi/main.c **** {
 725:apps/rssi/main.c **** 	max = !max;
 726:apps/rssi/main.c **** 	max_power = power;
 727:apps/rssi/main.c **** 	refresh_display();
 728:apps/rssi/main.c **** }
 729:apps/rssi/main.c **** 
 730:apps/rssi/main.c **** static int inc_dec_neighbour(int inc)
 731:apps/rssi/main.c **** {
 732:apps/rssi/main.c **** 	if (inc) {
 733:apps/rssi/main.c **** 		if (cursor > 0 && cursor - 1 >= (nb_num - NEIGH_LINES))
 734:apps/rssi/main.c **** 			return -EINVAL;
 735:apps/rssi/main.c **** 		cursor++;
 736:apps/rssi/main.c **** 	} else {
 737:apps/rssi/main.c **** 		if (cursor < 0)
 738:apps/rssi/main.c **** 			return -EINVAL;
 739:apps/rssi/main.c **** 		cursor--;
 740:apps/rssi/main.c **** 	}
 741:apps/rssi/main.c **** 
 742:apps/rssi/main.c **** 	refresh_display();
 743:apps/rssi/main.c **** 
 744:apps/rssi/main.c **** 	return 0;
 745:apps/rssi/main.c **** }
 746:apps/rssi/main.c **** 
 747:apps/rssi/main.c **** static int inc_dec_spectrum(int inc)
 748:apps/rssi/main.c **** {
 749:apps/rssi/main.c **** 	if (inc) {
 750:apps/rssi/main.c **** 		pm_scale <<= 1;
 751:apps/rssi/main.c **** 		if (pm_scale > 8)
 752:apps/rssi/main.c **** 			pm_scale = 8;
 753:apps/rssi/main.c **** 	} else {
 754:apps/rssi/main.c **** 		pm_scale >>= 1;
 755:apps/rssi/main.c **** 		if (pm_scale < 1)
 756:apps/rssi/main.c **** 			pm_scale = 1;
 757:apps/rssi/main.c **** 	}
 758:apps/rssi/main.c **** 
 759:apps/rssi/main.c **** 	refresh_display();
 760:apps/rssi/main.c **** 
 761:apps/rssi/main.c **** 	return 0;
 762:apps/rssi/main.c **** }
 763:apps/rssi/main.c **** 
 764:apps/rssi/main.c **** static void enter_sync(void);
 765:apps/rssi/main.c **** static void exit_sync(void);
 766:apps/rssi/main.c **** 
 767:apps/rssi/main.c **** static void enter_rach(void);
 768:apps/rssi/main.c **** static void exit_rach(void);
 769:apps/rssi/main.c **** 
 770:apps/rssi/main.c **** static void handle_key_code()
 771:apps/rssi/main.c **** {
 772:apps/rssi/main.c **** 	/* key repeat */
 773:apps/rssi/main.c **** 	if (key_pressed) {
 774:apps/rssi/main.c **** 		unsigned long elapsed = jiffies - key_pressed_when;
 775:apps/rssi/main.c **** 		if (elapsed > key_pressed_delay) {
 776:apps/rssi/main.c **** 			key_pressed_when = jiffies;
 777:apps/rssi/main.c **** 			key_pressed_delay = HZ / 10;
 778:apps/rssi/main.c **** 			/* only repeat these keys */
 779:apps/rssi/main.c **** 			if (key_pressed_code == KEY_LEFT
 780:apps/rssi/main.c **** 			 || key_pressed_code == KEY_RIGHT)
 781:apps/rssi/main.c **** 				key_code = key_pressed_code;
 782:apps/rssi/main.c **** 		}
 783:apps/rssi/main.c **** 	}
 784:apps/rssi/main.c **** 
 785:apps/rssi/main.c **** 	if (key_code == KEY_INV)
 786:apps/rssi/main.c **** 		return;
 787:apps/rssi/main.c **** 
 788:apps/rssi/main.c **** 	/* do later, do not disturb tone */
 789:apps/rssi/main.c **** 	if (tone_on)
 790:apps/rssi/main.c **** 		return;
 791:apps/rssi/main.c **** 
 792:apps/rssi/main.c **** 	switch (key_code) {
 793:apps/rssi/main.c **** 	case KEY_0:
 794:apps/rssi/main.c **** 	case KEY_1:
 795:apps/rssi/main.c **** 	case KEY_2:
 796:apps/rssi/main.c **** 	case KEY_3:
 797:apps/rssi/main.c **** 	case KEY_4:
 798:apps/rssi/main.c **** 	case KEY_5:
 799:apps/rssi/main.c **** 	case KEY_6:
 800:apps/rssi/main.c **** 	case KEY_7:
 801:apps/rssi/main.c **** 	case KEY_8:
 802:apps/rssi/main.c **** 	case KEY_9:
 803:apps/rssi/main.c **** 		if (mode == MODE_MAIN || mode == MODE_SPECTRUM || mode == MODE_ARFCN)
 804:apps/rssi/main.c **** 			enter_arfcn(key_code);
 805:apps/rssi/main.c **** 		break;
 806:apps/rssi/main.c **** 	case KEY_UP:
 807:apps/rssi/main.c **** 		if (mode == MODE_MAIN)
 808:apps/rssi/main.c **** 			tone_inc_dec(1);
 809:apps/rssi/main.c **** 		else if (mode == MODE_SYNC)
 810:apps/rssi/main.c **** 			inc_dec_neighbour(0);
 811:apps/rssi/main.c **** 		else if (mode == MODE_SPECTRUM)
 812:apps/rssi/main.c **** 			inc_dec_spectrum(1);
 813:apps/rssi/main.c **** 		break;
 814:apps/rssi/main.c **** 	case KEY_DOWN:
 815:apps/rssi/main.c **** 		if (mode == MODE_MAIN)
 816:apps/rssi/main.c **** 			tone_inc_dec(0);
 817:apps/rssi/main.c **** 		else if (mode == MODE_SYNC)
 818:apps/rssi/main.c **** 			inc_dec_neighbour(1);
 819:apps/rssi/main.c **** 		else if (mode == MODE_SPECTRUM)
 820:apps/rssi/main.c **** 			inc_dec_spectrum(0);
 821:apps/rssi/main.c **** 		break;
 822:apps/rssi/main.c **** 	case KEY_RIGHT:
 823:apps/rssi/main.c **** 		if (mode == MODE_MAIN || mode == MODE_SPECTRUM)
 824:apps/rssi/main.c **** 			inc_dec_arfcn(1);
 825:apps/rssi/main.c **** 		else if (mode == MODE_SYNC && cursor < 0)
 826:apps/rssi/main.c **** 			inc_dec_ul_arfcn(1);
 827:apps/rssi/main.c **** 		break;
 828:apps/rssi/main.c **** 	case KEY_LEFT:
 829:apps/rssi/main.c **** 		if (mode == MODE_MAIN || mode == MODE_SPECTRUM)
 830:apps/rssi/main.c **** 			inc_dec_arfcn(0);
 831:apps/rssi/main.c **** 		else if (mode == MODE_SYNC && cursor < 0)
 832:apps/rssi/main.c **** 			inc_dec_ul_arfcn(0);
 833:apps/rssi/main.c **** 		break;
 834:apps/rssi/main.c **** 	case KEY_LEFT_SB:
 835:apps/rssi/main.c **** 		if (mode == MODE_MAIN || mode == MODE_SPECTRUM)
 836:apps/rssi/main.c **** 			toggle_dcs_pcs();
 837:apps/rssi/main.c **** 		else if (mode == MODE_ARFCN)
 838:apps/rssi/main.c **** 			enter_arfcn(key_code);
 839:apps/rssi/main.c **** 		else if (mode == MODE_SYNC)
 840:apps/rssi/main.c **** 			exit_sync();
 841:apps/rssi/main.c **** 		else if (mode == MODE_RACH)
 842:apps/rssi/main.c **** 			exit_rach();
 843:apps/rssi/main.c **** 		break;
 844:apps/rssi/main.c **** 	case KEY_RIGHT_SB:
 845:apps/rssi/main.c **** 		if (mode == MODE_MAIN || mode == MODE_SPECTRUM)
 846:apps/rssi/main.c **** 			toggle_up_down();
 847:apps/rssi/main.c **** 		else if (mode == MODE_ARFCN)
 848:apps/rssi/main.c **** 			enter_arfcn(key_code);
 849:apps/rssi/main.c **** 		else if (mode == MODE_SYNC && cursor < 0)
 850:apps/rssi/main.c **** 			toggle_up_down();
 851:apps/rssi/main.c **** 		break;
 852:apps/rssi/main.c **** 	case KEY_OK:
 853:apps/rssi/main.c **** 		if (mode == MODE_MAIN || mode == MODE_SPECTRUM)
 854:apps/rssi/main.c **** 			enter_sync();
 855:apps/rssi/main.c **** 		else if (mode == MODE_SYNC || mode == MODE_RACH)
 856:apps/rssi/main.c **** 			enter_rach();
 857:apps/rssi/main.c **** 		break;
 858:apps/rssi/main.c **** 	case KEY_MENU:
 859:apps/rssi/main.c **** 		hold_max();
 860:apps/rssi/main.c **** 		break;
 861:apps/rssi/main.c **** 	case KEY_POWER:
 862:apps/rssi/main.c **** 		if (mode == MODE_ARFCN)
 863:apps/rssi/main.c **** 			exit_arfcn();
 864:apps/rssi/main.c **** 		else if (mode == MODE_SYNC)
 865:apps/rssi/main.c **** 			exit_sync();
 866:apps/rssi/main.c **** 		else if (mode == MODE_RACH)
 867:apps/rssi/main.c **** 			exit_rach();
 868:apps/rssi/main.c **** 		else if (mode == MODE_SPECTRUM)
 869:apps/rssi/main.c **** 			toggle_spectrum();
 870:apps/rssi/main.c **** 		break;
 871:apps/rssi/main.c **** 	case KEY_STAR:
 872:apps/rssi/main.c **** 		if (mode == MODE_MAIN || mode == MODE_SPECTRUM)
 873:apps/rssi/main.c **** 			toggle_spectrum();
 874:apps/rssi/main.c **** 		break;
 875:apps/rssi/main.c **** 	default:
 876:apps/rssi/main.c **** 		break;
 877:apps/rssi/main.c **** 	}
 878:apps/rssi/main.c **** 
 879:apps/rssi/main.c **** 	key_code = KEY_INV;
 880:apps/rssi/main.c **** }
 881:apps/rssi/main.c **** 
 882:apps/rssi/main.c **** static void handle_tone(void)
 883:apps/rssi/main.c **** {
 884:apps/rssi/main.c **** 	unsigned long elapsed = jiffies - tone_time;
 885:apps/rssi/main.c **** 
 886:apps/rssi/main.c **** 	if (!tone_on) {
 887:apps/rssi/main.c **** 		if (!tone || mode != MODE_MAIN)
 888:apps/rssi/main.c **** 			return;
 889:apps/rssi/main.c **** 		/* wait depending on power level */
 890:apps/rssi/main.c **** 		if (elapsed < (uint8_t)(63-power))
 891:apps/rssi/main.c **** 			return;
 892:apps/rssi/main.c **** 		buzzer_volume(tone);
 893:apps/rssi/main.c **** 		buzzer_note(NOTE(NOTE_C, OCTAVE_5));
 894:apps/rssi/main.c **** 		tone_time = jiffies;
 895:apps/rssi/main.c **** 		tone_on = 1;
 896:apps/rssi/main.c **** 		return;
 897:apps/rssi/main.c **** 	}
 898:apps/rssi/main.c **** 
 899:apps/rssi/main.c **** 	if (elapsed >= TONE_JIFFIES) {
 900:apps/rssi/main.c **** 		tone_on = 0;
 901:apps/rssi/main.c **** 		tone_time = jiffies;
 902:apps/rssi/main.c **** 		buzzer_volume(0);
 903:apps/rssi/main.c **** 	}
 904:apps/rssi/main.c **** }
 905:apps/rssi/main.c **** 
 906:apps/rssi/main.c **** /* PM handling */
 907:apps/rssi/main.c **** 
 908:apps/rssi/main.c **** static void handle_pm(void)
 909:apps/rssi/main.c **** {
 910:apps/rssi/main.c **** 	/* start power measurement */
 911:apps/rssi/main.c **** 	if (pm_mode == PM_IDLE && (mode == MODE_MAIN || mode == MODE_SPECTRUM)) {
 912:apps/rssi/main.c **** 		struct msgb *msg = l1ctl_msgb_alloc(L1CTL_PM_REQ);
 913:apps/rssi/main.c **** 		struct l1ctl_pm_req *pm;
 914:apps/rssi/main.c **** 		uint16_t a, e;
 915:apps/rssi/main.c **** 
 916:apps/rssi/main.c **** 		pm = (struct l1ctl_pm_req *) msgb_put(msg, sizeof(*pm));
 917:apps/rssi/main.c **** 		pm->type = 1;
 918:apps/rssi/main.c **** 		if (mode == MODE_MAIN) {
 919:apps/rssi/main.c **** 			a = arfcn;
 920:apps/rssi/main.c **** 			if (pcs && arfcn >= PCS_MIN && arfcn <= PCS_MAX)
 921:apps/rssi/main.c **** 				a |= ARFCN_PCS;
 922:apps/rssi/main.c **** 			if (uplink)
 923:apps/rssi/main.c **** 				a |= ARFCN_UPLINK;
 924:apps/rssi/main.c **** 			e = a;
 925:apps/rssi/main.c **** 			pm_mode = PM_SENT;
 926:apps/rssi/main.c **** 		}
 927:apps/rssi/main.c **** 		if (mode == MODE_SPECTRUM) {
 928:apps/rssi/main.c **** 			if (pcs && arfcn >= PCS_MIN && arfcn <= PCS_MAX) {
 929:apps/rssi/main.c **** 				a = PCS_MIN | ARFCN_PCS;
 930:apps/rssi/main.c **** 				e = PCS_MAX | ARFCN_PCS;
 931:apps/rssi/main.c **** 			} else {
 932:apps/rssi/main.c **** 				a = band->min;
 933:apps/rssi/main.c **** 				e = band->max;
 934:apps/rssi/main.c **** 			}
 935:apps/rssi/main.c **** 			pm_mode = PM_RANGE_SENT;
 936:apps/rssi/main.c **** 		}
 937:apps/rssi/main.c **** 		if (uplink) {
 938:apps/rssi/main.c **** 			a |= ARFCN_UPLINK;
 939:apps/rssi/main.c **** 			e |= ARFCN_UPLINK;
 940:apps/rssi/main.c **** 		}
 941:apps/rssi/main.c **** 		pm->range.band_arfcn_from = htons(a);
 942:apps/rssi/main.c **** 		pm->range.band_arfcn_to = htons(e);
 943:apps/rssi/main.c **** 
 944:apps/rssi/main.c **** 		l1a_l23_rx(SC_DLCI_L1A_L23, msg);
 945:apps/rssi/main.c **** 
 946:apps/rssi/main.c **** 		return;
 947:apps/rssi/main.c **** 	}
 948:apps/rssi/main.c **** 
 949:apps/rssi/main.c **** 	if (pm_mode == PM_RESULT) {
 950:apps/rssi/main.c **** 		pm_mode = PM_IDLE;
 951:apps/rssi/main.c **** 		if (pm_count == pm_max) {
 952:apps/rssi/main.c **** 			int i = 0;
 953:apps/rssi/main.c **** 			int sum = 0;
 954:apps/rssi/main.c **** 
 955:apps/rssi/main.c **** 			if (uplink) {
 956:apps/rssi/main.c **** 				/* find max */
 957:apps/rssi/main.c **** 				for (i = 0; i < pm_count; i++) {
 958:apps/rssi/main.c **** 					if (pm_meas[i] > sum)
 959:apps/rssi/main.c **** 						sum = pm_meas[i];
 960:apps/rssi/main.c **** 				}
 961:apps/rssi/main.c **** 				power = sum;
 962:apps/rssi/main.c **** 			} else {
 963:apps/rssi/main.c **** 				for (i = 0; i < pm_count; i++)
 964:apps/rssi/main.c **** 					sum += pm_meas[i];
 965:apps/rssi/main.c **** 				power = sum / pm_count;
 966:apps/rssi/main.c **** 			}
 967:apps/rssi/main.c **** 			if (power > max_power)
 968:apps/rssi/main.c **** 				max_power = power;
 969:apps/rssi/main.c **** 			pm_count = 0;
 970:apps/rssi/main.c **** 			pm_max = (uplink) ? NUM_PM_UL : NUM_PM_DL;
 971:apps/rssi/main.c **** 			if (!tone_on)
 972:apps/rssi/main.c **** 				refresh_display();
 973:apps/rssi/main.c **** 		}
 974:apps/rssi/main.c **** 		return;
 975:apps/rssi/main.c **** 	}
 976:apps/rssi/main.c **** 
 977:apps/rssi/main.c **** 	if (pm_mode == PM_RANGE_RESULT) {
 978:apps/rssi/main.c **** 		pm_mode = PM_IDLE;
 979:apps/rssi/main.c **** 		refresh_display();
 980:apps/rssi/main.c **** 		buzzer_volume(tone);
 981:apps/rssi/main.c **** 		buzzer_note(NOTE(NOTE_C, OCTAVE_5));
 982:apps/rssi/main.c **** 		tone_time = jiffies;
 983:apps/rssi/main.c **** 		tone_on = 1;
 984:apps/rssi/main.c **** 		return;
 985:apps/rssi/main.c **** 	}
 986:apps/rssi/main.c **** }
 987:apps/rssi/main.c **** 
 988:apps/rssi/main.c **** /* sync / SI */
 989:apps/rssi/main.c **** 
 990:apps/rssi/main.c **** static void enter_sync(void)
 991:apps/rssi/main.c **** {
 992:apps/rssi/main.c **** 	struct msgb *msg = l1ctl_msgb_alloc(L1CTL_FBSB_REQ);
 993:apps/rssi/main.c **** 	struct l1ctl_fbsb_req *req;
 994:apps/rssi/main.c **** 	uint16_t a = arfcn;
 995:apps/rssi/main.c **** 
 996:apps/rssi/main.c **** 	l1s_reset();
 997:apps/rssi/main.c **** 	l1s_reset_hw();
 998:apps/rssi/main.c **** 	pm_count = 0;
 999:apps/rssi/main.c **** 	pm_mode = PM_IDLE;
1000:apps/rssi/main.c **** 
1001:apps/rssi/main.c **** 	req = (struct l1ctl_fbsb_req *) msgb_put(msg, sizeof(*req));
1002:apps/rssi/main.c **** 	if (pcs && arfcn >= PCS_MIN && arfcn <= PCS_MAX)
1003:apps/rssi/main.c **** 		a |= ARFCN_PCS;
1004:apps/rssi/main.c **** 	req->band_arfcn = htons(a);
1005:apps/rssi/main.c **** 	req->timeout = htons(100);
1006:apps/rssi/main.c **** 	/* Threshold when to consider FB_MODE1: 4kHz - 1kHz */
1007:apps/rssi/main.c **** 	req->freq_err_thresh1 = htons(11000 - 1000);
1008:apps/rssi/main.c **** 	/* Threshold when to consider SCH: 1kHz - 200Hz */
1009:apps/rssi/main.c **** 	req->freq_err_thresh2 = htons(1000 - 200);
1010:apps/rssi/main.c **** 	/* not used yet! */
1011:apps/rssi/main.c **** 	req->num_freqerr_avg = 3;
1012:apps/rssi/main.c **** 	req->flags = L1CTL_FBSB_F_FB01SB;
1013:apps/rssi/main.c **** 	req->sync_info_idx = 0;
1014:apps/rssi/main.c **** 	req->ccch_mode = CCCH_MODE_NONE;
1015:apps/rssi/main.c **** 	l1a_l23_rx(SC_DLCI_L1A_L23, msg);
1016:apps/rssi/main.c **** 
1017:apps/rssi/main.c **** 	mode = MODE_SYNC;
1018:apps/rssi/main.c **** 	memset(ul_levels, 0, sizeof(ul_levels));
1019:apps/rssi/main.c **** 	si_new = 0;
1020:apps/rssi/main.c **** 	ul_new = 0;
1021:apps/rssi/main.c **** 	ul_arfcn = arfcn;
1022:apps/rssi/main.c **** 	si_1[2] = 0;
1023:apps/rssi/main.c **** 	si_2[2] = 0;
1024:apps/rssi/main.c **** 	si_2bis[2] = 0;
1025:apps/rssi/main.c **** 	si_2ter[2] = 0;
1026:apps/rssi/main.c **** 	si_3[2] = 0;
1027:apps/rssi/main.c **** 	si_4[2] = 0;
1028:apps/rssi/main.c **** 	mcc = mnc = lac = 0;
1029:apps/rssi/main.c **** 	ccch_conf = -1;
1030:apps/rssi/main.c **** 	memset(freq, 0, sizeof(freq));
1031:apps/rssi/main.c **** 	cursor = 0;
1032:apps/rssi/main.c **** 	nb_num = 0;
1033:apps/rssi/main.c **** 	sync_msg = "trying";
1034:apps/rssi/main.c **** 	refresh_display();
1035:apps/rssi/main.c **** }
1036:apps/rssi/main.c **** 
1037:apps/rssi/main.c **** static void exit_sync(void)
1038:apps/rssi/main.c **** {
 339              		.loc 4 1038 0
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342              	.LVL19:
 343 0000 04E02DE5 		str	lr, [sp, #-4]!
 344              	.LCFI3:
1039:apps/rssi/main.c **** 	l1s_reset();
 345              		.loc 4 1039 0
 346 0004 FEFFFFEB 		bl	l1s_reset
1040:apps/rssi/main.c **** 	l1s_reset_hw();
 347              		.loc 4 1040 0
 348 0008 FEFFFFEB 		bl	l1s_reset_hw
1041:apps/rssi/main.c **** 	pm_count = 0;
1042:apps/rssi/main.c **** 	pm_mode = PM_IDLE;
1043:apps/rssi/main.c **** 	mode = MODE_MAIN;
 349              		.loc 4 1043 0
 350 000c 18309FE5 		ldr	r3, .L21
 351              		.loc 4 1041 0
 352 0010 0020A0E3 		mov	r2, #0
 353              		.loc 4 1043 0
 354 0014 002083E5 		str	r2, [r3, #0]
 355              		.loc 4 1041 0
 356 0018 10309FE5 		ldr	r3, .L21+4
 357 001c 002083E5 		str	r2, [r3, #0]
 358              		.loc 4 1042 0
 359 0020 0C309FE5 		ldr	r3, .L21+8
 360 0024 002083E5 		str	r2, [r3, #0]
1044:apps/rssi/main.c **** }
 361              		.loc 4 1044 0
 362 0028 04F09DE4 		ldr	pc, [sp], #4
 363              	.L22:
 364              		.align	2
 365              	.L21:
 366 002c 00000000 		.word	mode
 367 0030 00000000 		.word	pm_count
 368 0034 00000000 		.word	pm_mode
 369              	.LFE128:
 371              		.section	.text.request_ul_levels,"ax",%progbits
 372              		.align	2
 374              	request_ul_levels:
 375              	.LFB130:
1045:apps/rssi/main.c **** 
1046:apps/rssi/main.c **** int gsm48_decode_lai(struct gsm48_loc_area_id *lai, uint16_t *_mcc,
1047:apps/rssi/main.c **** uint16_t *_mnc, uint16_t *_lac)
1048:apps/rssi/main.c **** {
1049:apps/rssi/main.c **** 	*_mcc = ((lai->digits[0] & 0x0f) << 8)
1050:apps/rssi/main.c **** 	 | (lai->digits[0] & 0xf0)
1051:apps/rssi/main.c **** 	 | (lai->digits[1] & 0x0f);
1052:apps/rssi/main.c **** 	*_mnc = ((lai->digits[2] & 0x0f) << 8)
1053:apps/rssi/main.c **** 	 | (lai->digits[2] & 0xf0)
1054:apps/rssi/main.c **** 	 | ((lai->digits[1] & 0xf0) >> 4);
1055:apps/rssi/main.c **** 	*_lac = ntohs(lai->lac);
1056:apps/rssi/main.c **** 
1057:apps/rssi/main.c **** 	return 0;
1058:apps/rssi/main.c **** }
1059:apps/rssi/main.c **** 
1060:apps/rssi/main.c **** static void request_ul_levels(uint16_t a)
1061:apps/rssi/main.c **** {
 376              		.loc 4 1061 0
 377              		@ args = 0, pretend = 0, frame = 0
 378              		@ frame_needed = 0, uses_anonymous_args = 0
 379              	.LVL20:
 380 0000 0038A0E1 		mov	r3, r0, asl #16
 381 0004 F0412DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, lr}
 382              	.LCFI4:
1062:apps/rssi/main.c **** 	struct msgb *msg = l1ctl_msgb_alloc(L1CTL_NEIGH_PM_REQ);
 383              		.loc 4 1062 0
 384 0008 1A00A0E3 		mov	r0, #26
 385              	.LVL21:
 386              		.loc 4 1061 0
 387 000c 2368A0E1 		mov	r6, r3, lsr #16
 388              	.LVL22:
 389              		.loc 4 1062 0
 390 0010 FEFFFFEB 		bl	l1ctl_msgb_alloc
1063:apps/rssi/main.c **** 	struct l1ctl_neigh_pm_req *pm_req =
1064:apps/rssi/main.c **** 		(struct l1ctl_neigh_pm_req *) msgb_put(msg, sizeof(*pm_req));
 391              		.loc 4 1064 0
 392 0014 C210A0E3 		mov	r1, #194
 393              		.loc 4 1062 0
 394 0018 0080A0E1 		mov	r8, r0
 395              	.LVL23:
 396              		.loc 4 1064 0
 397 001c FEFFFFEB 		bl	msgb_put
1065:apps/rssi/main.c **** 	int i;
1066:apps/rssi/main.c **** 
1067:apps/rssi/main.c **** 	if (pcs && a >= PCS_MIN && a <= PCS_MAX)
 398              		.loc 4 1067 0
 399 0020 84309FE5 		ldr	r3, .L34
 400 0024 003093E5 		ldr	r3, [r3, #0]
 401 0028 003053E2 		subs	r3, r3, #0
 402 002c 0130A013 		movne	r3, #1
 403 0030 020C56E3 		cmp	r6, #512
 404 0034 0030A033 		movcc	r3, #0
 405 0038 000053E3 		cmp	r3, #0
 406 003c 1100000A 		beq	.L24
 407 0040 68309FE5 		ldr	r3, .L34+4
 408 0044 030056E1 		cmp	r6, r3
1068:apps/rssi/main.c **** 		a |= ARFCN_PCS;
 409              		.loc 4 1068 0
 410 0048 02698693 		orrls	r6, r6, #32768
 411              	.L24:
1069:apps/rssi/main.c **** 	if (uplink)
 412              		.loc 4 1069 0
 413 004c 60309FE5 		ldr	r3, .L34+8
 414 0050 003093E5 		ldr	r3, [r3, #0]
 415 0054 000053E3 		cmp	r3, #0
1070:apps/rssi/main.c **** 		a |= ARFCN_UPLINK;
1071:apps/rssi/main.c **** 	pm_req->n = 8;
 416              		.loc 4 1071 0
 417 0058 0830A0E3 		mov	r3, #8
 418              	.LVL24:
 419 005c 0030C0E5 		strb	r3, [r0, #0]
 420              		.loc 4 1070 0
 421 0060 01698613 		orrne	r6, r6, #16384
 422              		.loc 4 1071 0
 423 0064 0050A0E1 		mov	r5, r0
 424 0068 0070A0E3 		mov	r7, #0
 425              	.LVL25:
 426 006c 0040A0E1 		mov	r4, r0
 427              	.LVL26:
 428              	.L29:
1072:apps/rssi/main.c **** 	for (i = 0; i < 8; i++) {
1073:apps/rssi/main.c **** 		pm_req->band_arfcn[i] = htons(a);
 429              		.loc 4 1073 0
 430 0070 0600A0E1 		mov	r0, r6
 431 0074 FEFFFFEB 		bl	__fswab16
 432 0078 2034A0E1 		mov	r3, r0, lsr #8
 433 007c 0330C4E5 		strb	r3, [r4, #3]
 434 0080 0200C4E5 		strb	r0, [r4, #2]
1074:apps/rssi/main.c **** 		pm_req->tn[i] = i;
 435              		.loc 4 1074 0
 436 0084 8270C5E5 		strb	r7, [r5, #130]
 437              		.loc 4 1072 0
 438 0088 017087E2 		add	r7, r7, #1
 439 008c 080057E3 		cmp	r7, #8
 440 0090 024084E2 		add	r4, r4, #2
 441 0094 015085E2 		add	r5, r5, #1
 442 0098 1A00001A 		bne	.L29
1075:apps/rssi/main.c **** 	}
1076:apps/rssi/main.c **** 	l1a_l23_rx(SC_DLCI_L1A_L23, msg);
 443              		.loc 4 1076 0
 444 009c 0810A0E1 		mov	r1, r8
 445 00a0 0500A0E3 		mov	r0, #5
1077:apps/rssi/main.c **** }
 446              		.loc 4 1077 0
 447 00a4 F041BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, lr}
 448              		.loc 4 1076 0
 449 00a8 FEFFFFEA 		b	l1a_l23_rx
 450              	.L35:
 451              		.align	2
 452              	.L34:
 453 00ac 00000000 		.word	pcs
 454 00b0 2A030000 		.word	810
 455 00b4 00000000 		.word	uplink
 456              	.LFE130:
 458              		.section	.text.gsm48_decode_lai,"ax",%progbits
 459              		.align	2
 460              		.global	gsm48_decode_lai
 462              	gsm48_decode_lai:
 463              	.LFB129:
 464              		.loc 4 1048 0
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467              	.LVL27:
 468 0000 10402DE9 		stmfd	sp!, {r4, lr}
 469              	.LCFI5:
 470              		.loc 4 1049 0
 471 0004 00C0D0E5 		ldrb	ip, [r0, #0]	@ zero_extendqisi2
 472 0008 0140D0E5 		ldrb	r4, [r0, #1]	@ zero_extendqisi2
 473 000c F0E00CE2 		and	lr, ip, #240
 474 0010 0FC00CE2 		and	ip, ip, #15
 475 0014 0CE48EE1 		orr	lr, lr, ip, asl #8
 476 0018 0F4004E2 		and	r4, r4, #15
 477 001c 04E08EE1 		orr	lr, lr, r4
 478 0020 B0E0C1E1 		strh	lr, [r1, #0]	@ movhi
 479              		.loc 4 1052 0
 480 0024 0210D0E5 		ldrb	r1, [r0, #2]	@ zero_extendqisi2
 481              	.LVL28:
 482 0028 01E0D0E5 		ldrb	lr, [r0, #1]	@ zero_extendqisi2
 483 002c F0C001E2 		and	ip, r1, #240
 484 0030 0F1001E2 		and	r1, r1, #15
 485 0034 01C48CE1 		orr	ip, ip, r1, asl #8
 486 0038 2EC28CE1 		orr	ip, ip, lr, lsr #4
 487 003c B0C0C2E1 		strh	ip, [r2, #0]	@ movhi
 488              		.loc 4 1055 0
 489 0040 0420D0E5 		ldrb	r2, [r0, #4]	@ zero_extendqisi2
 490              	.LVL29:
 491 0044 0300D0E5 		ldrb	r0, [r0, #3]	@ zero_extendqisi2
 492              	.LVL30:
 493 0048 020480E1 		orr	r0, r0, r2, asl #8
 494              		.loc 4 1048 0
 495 004c 0340A0E1 		mov	r4, r3
 496              		.loc 4 1055 0
 497 0050 FEFFFFEB 		bl	__fswab16
 498              	.LVL31:
 499 0054 B000C4E1 		strh	r0, [r4, #0]	@ movhi
 500              		.loc 4 1058 0
 501 0058 0000A0E3 		mov	r0, #0
 502 005c 1080BDE8 		ldmfd	sp!, {r4, pc}
 503              	.LFE129:
 505              		.section	.text.gsm48_match_ra,"ax",%progbits
 506              		.align	2
 508              	gsm48_match_ra:
 509              	.LFB135:
1078:apps/rssi/main.c **** 
1079:apps/rssi/main.c **** static void handle_sync(void)
1080:apps/rssi/main.c **** {
1081:apps/rssi/main.c **** 	struct gsm48_system_information_type_1 *si1;
1082:apps/rssi/main.c **** 	struct gsm48_system_information_type_2 *si2;
1083:apps/rssi/main.c **** 	struct gsm48_system_information_type_2bis *si2bis;
1084:apps/rssi/main.c **** 	struct gsm48_system_information_type_2ter *si2ter;
1085:apps/rssi/main.c **** 	struct gsm48_system_information_type_3 *si3;
1086:apps/rssi/main.c **** 	struct gsm48_system_information_type_4 *si4;
1087:apps/rssi/main.c **** 
1088:apps/rssi/main.c **** 	if (mode != MODE_SYNC)
1089:apps/rssi/main.c **** 		return;
1090:apps/rssi/main.c **** 
1091:apps/rssi/main.c **** 	/* once we synced, we take the result and request UL measurement */
1092:apps/rssi/main.c **** 	if (sync_result) {
1093:apps/rssi/main.c **** 		uint16_t a = ul_arfcn;
1094:apps/rssi/main.c **** 
1095:apps/rssi/main.c **** 		sync_msg = sync_result;
1096:apps/rssi/main.c **** 		sync_result = NULL;
1097:apps/rssi/main.c **** 		refresh_display();
1098:apps/rssi/main.c **** 
1099:apps/rssi/main.c **** 		if (sync_msg[0] != 'o')
1100:apps/rssi/main.c **** 			return;
1101:apps/rssi/main.c **** 
1102:apps/rssi/main.c **** 		request_ul_levels(a);
1103:apps/rssi/main.c **** 
1104:apps/rssi/main.c **** 		return;
1105:apps/rssi/main.c **** 	}
1106:apps/rssi/main.c **** 
1107:apps/rssi/main.c **** 	if (tone_on)
1108:apps/rssi/main.c **** 		return;
1109:apps/rssi/main.c **** 
1110:apps/rssi/main.c **** 	/* no UL result, no SI result */
1111:apps/rssi/main.c **** 	if (!ul_new && !(si_new & 0x100))
1112:apps/rssi/main.c **** 		return;
1113:apps/rssi/main.c **** 
1114:apps/rssi/main.c **** 	/* new UL result */
1115:apps/rssi/main.c **** 	if (ul_new) {
1116:apps/rssi/main.c **** 		ul_new = 0;
1117:apps/rssi/main.c **** 		if (cursor < 0)
1118:apps/rssi/main.c **** 			refresh_display();
1119:apps/rssi/main.c **** 		return;
1120:apps/rssi/main.c **** 	}
1121:apps/rssi/main.c **** 
1122:apps/rssi/main.c **** 	/* decode si */
1123:apps/rssi/main.c **** 	switch (si_new & 0xff) {
1124:apps/rssi/main.c **** 	case GSM48_MT_RR_SYSINFO_1:
1125:apps/rssi/main.c **** 		si1 = (struct gsm48_system_information_type_1 *)si_1;
1126:apps/rssi/main.c **** 		gsm48_decode_freq_list(freq, si1->cell_channel_description,
1127:apps/rssi/main.c **** 	                sizeof(si1->cell_channel_description), 0xce,
1128:apps/rssi/main.c **** 					FREQ_TYPE_SERV);
1129:apps/rssi/main.c **** 		break;
1130:apps/rssi/main.c **** 	case GSM48_MT_RR_SYSINFO_2:
1131:apps/rssi/main.c **** 		si2 = (struct gsm48_system_information_type_2 *)si_2;
1132:apps/rssi/main.c **** 		gsm48_decode_freq_list(freq, si2->bcch_frequency_list,
1133:apps/rssi/main.c **** 	                sizeof(si2->bcch_frequency_list), 0xce,
1134:apps/rssi/main.c **** 					FREQ_TYPE_NCELL_2);
1135:apps/rssi/main.c **** 		break;
1136:apps/rssi/main.c **** 	case GSM48_MT_RR_SYSINFO_2bis:
1137:apps/rssi/main.c **** 		si2bis = (struct gsm48_system_information_type_2bis *)si_2bis;
1138:apps/rssi/main.c **** 		gsm48_decode_freq_list(freq, si2bis->bcch_frequency_list,
1139:apps/rssi/main.c **** 	                sizeof(si2bis->bcch_frequency_list), 0xce,
1140:apps/rssi/main.c **** 					FREQ_TYPE_NCELL_2bis);
1141:apps/rssi/main.c **** 		break;
1142:apps/rssi/main.c **** 	case GSM48_MT_RR_SYSINFO_2ter:
1143:apps/rssi/main.c **** 		si2ter = (struct gsm48_system_information_type_2ter *)si_2ter;
1144:apps/rssi/main.c **** 		gsm48_decode_freq_list(freq, si2ter->ext_bcch_frequency_list,
1145:apps/rssi/main.c **** 	                sizeof(si2ter->ext_bcch_frequency_list), 0x8e,
1146:apps/rssi/main.c **** 					FREQ_TYPE_NCELL_2ter);
1147:apps/rssi/main.c **** 		break;
1148:apps/rssi/main.c **** 	case GSM48_MT_RR_SYSINFO_3:
1149:apps/rssi/main.c **** 		si3 = (struct gsm48_system_information_type_3 *)si_3;
1150:apps/rssi/main.c **** 		gsm48_decode_lai(&si3->lai, &mcc, &mnc, &lac);
1151:apps/rssi/main.c **** 		cell_id = ntohs(si3->cell_identity);
1152:apps/rssi/main.c **** 		if (ccch_conf < 0) {
1153:apps/rssi/main.c **** 			struct msgb *msg =
1154:apps/rssi/main.c **** 				l1ctl_msgb_alloc(L1CTL_CCCH_MODE_REQ);
1155:apps/rssi/main.c **** 			struct l1ctl_ccch_mode_req *req =
1156:apps/rssi/main.c **** 				(struct l1ctl_ccch_mode_req *)
1157:apps/rssi/main.c **** 					msgb_put(msg, sizeof(*req));
1158:apps/rssi/main.c **** 
1159:apps/rssi/main.c **** 			ccch_conf = si3->control_channel_desc.ccch_conf;
1160:apps/rssi/main.c **** 			req->ccch_mode = (ccch_conf == 1)
1161:apps/rssi/main.c **** 					? CCCH_MODE_COMBINED
1162:apps/rssi/main.c **** 					: CCCH_MODE_NON_COMBINED;
1163:apps/rssi/main.c **** 			printf("ccch_mode=%d\n", ccch_conf);
1164:apps/rssi/main.c **** 
1165:apps/rssi/main.c **** 			l1a_l23_rx(SC_DLCI_L1A_L23, msg);
1166:apps/rssi/main.c **** 		}
1167:apps/rssi/main.c **** 		break;
1168:apps/rssi/main.c **** 	case GSM48_MT_RR_SYSINFO_4:
1169:apps/rssi/main.c **** 		si4 = (struct gsm48_system_information_type_4 *)si_4;
1170:apps/rssi/main.c **** 		gsm48_decode_lai(&si4->lai, &mcc, &mnc, &lac);
1171:apps/rssi/main.c **** 		break;
1172:apps/rssi/main.c **** 	}
1173:apps/rssi/main.c **** 
1174:apps/rssi/main.c **** 	if (cursor >= 0)
1175:apps/rssi/main.c **** 		refresh_display();
1176:apps/rssi/main.c **** 
1177:apps/rssi/main.c **** 	/* tone depends on successfully received BCCH */
1178:apps/rssi/main.c **** 	buzzer_volume(tone);
1179:apps/rssi/main.c **** 	tone_time = jiffies;
1180:apps/rssi/main.c **** 	tone_on = 1;
1181:apps/rssi/main.c **** 	if ((si_new & 0xff) == 0xff)
1182:apps/rssi/main.c **** 		buzzer_note(NOTE(NOTE_C, OCTAVE_2));
1183:apps/rssi/main.c **** 	else
1184:apps/rssi/main.c **** 		buzzer_note(NOTE(NOTE_C, OCTAVE_5));
1185:apps/rssi/main.c **** 	si_new = 0;
1186:apps/rssi/main.c **** }
1187:apps/rssi/main.c **** 
1188:apps/rssi/main.c **** static void enter_rach(void)
1189:apps/rssi/main.c **** {
1190:apps/rssi/main.c **** 	if (ccch_conf < 0)
1191:apps/rssi/main.c **** 		return;
1192:apps/rssi/main.c **** 
1193:apps/rssi/main.c **** 	if (rach)
1194:apps/rssi/main.c **** 		return;
1195:apps/rssi/main.c **** 
1196:apps/rssi/main.c **** #ifndef CONFIG_TX_ENABLE
1197:apps/rssi/main.c **** 	assign = ASSIGN_NO_TX;
1198:apps/rssi/main.c **** 	mode = MODE_RACH;
1199:apps/rssi/main.c **** 	/* display refresh is done by rach handler */
1200:apps/rssi/main.c **** #else
1201:apps/rssi/main.c **** 	struct msgb *msg1 = l1ctl_msgb_alloc(L1CTL_NEIGH_PM_REQ);
1202:apps/rssi/main.c **** 	struct msgb *msg2 = l1ctl_msgb_alloc(L1CTL_RACH_REQ);
1203:apps/rssi/main.c **** 	struct l1ctl_neigh_pm_req *pm_req = (struct l1ctl_neigh_pm_req *)
1204:apps/rssi/main.c **** 			msgb_put(msg1, sizeof(*pm_req));
1205:apps/rssi/main.c **** 	struct l1ctl_info_ul *ul = (struct l1ctl_info_ul *)
1206:apps/rssi/main.c **** 			msgb_put(msg2, sizeof(*ul));;
1207:apps/rssi/main.c **** 	struct l1ctl_rach_req *rach_req = (struct l1ctl_rach_req *)
1208:apps/rssi/main.c **** 			msgb_put(msg2, sizeof(*rach_req));
1209:apps/rssi/main.c **** 
1210:apps/rssi/main.c **** 	l1s.tx_power = 0;
1211:apps/rssi/main.c **** 
1212:apps/rssi/main.c **** 	pm_req->n = 0; /* disable */
1213:apps/rssi/main.c **** 
1214:apps/rssi/main.c **** 	rach_ra = 0x00;
1215:apps/rssi/main.c **** 	rach_req->ra = rach_ra;
1216:apps/rssi/main.c **** 	rach_req->offset = 0;
1217:apps/rssi/main.c **** 	rach_req->combined = (ccch_conf == 1);
1218:apps/rssi/main.c **** 
1219:apps/rssi/main.c **** 	l1a_l23_rx(SC_DLCI_L1A_L23, msg1);
1220:apps/rssi/main.c **** 	l1a_l23_rx(SC_DLCI_L1A_L23, msg2);
1221:apps/rssi/main.c **** 	rach = 1;
1222:apps/rssi/main.c **** 	rach_when = jiffies;
1223:apps/rssi/main.c **** 	assign = ASSIGN_NONE;
1224:apps/rssi/main.c **** 	mode = MODE_RACH;
1225:apps/rssi/main.c **** 	refresh_display();
1226:apps/rssi/main.c **** #endif
1227:apps/rssi/main.c **** 
1228:apps/rssi/main.c **** }
1229:apps/rssi/main.c **** 
1230:apps/rssi/main.c **** static void exit_rach(void)
1231:apps/rssi/main.c **** {
1232:apps/rssi/main.c **** 	rach = 0;
1233:apps/rssi/main.c **** 
1234:apps/rssi/main.c **** 	request_ul_levels(ul_arfcn);
1235:apps/rssi/main.c **** 
1236:apps/rssi/main.c **** 	mode = MODE_SYNC;
1237:apps/rssi/main.c **** 	refresh_display();
1238:apps/rssi/main.c **** }
1239:apps/rssi/main.c **** 
1240:apps/rssi/main.c **** static void handle_assign(void)
1241:apps/rssi/main.c **** {
1242:apps/rssi/main.c **** 	if (mode != MODE_RACH)
1243:apps/rssi/main.c **** 		return;
1244:apps/rssi/main.c **** 
1245:apps/rssi/main.c **** 	if (assign == ASSIGN_NONE) {
1246:apps/rssi/main.c **** 		unsigned long elapsed = jiffies - rach_when;
1247:apps/rssi/main.c **** 
1248:apps/rssi/main.c **** 		if (!rach)
1249:apps/rssi/main.c **** 			return;
1250:apps/rssi/main.c **** 		if (elapsed < HZ * 2)
1251:apps/rssi/main.c **** 			return;
1252:apps/rssi/main.c **** 		assign = ASSIGN_TIMEOUT;
1253:apps/rssi/main.c **** 		rach = 0;
1254:apps/rssi/main.c **** 	}
1255:apps/rssi/main.c **** 
1256:apps/rssi/main.c **** 	refresh_display();
1257:apps/rssi/main.c **** 	assign = ASSIGN_NONE;
1258:apps/rssi/main.c **** }
1259:apps/rssi/main.c **** 
1260:apps/rssi/main.c **** /* Main Program */
1261:apps/rssi/main.c **** const char *hr = "======================================================================\n";
1262:apps/rssi/main.c **** 
1263:apps/rssi/main.c **** /* match request reference agains request history */
1264:apps/rssi/main.c **** static int gsm48_match_ra(struct gsm48_req_ref *ref)
1265:apps/rssi/main.c **** {
 510              		.loc 4 1265 0
 511              		@ args = 0, pretend = 0, frame = 0
 512              		@ frame_needed = 0, uses_anonymous_args = 0
 513              	.LVL32:
 514 0000 10402DE9 		stmfd	sp!, {r4, lr}
 515              	.LCFI6:
1266:apps/rssi/main.c **** 	uint8_t ia_t1, ia_t2, ia_t3;
1267:apps/rssi/main.c **** 	uint8_t cr_t1, cr_t2, cr_t3;
1268:apps/rssi/main.c **** 
1269:apps/rssi/main.c **** 	if (rach && ref->ra == rach_ra) {
 516              		.loc 4 1269 0
 517 0004 88309FE5 		ldr	r3, .L46
 518 0008 003093E5 		ldr	r3, [r3, #0]
 519 000c 000053E3 		cmp	r3, #0
 520 0010 2100000A 		beq	.L39
 521 0014 7C309FE5 		ldr	r3, .L46+4
 522 0018 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 523 001c 0030D0E5 		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 524 0020 020053E1 		cmp	r3, r2
1270:apps/rssi/main.c **** 		ia_t1 = ref->t1;
1271:apps/rssi/main.c **** 		ia_t2 = ref->t2;
1272:apps/rssi/main.c **** 		ia_t3 = (ref->t3_high << 3) | ref->t3_low;
1273:apps/rssi/main.c **** 		ref = &rach_ref;
1274:apps/rssi/main.c **** 		cr_t1 = ref->t1;
1275:apps/rssi/main.c **** 		cr_t2 = ref->t2;
1276:apps/rssi/main.c **** 		cr_t3 = (ref->t3_high << 3) | ref->t3_low;
 525              		.loc 4 1276 0
 526 0024 70109FE5 		ldr	r1, .L46+8
 527              		.loc 4 1269 0
 528 0028 2100001A 		bne	.L39
 529              		.loc 4 1276 0
 530 002c 0140D1E5 		ldrb	r4, [r1, #1]	@ zero_extendqisi2
 531              		.loc 4 1272 0
 532 0030 01E0D0E5 		ldrb	lr, [r0, #1]	@ zero_extendqisi2
 533              		.loc 4 1276 0
 534 0034 02C0D1E5 		ldrb	ip, [r1, #2]	@ zero_extendqisi2
1277:apps/rssi/main.c **** 		if (ia_t1 == cr_t1 && ia_t2 == cr_t2 && ia_t3 == cr_t3)
 535              		.loc 4 1277 0
 536 0038 A431A0E1 		mov	r3, r4, lsr #3
 537              		.loc 4 1272 0
 538 003c 0200D0E5 		ldrb	r0, [r0, #2]	@ zero_extendqisi2
 539              	.LVL33:
 540              		.loc 4 1277 0
 541 0040 AE0153E1 		cmp	r3, lr, lsr #3
 542 0044 0030A013 		movne	r3, #0
 543 0048 0130A003 		moveq	r3, #1
 544 004c 1F1000E2 		and	r1, r0, #31
 545 0050 1F200CE2 		and	r2, ip, #31
 546 0054 020051E1 		cmp	r1, r2
 547 0058 0030A013 		movne	r3, #0
 548 005c 01300302 		andeq	r3, r3, #1
 549 0060 000053E3 		cmp	r3, #0
 550              		.loc 4 1272 0
 551 0064 07E00EE2 		and	lr, lr, #7
 552 0068 A002A0E1 		mov	r0, r0, lsr #5
 553              		.loc 4 1276 0
 554 006c 074004E2 		and	r4, r4, #7
 555 0070 ACC2A0E1 		mov	ip, ip, lsr #5
 556              		.loc 4 1272 0
 557 0074 8E0180E1 		orr	r0, r0, lr, asl #3
 558              	.LVL34:
 559              		.loc 4 1276 0
 560 0078 84318CE1 		orr	r3, ip, r4, asl #3
 561              	.LVL35:
 562              		.loc 4 1277 0
 563 007c 2100000A 		beq	.L39
 564 0080 030050E1 		cmp	r0, r3
 565 0084 0100A0E3 		mov	r0, #1
 566              	.LVL36:
 567 0088 1080BD08 		ldmeqfd	sp!, {r4, pc}
 568              	.LVL37:
 569              	.L39:
 570 008c 0000A0E3 		mov	r0, #0
 571              	.LVL38:
1278:apps/rssi/main.c **** 			return 1;
1279:apps/rssi/main.c **** 	}
1280:apps/rssi/main.c **** 
1281:apps/rssi/main.c **** 	return 0;
1282:apps/rssi/main.c **** }
 572              		.loc 4 1282 0
 573 0090 1080BDE8 		ldmfd	sp!, {r4, pc}
 574              	.L47:
 575              		.align	2
 576              	.L46:
 577 0094 00000000 		.word	rach
 578 0098 00000000 		.word	rach_ra
 579 009c 00000000 		.word	rach_ref
 580              	.LFE135:
 582              		.section	.rodata.str1.4
 583 007f 00       		.align	2
 584              	.LC3:
 585 0080 4D657373 		.ascii	"Message for unknown DLCI %u\012\000"
 585      61676520 
 585      666F7220 
 585      756E6B6E 
 585      6F776E20 
 586 009d 000000   		.align	2
 587              	.LC4:
 588 00a0 4D657373 		.ascii	"Message on console DLCI: '%s'\012\000"
 588      61676520 
 588      6F6E2063 
 588      6F6E736F 
 588      6C652044 
 589              		.section	.text.console_rx_cb,"ax",%progbits
 590              		.align	2
 592              	console_rx_cb:
 593              	.LFB142:
1283:apps/rssi/main.c **** 
1284:apps/rssi/main.c **** 
1285:apps/rssi/main.c **** /* note: called from IRQ context */
1286:apps/rssi/main.c **** static void rx_imm_ass(struct msgb *msg)
1287:apps/rssi/main.c **** {
1288:apps/rssi/main.c **** 	struct gsm48_imm_ass *ia = msgb_l3(msg);
1289:apps/rssi/main.c **** 
1290:apps/rssi/main.c **** 	if (gsm48_match_ra(&ia->req_ref)) {
1291:apps/rssi/main.c **** 		assign = ASSIGN_RESULT;
1292:apps/rssi/main.c **** 		ta = ia->timing_advance;
1293:apps/rssi/main.c **** 		rach = 0;
1294:apps/rssi/main.c **** 	}
1295:apps/rssi/main.c **** }
1296:apps/rssi/main.c **** 
1297:apps/rssi/main.c **** /* note: called from IRQ context */
1298:apps/rssi/main.c **** static void rx_imm_ass_ext(struct msgb *msg)
1299:apps/rssi/main.c **** {
1300:apps/rssi/main.c **** 	struct gsm48_imm_ass_ext *ia = msgb_l3(msg);
1301:apps/rssi/main.c **** 
1302:apps/rssi/main.c **** 	if (gsm48_match_ra(&ia->req_ref1)) {
1303:apps/rssi/main.c **** 		assign = ASSIGN_RESULT;
1304:apps/rssi/main.c **** 		ta = ia->timing_advance1;
1305:apps/rssi/main.c **** 		rach = 0;
1306:apps/rssi/main.c **** 	}
1307:apps/rssi/main.c **** 	if (gsm48_match_ra(&ia->req_ref2)) {
1308:apps/rssi/main.c **** 		assign = ASSIGN_RESULT;
1309:apps/rssi/main.c **** 		ta = ia->timing_advance2;
1310:apps/rssi/main.c **** 		rach = 0;
1311:apps/rssi/main.c **** 	}
1312:apps/rssi/main.c **** }
1313:apps/rssi/main.c **** 
1314:apps/rssi/main.c **** /* note: called from IRQ context */
1315:apps/rssi/main.c **** static void rx_imm_ass_rej(struct msgb *msg)
1316:apps/rssi/main.c **** {
1317:apps/rssi/main.c **** 	struct gsm48_imm_ass_rej *ia = msgb_l3(msg);
1318:apps/rssi/main.c **** 	struct gsm48_req_ref *req_ref;
1319:apps/rssi/main.c **** 	int i;
1320:apps/rssi/main.c **** 
1321:apps/rssi/main.c **** 	for (i = 0; i < 4; i++) {
1322:apps/rssi/main.c **** 		/* request reference */
1323:apps/rssi/main.c **** 		req_ref = (struct gsm48_req_ref *)
1324:apps/rssi/main.c **** 			(((uint8_t *)&ia->req_ref1) + i * 4);
1325:apps/rssi/main.c **** 		if (gsm48_match_ra(req_ref)) {
1326:apps/rssi/main.c **** 			assign = ASSIGN_REJECT;
1327:apps/rssi/main.c **** 			rach = 0;
1328:apps/rssi/main.c **** 		}
1329:apps/rssi/main.c **** 	}
1330:apps/rssi/main.c **** }
1331:apps/rssi/main.c **** 
1332:apps/rssi/main.c **** /* note: called from IRQ context */
1333:apps/rssi/main.c **** static void rx_pch_agch(struct msgb *msg)
1334:apps/rssi/main.c **** {
1335:apps/rssi/main.c **** 	struct gsm48_system_information_type_header *sih;
1336:apps/rssi/main.c **** 
1337:apps/rssi/main.c **** 	/* store SI */
1338:apps/rssi/main.c **** 	sih = msgb_l3(msg);
1339:apps/rssi/main.c **** 	switch (sih->system_information) {
1340:apps/rssi/main.c **** 	case GSM48_MT_RR_IMM_ASS:
1341:apps/rssi/main.c **** 		rx_imm_ass(msg);
1342:apps/rssi/main.c **** 		break;
1343:apps/rssi/main.c **** 	case GSM48_MT_RR_IMM_ASS_EXT:
1344:apps/rssi/main.c **** 		rx_imm_ass_ext(msg);
1345:apps/rssi/main.c **** 		break;
1346:apps/rssi/main.c **** 	case GSM48_MT_RR_IMM_ASS_REJ:
1347:apps/rssi/main.c **** 		rx_imm_ass_rej(msg);
1348:apps/rssi/main.c **** 		break;
1349:apps/rssi/main.c **** 	}
1350:apps/rssi/main.c **** }
1351:apps/rssi/main.c **** 
1352:apps/rssi/main.c **** /* note: called from IRQ context */
1353:apps/rssi/main.c **** static void rx_bcch(struct msgb *msg)
1354:apps/rssi/main.c **** {
1355:apps/rssi/main.c **** 	struct gsm48_system_information_type_header *sih;
1356:apps/rssi/main.c **** 
1357:apps/rssi/main.c **** 	/* store SI */
1358:apps/rssi/main.c **** 	sih = msgb_l3(msg);
1359:apps/rssi/main.c **** 	switch (sih->system_information) {
1360:apps/rssi/main.c **** 	case GSM48_MT_RR_SYSINFO_1:
1361:apps/rssi/main.c **** 		memcpy(si_1, msgb_l3(msg), msgb_l3len(msg));
1362:apps/rssi/main.c **** 		break;
1363:apps/rssi/main.c **** 	case GSM48_MT_RR_SYSINFO_2:
1364:apps/rssi/main.c **** 		memcpy(si_2, msgb_l3(msg), msgb_l3len(msg));
1365:apps/rssi/main.c **** 		break;
1366:apps/rssi/main.c **** 	case GSM48_MT_RR_SYSINFO_2bis:
1367:apps/rssi/main.c **** 		memcpy(si_2bis, msgb_l3(msg), msgb_l3len(msg));
1368:apps/rssi/main.c **** 		break;
1369:apps/rssi/main.c **** 	case GSM48_MT_RR_SYSINFO_2ter:
1370:apps/rssi/main.c **** 		memcpy(si_2ter, msgb_l3(msg), msgb_l3len(msg));
1371:apps/rssi/main.c **** 		break;
1372:apps/rssi/main.c **** 	case GSM48_MT_RR_SYSINFO_3:
1373:apps/rssi/main.c **** 		memcpy(si_3, msgb_l3(msg), msgb_l3len(msg));
1374:apps/rssi/main.c **** 		break;
1375:apps/rssi/main.c **** 	case GSM48_MT_RR_SYSINFO_4:
1376:apps/rssi/main.c **** 		memcpy(si_4, msgb_l3(msg), msgb_l3len(msg));
1377:apps/rssi/main.c **** 		break;
1378:apps/rssi/main.c **** 	}
1379:apps/rssi/main.c **** 	si_new = sih->system_information | 0x100;
1380:apps/rssi/main.c **** }
1381:apps/rssi/main.c **** 
1382:apps/rssi/main.c **** /* note: called from IRQ context */
1383:apps/rssi/main.c **** static void l1a_l23_tx(struct msgb *msg)
1384:apps/rssi/main.c **** {
1385:apps/rssi/main.c **** 	struct l1ctl_hdr *l1h = (struct l1ctl_hdr *) msg->l1h;
1386:apps/rssi/main.c **** 	struct l1ctl_pm_conf *pmr;
1387:apps/rssi/main.c **** 	struct l1ctl_info_dl *dl;
1388:apps/rssi/main.c **** 	struct l1ctl_fbsb_conf *sb;
1389:apps/rssi/main.c **** 	uint8_t chan_type, chan_ts, chan_ss;
1390:apps/rssi/main.c **** 	struct l1ctl_neigh_pm_ind *pm_ind;
1391:apps/rssi/main.c **** 	struct gsm_time tm;
1392:apps/rssi/main.c **** 
1393:apps/rssi/main.c **** 	switch (l1h->msg_type) {
1394:apps/rssi/main.c **** 	case L1CTL_PM_CONF:
1395:apps/rssi/main.c **** 		if (pm_mode == PM_SENT) {
1396:apps/rssi/main.c **** 			pmr = (struct l1ctl_pm_conf *) l1h->data;
1397:apps/rssi/main.c **** 			pm_meas[pm_count] = pmr->pm[0];
1398:apps/rssi/main.c **** 			pm_count++;
1399:apps/rssi/main.c **** 			pm_mode = PM_RESULT;
1400:apps/rssi/main.c **** 		}
1401:apps/rssi/main.c **** 		if (pm_mode == PM_RANGE_SENT) {
1402:apps/rssi/main.c **** 			for (pmr = (struct l1ctl_pm_conf *) l1h->data;
1403:apps/rssi/main.c **** 				(uint8_t *) pmr < msg->tail; pmr++) {
1404:apps/rssi/main.c **** 				if (!max || pm_spectrum[ntohs(pmr->band_arfcn) & 1023] < pmr->pm[0])
1405:apps/rssi/main.c **** 					pm_spectrum[ntohs(pmr->band_arfcn) & 1023] = pmr->pm[0];
1406:apps/rssi/main.c **** 			}
1407:apps/rssi/main.c **** 			if ((l1h->flags & L1CTL_F_DONE))
1408:apps/rssi/main.c **** 				pm_mode = PM_RANGE_RESULT;
1409:apps/rssi/main.c **** 		}
1410:apps/rssi/main.c **** 		l1s.tpu_offset_correction += 5000 / NUM_PM_UL;
1411:apps/rssi/main.c **** 		break;
1412:apps/rssi/main.c **** 	case L1CTL_FBSB_CONF:
1413:apps/rssi/main.c **** 		dl = (struct l1ctl_info_dl *) l1h->data;
1414:apps/rssi/main.c **** 		sb = (struct l1ctl_fbsb_conf *) dl->payload;
1415:apps/rssi/main.c **** 		if (sb->result == 0)
1416:apps/rssi/main.c **** 			sync_result = "ok";
1417:apps/rssi/main.c **** 		else
1418:apps/rssi/main.c **** 			sync_result = "error";
1419:apps/rssi/main.c **** 		bsic = sb->bsic;
1420:apps/rssi/main.c **** 		break;
1421:apps/rssi/main.c **** 	case L1CTL_DATA_IND:
1422:apps/rssi/main.c **** 		dl = (struct l1ctl_info_dl *) l1h->data;
1423:apps/rssi/main.c **** 		msg->l2h = dl->payload;
1424:apps/rssi/main.c **** 		rsl_dec_chan_nr(dl->chan_nr, &chan_type, &chan_ss, &chan_ts);
1425:apps/rssi/main.c **** 
1426:apps/rssi/main.c **** 		power = dl->rx_level;
1427:apps/rssi/main.c **** 		if (dl->fire_crc >= 2) {
1428:apps/rssi/main.c **** 			if (chan_type == RSL_CHAN_BCCH)
1429:apps/rssi/main.c **** 				si_new = 0x1ff; /* error frame indication */
1430:apps/rssi/main.c **** 			break; /* free, but don't send to sercom */
1431:apps/rssi/main.c **** 		}
1432:apps/rssi/main.c **** 
1433:apps/rssi/main.c **** 		switch (chan_type) {
1434:apps/rssi/main.c **** 		case RSL_CHAN_BCCH:
1435:apps/rssi/main.c **** 			msg->l3h = msg->l2h;
1436:apps/rssi/main.c **** 			rx_bcch(msg);
1437:apps/rssi/main.c **** 			break;
1438:apps/rssi/main.c **** 		case RSL_CHAN_PCH_AGCH:
1439:apps/rssi/main.c **** 			msg->l3h = msg->l2h;
1440:apps/rssi/main.c **** 			rx_pch_agch(msg);
1441:apps/rssi/main.c **** 			break;
1442:apps/rssi/main.c **** 		}
1443:apps/rssi/main.c **** 		sercomm_sendmsg(SC_DLCI_L1A_L23, msg);
1444:apps/rssi/main.c **** 		return; /* msg is freed by sercom */
1445:apps/rssi/main.c **** 	case L1CTL_NEIGH_PM_IND:
1446:apps/rssi/main.c **** 		for (pm_ind = (struct l1ctl_neigh_pm_ind *) l1h->data;
1447:apps/rssi/main.c **** 			(uint8_t *) pm_ind < msg->tail; pm_ind++) {
1448:apps/rssi/main.c **** 			ul_levels[pm_ind->tn] = pm_ind->pm[0];
1449:apps/rssi/main.c **** 			/* hold max only, if max enabled and level is lower */
1450:apps/rssi/main.c **** 			if (!max || ul_levels[pm_ind->tn] > ul_max[pm_ind->tn])
1451:apps/rssi/main.c **** 				ul_max[pm_ind->tn] = ul_levels[pm_ind->tn];
1452:apps/rssi/main.c **** 			if (pm_ind->tn == 7)
1453:apps/rssi/main.c **** 				ul_new = 1;
1454:apps/rssi/main.c **** 		}
1455:apps/rssi/main.c **** 		break;
1456:apps/rssi/main.c **** 	case L1CTL_RACH_CONF:
1457:apps/rssi/main.c **** 		dl = (struct l1ctl_info_dl *) l1h->data;
1458:apps/rssi/main.c **** 		gsm_fn2gsmtime(&tm, ntohl(dl->frame_nr));
1459:apps/rssi/main.c **** 		rach_ref.t1 = tm.t1;
1460:apps/rssi/main.c **** 		rach_ref.t2 = tm.t2;
1461:apps/rssi/main.c **** 		rach_ref.t3_low = tm.t3 & 0x7;
1462:apps/rssi/main.c **** 		rach_ref.t3_high = tm.t3 >> 3;
1463:apps/rssi/main.c **** 		break;
1464:apps/rssi/main.c **** 	}
1465:apps/rssi/main.c **** 
1466:apps/rssi/main.c **** 	msgb_free(msg);
1467:apps/rssi/main.c **** 
1468:apps/rssi/main.c **** }
1469:apps/rssi/main.c **** 
1470:apps/rssi/main.c **** static void console_rx_cb(uint8_t dlci, struct msgb *msg)
1471:apps/rssi/main.c **** {
 594              		.loc 4 1471 0
 595              		@ args = 0, pretend = 0, frame = 0
 596              		@ frame_needed = 0, uses_anonymous_args = 0
 597              	.LVL39:
 598 0000 0030A0E1 		mov	r3, r0
 599 0004 FF3003E2 		and	r3, r3, #255
1472:apps/rssi/main.c **** 	if (dlci != SC_DLCI_CONSOLE) {
 600              		.loc 4 1472 0
 601 0008 0A0053E3 		cmp	r3, #10
 602              		.loc 4 1471 0
 603 000c 10402DE9 		stmfd	sp!, {r4, lr}
 604              	.LCFI7:
1473:apps/rssi/main.c **** 		printf("Message for unknown DLCI %u\n", dlci);
1474:apps/rssi/main.c **** 		return;
1475:apps/rssi/main.c **** 	}
1476:apps/rssi/main.c **** 
1477:apps/rssi/main.c **** 	printf("Message on console DLCI: '%s'\n", msg->data);
 605              		.loc 4 1477 0
 606 0010 28009FE5 		ldr	r0, .L53
 607              	.LVL40:
 608              		.loc 4 1471 0
 609 0014 0140A0E1 		mov	r4, r1
 610              		.loc 4 1473 0
 611 0018 0310A0E1 		mov	r1, r3
 612              	.LVL41:
 613              		.loc 4 1472 0
 614 001c 0900000A 		beq	.L49
 615              	.LVL42:
 616              		.loc 4 1473 0
 617 0020 1C009FE5 		ldr	r0, .L53+4
1478:apps/rssi/main.c **** 	msgb_free(msg);
1479:apps/rssi/main.c **** }
 618              		.loc 4 1479 0
 619 0024 1040BDE8 		ldmfd	sp!, {r4, lr}
 620              		.loc 4 1473 0
 621 0028 FEFFFFEA 		b	printf
 622              	.LVL43:
 623              	.L49:
 624              		.loc 4 1477 0
 625 002c 401094E5 		ldr	r1, [r4, #64]
 626              	.LVL44:
 627 0030 FEFFFFEB 		bl	printf
 628              	.LVL45:
 629              		.loc 4 1478 0
 630 0034 0400A0E1 		mov	r0, r4
 631              		.loc 4 1479 0
 632 0038 1040BDE8 		ldmfd	sp!, {r4, lr}
 633              		.loc 4 1478 0
 634 003c FEFFFFEA 		b	msgb_free
 635              	.L54:
 636              		.align	2
 637              	.L53:
 638 0040 A0000000 		.word	.LC4
 639 0044 80000000 		.word	.LC3
 640              	.LFE142:
 642              		.section	.rodata.str1.4
 643 00bf 00       		.align	2
 644              	.LC5:
 645 00c0 6C31615F 		.ascii	"l1a_l23_rx_cb (DLCI %d): \000"
 645      6C32335F 
 645      72785F63 
 645      62202844 
 645      4C434920 
 646 00da 0000     		.align	2
 647              	.LC6:
 648 00dc 25303278 		.ascii	"%02x \000"
 648      2000
 649 00e2 0000     		.align	2
 650              	.LC7:
 651 00e4 0A00     		.ascii	"\012\000"
 652              		.section	.text.l1a_l23_rx_cb,"ax",%progbits
 653              		.align	2
 655              	l1a_l23_rx_cb:
 656              	.LFB143:
1480:apps/rssi/main.c **** 
1481:apps/rssi/main.c **** static void l1a_l23_rx_cb(uint8_t dlci, struct msgb *msg)
1482:apps/rssi/main.c **** {
 657              		.loc 4 1482 0
 658              		@ args = 0, pretend = 0, frame = 0
 659              		@ frame_needed = 0, uses_anonymous_args = 0
 660              	.LVL46:
 661 0000 FF0000E2 		and	r0, r0, #255
 662 0004 30402DE9 		stmfd	sp!, {r4, r5, lr}
 663              	.LCFI8:
 664              		.loc 4 1482 0
 665 0008 0150A0E1 		mov	r5, r1
1483:apps/rssi/main.c **** 	int i;
1484:apps/rssi/main.c **** 	printf("l1a_l23_rx_cb (DLCI %d): ", dlci);
 666              		.loc 4 1484 0
 667 000c 0010A0E1 		mov	r1, r0
 668              	.LVL47:
 669 0010 34009FE5 		ldr	r0, .L60
 670              	.LVL48:
 671 0014 FEFFFFEB 		bl	printf
 672              	.LVL49:
 673 0018 0040A0E3 		mov	r4, #0
 674              	.LVL50:
 675 001c 0A0000EA 		b	.L56
 676              	.L57:
1485:apps/rssi/main.c **** 	for (i = 0; i < msg->len; i++)
1486:apps/rssi/main.c **** 		printf("%02x ", msg->data[i]);
 677              		.loc 4 1486 0
 678 0020 403095E5 		ldr	r3, [r5, #64]
 679 0024 0410D3E7 		ldrb	r1, [r3, r4]	@ zero_extendqisi2
 680 0028 FEFFFFEB 		bl	printf
 681              		.loc 4 1485 0
 682 002c 014084E2 		add	r4, r4, #1
 683              	.L56:
 684 0030 B633D5E1 		ldrh	r3, [r5, #54]
 685 0034 030054E1 		cmp	r4, r3
 686              		.loc 4 1486 0
 687 0038 10009FE5 		ldr	r0, .L60+4
 688              		.loc 4 1485 0
 689 003c 060000BA 		blt	.L57
1487:apps/rssi/main.c **** 	puts("\n");
 690              		.loc 4 1487 0
 691 0040 0C009FE5 		ldr	r0, .L60+8
1488:apps/rssi/main.c **** }
 692              		.loc 4 1488 0
 693 0044 3040BDE8 		ldmfd	sp!, {r4, r5, lr}
 694              		.loc 4 1487 0
 695 0048 FEFFFFEA 		b	puts
 696              	.L61:
 697              		.align	2
 698              	.L60:
 699 004c C0000000 		.word	.LC5
 700 0050 DC000000 		.word	.LC6
 701 0054 E4000000 		.word	.LC7
 702              	.LFE143:
 704              		.section	.text.key_handler,"ax",%progbits
 705              		.align	2
 707              	key_handler:
 708              	.LFB144:
1489:apps/rssi/main.c **** 
1490:apps/rssi/main.c **** static void key_handler(enum key_codes code, enum key_states state)
1491:apps/rssi/main.c **** {
 709              		.loc 4 1491 0
 710              		@ args = 0, pretend = 0, frame = 0
 711              		@ frame_needed = 0, uses_anonymous_args = 0
 712              		@ link register save eliminated.
 713              	.LVL51:
1492:apps/rssi/main.c **** 	if (state != PRESSED) {
 714              		.loc 4 1492 0
 715 0000 000051E3 		cmp	r1, #0
 716 0004 4C109FE5 		ldr	r1, .L69
 717              	.LVL52:
1493:apps/rssi/main.c **** 		key_pressed = 0;
 718              		.loc 4 1493 0
 719 0008 0030A013 		movne	r3, #0
 720              		.loc 4 1491 0
 721              		@ lr needed for prologue
 722              		.loc 4 1493 0
 723 000c 00308115 		strne	r3, [r1, #0]
 724              		.loc 4 1492 0
 725 0010 1EFF2F11 		bxne	lr
1494:apps/rssi/main.c **** 		return;
1495:apps/rssi/main.c **** 	}
1496:apps/rssi/main.c **** 	/* key repeat */
1497:apps/rssi/main.c **** 	if (!key_pressed) {
 726              		.loc 4 1497 0
 727 0014 003091E5 		ldr	r3, [r1, #0]
 728 0018 000053E3 		cmp	r3, #0
 729 001c 1100001A 		bne	.L66
1498:apps/rssi/main.c **** 		key_pressed = 1;
1499:apps/rssi/main.c **** 		key_pressed_when = jiffies;
 730              		.loc 4 1499 0
 731 0020 34309FE5 		ldr	r3, .L69+4
 732 0024 002093E5 		ldr	r2, [r3, #0]
 733              		.loc 4 1498 0
 734 0028 0130A0E3 		mov	r3, #1
 735 002c 003081E5 		str	r3, [r1, #0]
 736              		.loc 4 1499 0
 737 0030 28309FE5 		ldr	r3, .L69+8
 738 0034 002083E5 		str	r2, [r3, #0]
1500:apps/rssi/main.c **** 		key_pressed_code = code;
1501:apps/rssi/main.c **** 		key_pressed_delay = HZ * 6 / 10;
 739              		.loc 4 1501 0
 740 0038 24309FE5 		ldr	r3, .L69+12
 741 003c 3C20A0E3 		mov	r2, #60
 742 0040 002083E5 		str	r2, [r3, #0]
 743              		.loc 4 1500 0
 744 0044 1C309FE5 		ldr	r3, .L69+16
 745 0048 000083E5 		str	r0, [r3, #0]
 746              	.L66:
1502:apps/rssi/main.c **** 	}
1503:apps/rssi/main.c **** 
1504:apps/rssi/main.c **** 	key_code = code;
 747              		.loc 4 1504 0
 748 004c 18309FE5 		ldr	r3, .L69+20
 749 0050 000083E5 		str	r0, [r3, #0]
 750 0054 1EFF2FE1 		bx	lr
 751              	.L70:
 752              		.align	2
 753              	.L69:
 754 0058 00000000 		.word	key_pressed
 755 005c 00000000 		.word	jiffies
 756 0060 00000000 		.word	key_pressed_when
 757 0064 00000000 		.word	key_pressed_delay
 758 0068 00000000 		.word	key_pressed_code
 759 006c 00000000 		.word	key_code
 760              	.LFE144:
 762              		.section	.text.print_display,"ax",%progbits
 763              		.align	2
 765              	print_display:
 766              	.LFB111:
 767              		.loc 4 158 0
 768              		@ args = 0, pretend = 0, frame = 0
 769              		@ frame_needed = 0, uses_anonymous_args = 0
 770              	.LVL53:
 771 0000 04E02DE5 		str	lr, [sp, #-4]!
 772              	.LCFI9:
 773              		.loc 4 160 0
 774 0004 003091E5 		ldr	r3, [r1, #0]
 775 0008 013083E2 		add	r3, r3, #1
 776              		.loc 4 161 0
 777 000c 030052E1 		cmp	r2, r3
 778              		.loc 4 164 0
 779 0010 03C062E0 		rsb	ip, r2, r3
 780              		.loc 4 160 0
 781 0014 003081E5 		str	r3, [r1, #0]
 782              		.loc 4 161 0
 783 0018 04F09DA4 		ldrge	pc, [sp], #4
 784              	.LBB2:
 785              	.LBB3:
  73:include/fb/framebuffer.h **** 
  74:include/fb/framebuffer.h **** static inline void
  75:include/fb/framebuffer.h **** fb_flush(){
  76:include/fb/framebuffer.h **** 	framebuffer->flush();
  77:include/fb/framebuffer.h **** }
  78:include/fb/framebuffer.h **** 
  79:include/fb/framebuffer.h **** static inline void
  80:include/fb/framebuffer.h **** fb_gotoxy(uint16_t x,uint16_t y){
  81:include/fb/framebuffer.h **** 	framebuffer->cursor_x = x;
  82:include/fb/framebuffer.h **** 	framebuffer->cursor_y = y;
 786              		.loc 3 82 0
 787 001c 8C39A0E1 		mov	r3, ip, asl #19
 788 0020 033783E2 		add	r3, r3, #786432
 789 0024 23E8A0E1 		mov	lr, r3, lsr #16
 790              	.LBE3:
 791              	.LBE2:
 792              		.loc 4 164 0
 793 0028 34309FE5 		ldr	r3, .L76
 794 002c 001093E5 		ldr	r1, [r3, #0]
 795              	.LVL54:
 796 0030 B232D1E1 		ldrh	r3, [r1, #34]
 797 0034 193043E2 		sub	r3, r3, #25
 798 0038 000053E3 		cmp	r3, #0
 799 003c 072083E2 		add	r2, r3, #7
 800              	.LVL55:
 801 0040 0230A0B1 		movlt	r3, r2
 802 0044 C3015CE1 		cmp	ip, r3, asr #3
 803 0048 04F09DC4 		ldrgt	pc, [sp], #4
 804              	.LBB4:
 805              	.LBB5:
 806              		.loc 3 81 0
 807 004c 0030A0E3 		mov	r3, #0	@ movhi
 808              		.loc 3 82 0
 809 0050 B6E2C1E1 		strh	lr, [r1, #38]	@ movhi
 810              		.loc 3 81 0
 811 0054 B432C1E1 		strh	r3, [r1, #36]	@ movhi
 812              	.LBE5:
 813              	.LBE4:
 814              		.loc 4 168 0
 815 0058 B012D1E1 		ldrh	r1, [r1, #32]
 816              		.loc 4 169 0
 817 005c 04E09DE4 		ldr	lr, [sp], #4
 818              		.loc 4 168 0
 819 0060 FEFFFFEA 		b	fb_putstr
 820              	.LVL56:
 821              	.L77:
 822              		.align	2
 823              	.L76:
 824 0064 00000000 		.word	framebuffer
 825              	.LFE111:
 827              		.section	.rodata.str1.4
 828 00e6 0000     		.align	2
 829              	.LC8:
 830 00e8 4F736D6F 		.ascii	"Osmocom RSSI\000"
 830      636F6D20 
 830      52535349 
 830      00
 831 00f5 000000   		.align	2
 832              	.LC9:
 833 00f8 40484842 		.ascii	"@HHBC\000"
 833      4300
 834 00fe 0000     		.align	2
 835              	.LC10:
 836 0100 40256325 		.ascii	"@%c%c%cC\000"
 836      63256343 
 836      00
 837 0109 000000   		.align	2
 838              	.LC11:
 839 010c 25632563 		.ascii	"%c%cE%c%c\000"
 839      45256325 
 839      6300
 840 0116 0000     		.align	2
 841              	.LC12:
 842 0118 52616368 		.ascii	"Rach sent...\000"
 842      2073656E 
 842      742E2E2E 
 842      00
 843 0125 000000   		.align	2
 844              	.LC13:
 845 0128 5441203D 		.ascii	"TA = %d\000"
 845      20256400 
 846              		.align	2
 847              	.LC14:
 848 0130 2825646D 		.ascii	"(%dm)\000"
 848      2900
 849 0136 0000     		.align	2
 850              	.LC15:
 851 0138 52656A65 		.ascii	"Rejected!\000"
 851      63746564 
 851      2100
 852 0142 0000     		.align	2
 853              	.LC16:
 854 0144 54582064 		.ascii	"TX disabled\000"
 854      69736162 
 854      6C656400 
 855              		.align	2
 856              	.LC17:
 857 0150 54696D65 		.ascii	"Timeout\000"
 857      6F757400 
 858              		.align	2
 859              	.LC18:
 860 0158 44656C61 		.ascii	"Delay:%ldms\000"
 860      793A256C 
 860      646D7300 
 861              		.global	__udivsi3
 862              		.align	2
 863              	.LC19:
 864 0164 25303264 		.ascii	"%02d\000"
 864      00
 865 0169 000000   		.align	2
 866              	.LC20:
 867 016c 6D617800 		.ascii	"max\000"
 868              		.align	2
 869              	.LC21:
 870 0170 25346450 		.ascii	"%4dP\000"
 870      00
 871 0175 000000   		.align	2
 872              	.LC22:
 873 0178 25346444 		.ascii	"%4dD\000"
 873      00
 874 017d 000000   		.align	2
 875              	.LC23:
 876 0180 25346420 		.ascii	"%4d \000"
 876      00
 877 0185 000000   		.align	2
 878              	.LC24:
 879 0188 42534943 		.ascii	"BSIC%d/%d %4d\000"
 879      25642F25 
 879      64202534 
 879      6400
 880 0196 0000     		.align	2
 881              	.LC25:
 882 0198 53796E63 		.ascii	"Sync %s\000"
 882      20257300 
 883              		.align	2
 884              	.LC26:
 885 01a0 4D434320 		.ascii	"MCC MNC LAC \000"
 885      4D4E4320 
 885      4C414320 
 885      00
 886 01ad 000000   		.align	2
 887              	.LC27:
 888 01b0 25337820 		.ascii	"%3x %02x  %04x\000"
 888      25303278 
 888      20202530 
 888      347800
 889 01bf 00       		.align	2
 890              	.LC28:
 891 01c0 25337820 		.ascii	"%3x %03x %04x\000"
 891      25303378 
 891      20253034 
 891      7800
 892 01ce 0000     		.align	2
 893              	.LC29:
 894 01d0 2D2D2D20 		.ascii	"--- --- ----\000"
 894      2D2D2D20 
 894      2D2D2D2D 
 894      00
 895 01dd 000000   		.align	2
 896              	.LC30:
 897 01e0 63656C6C 		.ascii	"cell id:%04x\000"
 897      2069643A 
 897      25303478 
 897      00
 898 01ed 000000   		.align	2
 899              	.LC31:
 900 01f0 63656C6C 		.ascii	"cell id:----\000"
 900      2069643A 
 900      2D2D2D2D 
 900      00
 901 01fd 000000   		.align	2
 902              	.LC32:
 903 0200 533A2025 		.ascii	"S: %4d\000"
 903      346400
 904 0207 00       		.align	2
 905              	.LC33:
 906 0208 20253464 		.ascii	" %4d\000"
 906      00
 907 020d 000000   		.align	2
 908              	.LC34:
 909 0210 4E3A2025 		.ascii	"N: %4d\000"
 909      346400
 910 0217 00       		.align	2
 911              	.LC35:
 912 0218 41524643 		.ascii	"ARFCN %s\000"
 912      4E202573 
 912      00
 913 0221 000000   		.align	2
 914              	.LC36:
 915 0224 41524643 		.ascii	"ARFCN %dPCS\000"
 915      4E202564 
 915      50435300 
 916              		.align	2
 917              	.LC37:
 918 0230 41524643 		.ascii	"ARFCN %dDCS\000"
 918      4E202564 
 918      44435300 
 919              		.align	2
 920              	.LC38:
 921 023c 41524643 		.ascii	"ARFCN %d\000"
 921      4E202564 
 921      00
 922 0245 000000   		.align	2
 923              	.LC39:
 924 0248 2000     		.ascii	" \000"
 925 024a 0000     		.align	2
 926              	.LC40:
 927 024c 46726571 		.ascii	"Freq. %d.%d\000"
 927      2E202564 
 927      2E256400 
 928              		.global	__divsi3
 929              		.global	__modsi3
 930              		.align	2
 931              	.LC41:
 932 0258 506F7765 		.ascii	"Power %d\000"
 932      72202564 
 932      00
 933 0261 000000   		.align	2
 934              	.LC42:
 935 0264 20202025 		.ascii	"   %4d\000"
 935      346400
 936 026b 00       		.align	2
 937              	.LC43:
 938 026c 78256400 		.ascii	"x%d\000"
 939              		.align	2
 940              	.LC44:
 941 0270 656E7465 		.ascii	"enter\000"
 941      7200
 942 0276 0000     		.align	2
 943              	.LC45:
 944 0278 64656C20 		.ascii	"del \000"
 944      00
 945 027d 000000   		.align	2
 946              	.LC46:
 947 0280 20202020 		.ascii	"     \000"
 947      2000
 948 0286 0000     		.align	2
 949              	.LC47:
 950 0288 6261636B 		.ascii	"back\000"
 950      00
 951 028d 000000   		.align	2
 952              	.LC48:
 953 0290 25732020 		.ascii	"%s   %s\000"
 953      20257300 
 954              		.align	2
 955              	.LC49:
 956 0298 554C00   		.ascii	"UL\000"
 957 029b 00       		.align	2
 958              	.LC50:
 959 029c 444C00   		.ascii	"DL\000"
 960 029f 00       		.align	2
 961              	.LC51:
 962 02a0 25732020 		.ascii	"%s      %s\000"
 962      20202020 
 962      257300
 963 02ab 00       		.align	2
 964              	.LC52:
 965 02ac 25732020 		.ascii	"%s        \000"
 965      20202020 
 965      202000
 966 02b7 00       		.align	2
 967              	.LC53:
 968 02b8 50435300 		.ascii	"PCS\000"
 969              		.align	2
 970              	.LC54:
 971 02bc 44435300 		.ascii	"DCS\000"
 972              		.align	2
 973              	.LC55:
 974 02c0 25732020 		.ascii	"%s       %s\000"
 974      20202020 
 974      20257300 
 975              		.align	2
 976              	.LC56:
 977 02cc 256400   		.ascii	"%d\000"
 978              		.section	.text.refresh_display,"ax",%progbits
 979              		.align	2
 981              	refresh_display:
 982              	.LFB112:
 983              		.loc 4 172 0
 984              		@ args = 0, pretend = 0, frame = 24
 985              		@ frame_needed = 0, uses_anonymous_args = 0
 986              	.LVL57:
 987 0000 F04F2DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 988              	.LCFI10:
 989              	.LBB6:
 990              	.LBB7:
 991              		.loc 3 56 0
 992 0004 B45F9FE5 		ldr	r5, .L292+288
 993              	.LBE7:
 994              	.LBE6:
 995              		.loc 4 174 0
 996 0008 906E9FE5 		ldr	r6, .L292
 997              	.LBB8:
 998              	.LBB9:
 999              		.loc 3 56 0
 1000 000c 003095E5 		ldr	r3, [r5, #0]
 1001              	.LBE9:
 1002              	.LBE8:
 1003              		.loc 4 172 0
 1004 0010 20D04DE2 		sub	sp, sp, #32
 1005              	.LCFI11:
 1006              	.LVL58:
 1007              		.loc 4 174 0
 1008 0014 104096E5 		ldr	r4, [r6, #16]
 1009              	.LVL59:
 1010              	.LBB10:
 1011              	.LBB11:
 1012              		.loc 3 56 0
 1013 0018 0FE0A0E1 		mov	lr, pc
 1014 001c 0CF093E5 		ldr	pc, [r3, #12]
 1015              	.LBE11:
 1016              	.LBE10:
 1017              		.loc 4 180 0
 1018 0020 9C3F9FE5 		ldr	r3, .L292+292
 1019 0024 002093E5 		ldr	r2, [r3, #0]
 1020              	.LBB12:
 1021              	.LBB13:
  83:include/fb/framebuffer.h **** }
  84:include/fb/framebuffer.h **** 
  85:include/fb/framebuffer.h **** static inline void
  86:include/fb/framebuffer.h **** fb_setfg(uint32_t color){
  87:include/fb/framebuffer.h **** 	framebuffer->fg_color = color;
  88:include/fb/framebuffer.h **** }
  89:include/fb/framebuffer.h **** 
  90:include/fb/framebuffer.h **** static inline void
  91:include/fb/framebuffer.h **** fb_setbg(uint32_t color){
  92:include/fb/framebuffer.h **** 	framebuffer->bg_color = color;
 1022              		.loc 3 92 0
 1023 0028 001095E5 		ldr	r1, [r5, #0]
 1024 002c FF34E0E3 		mvn	r3, #-16777216
 1025              	.LBE13:
 1026              	.LBE12:
 1027              		.loc 4 180 0
 1028 0030 010052E3 		cmp	r2, #1
 1029              	.LBB14:
 1030              	.LBB15:
 1031              		.loc 3 92 0
 1032 0034 2C3081E5 		str	r3, [r1, #44]
 1033              	.LBE15:
 1034              	.LBE14:
 1035              		.loc 4 180 0
 1036 0038 7400000A 		beq	.L79
 1037 003c 030052E3 		cmp	r2, #3
 1038 0040 1300001A 		bne	.L81
 1039 0044 8C3F9FE5 		ldr	r3, .L292+312
 1040 0048 003093E5 		ldr	r3, [r3, #0]
 1041 004c 000053E3 		cmp	r3, #0
 1042 0050 740000BA 		blt	.L79
 1043              	.L81:
 1044              	.LBB16:
 1045              	.LBB17:
 1046              		.loc 3 87 0
 1047 0054 FF30A0E3 		mov	r3, #255
 1048              	.LBE17:
 1049              	.LBE16:
 1050              	.LBB18:
 1051              	.LBB19:
  93:include/fb/framebuffer.h **** }
  94:include/fb/framebuffer.h **** 
  95:include/fb/framebuffer.h **** static inline void
  96:include/fb/framebuffer.h **** fb_setfont(enum fb_font_id fid){
  97:include/fb/framebuffer.h **** 	framebuffer->font = fid;
 1052              		.loc 3 97 0
 1053 0058 0020A0E3 		mov	r2, #0
 1054              	.LBE19:
 1055              	.LBE18:
 1056              	.LBB20:
 1057              	.LBB21:
 1058              		.loc 3 87 0
 1059 005c 283081E5 		str	r3, [r1, #40]
 1060              	.LBE21:
 1061              	.LBE20:
 1062              	.LBB22:
 1063              	.LBB23:
 1064              		.loc 3 82 0
 1065 0060 0730A0E3 		mov	r3, #7	@ movhi
 1066              		.loc 3 81 0
 1067 0064 B422C1E1 		strh	r2, [r1, #36]	@ movhi
 1068              		.loc 3 82 0
 1069 0068 B632C1E1 		strh	r3, [r1, #38]	@ movhi
 1070              	.LBE23:
 1071              	.LBE22:
 1072              	.LBB24:
 1073              	.LBB25:
 1074              		.loc 3 97 0
 1075 006c 302081E5 		str	r2, [r1, #48]
 1076              	.LBE25:
 1077              	.LBE24:
 1078              		.loc 4 184 0
 1079 0070 2C0E9FE5 		ldr	r0, .L292+4
 1080 0074 0010E0E3 		mvn	r1, #0
 1081 0078 FEFFFFEB 		bl	fb_putstr
 1082              	.LBB26:
 1083              	.LBB27:
 1084              		.loc 3 87 0
 1085 007c 002095E5 		ldr	r2, [r5, #0]
 1086              	.LBE27:
 1087              	.LBE26:
 1088              	.LBB28:
 1089              	.LBB29:
 1090              		.loc 3 81 0
 1091 0080 B002D2E1 		ldrh	r0, [r2, #32]
 1092              	.LBE29:
 1093              	.LBE28:
 1094              	.LBB30:
 1095              	.LBB31:
 1096              		.loc 3 87 0
 1097 0084 1C3E9FE5 		ldr	r3, .L292+8
 1098              	.LBE31:
 1099              	.LBE30:
 1100              	.LBB32:
 1101              	.LBB33:
 1102              		.loc 3 81 0
 1103 0088 0F1040E2 		sub	r1, r0, #15
 1104              	.LBE33:
 1105              	.LBE32:
 1106              	.LBB34:
 1107              	.LBB35:
 1108              		.loc 3 87 0
 1109 008c 283082E5 		str	r3, [r2, #40]
 1110              	.LBE35:
 1111              	.LBE34:
 1112              	.LBB36:
 1113              	.LBB37:
 1114              		.loc 3 81 0
 1115 0090 B412C2E1 		strh	r1, [r2, #36]	@ movhi
 1116              	.LBE37:
 1117              	.LBE36:
 1118              	.LBB38:
 1119              	.LBB39:
 1120              		.loc 3 97 0
 1121 0094 0330A0E3 		mov	r3, #3
 1122              	.LBE39:
 1123              	.LBE38:
 1124              	.LBB40:
 1125              	.LBB41:
 1126              		.loc 3 82 0
 1127 0098 0810A0E3 		mov	r1, #8	@ movhi
 1128              	.LBE41:
 1129              	.LBE40:
 1130              		.loc 4 188 0
 1131 009c 630054E3 		cmp	r4, #99
 1132              	.LBB42:
 1133              	.LBB43:
 1134              		.loc 3 97 0
 1135 00a0 303082E5 		str	r3, [r2, #48]
 1136              	.LBE43:
 1137              	.LBE42:
 1138              	.LBB44:
 1139              	.LBB45:
 1140              		.loc 3 82 0
 1141 00a4 B612C2E1 		strh	r1, [r2, #38]	@ movhi
 1142              	.LBE45:
 1143              	.LBE44:
 1144              		.loc 4 188 0
 1145 00a8 310000DA 		ble	.L83
 1146 00ac 003096E5 		ldr	r3, [r6, #0]
 1147 00b0 020013E3 		tst	r3, #2
 1148 00b4 3E00000A 		beq	.L85
 1149 00b8 040013E3 		tst	r3, #4
 1150              		.loc 4 190 0
 1151 00bc 0010A001 		moveq	r1, r0
 1152 00c0 E40D9F05 		ldreq	r0, .L292+12
 1153              		.loc 4 188 0
 1154 00c4 4A00000A 		beq	.L279
 1155 00c8 3E0000EA 		b	.L85
 1156              	.L83:
 1157              		.loc 4 192 0
 1158 00cc 1D0054E3 		cmp	r4, #29
 1159 00d0 4120A0D3 		movle	r2, #65
 1160 00d4 3F0000DA 		ble	.L278
 1161 00d8 3B0054E3 		cmp	r4, #59
 1162 00dc 41C0A0D3 		movle	ip, #65
 1163 00e0 4220A0D3 		movle	r2, #66
 1164 00e4 0C30A0D1 		movle	r3, ip
 1165 00e8 410000DA 		ble	.L91
 1166 00ec 590054E3 		cmp	r4, #89
 1167 00f0 4230A0D3 		movle	r3, #66
 1168 00f4 41C0A0D3 		movle	ip, #65
 1169 00f8 0320A0D1 		movle	r2, r3
 1170 00fc 410000DA 		ble	.L91
 1171              	.L85:
 1172 0100 4220A0E3 		mov	r2, #66
 1173              	.L278:
 1174 0104 02C0A0E1 		mov	ip, r2
 1175 0108 0230A0E1 		mov	r3, r2
 1176              	.L91:
 1177 010c 0C408DE2 		add	r4, sp, #12
 1178              	.LVL60:
 1179 0110 981D9FE5 		ldr	r1, .L292+16
 1180 0114 0400A0E1 		mov	r0, r4
 1181 0118 00C08DE5 		str	ip, [sp, #0]
 1182 011c FEFFFFEB 		bl	sprintf
 1183              		.loc 4 194 0
 1184 0120 983E9FE5 		ldr	r3, .L292+288
 1185 0124 003093E5 		ldr	r3, [r3, #0]
 1186 0128 B012D3E1 		ldrh	r1, [r3, #32]
 1187 012c 0400A0E1 		mov	r0, r4
 1188              	.LVL61:
 1189              	.L279:
 1190 0130 FEFFFFEB 		bl	fb_putstr
 1191              		.loc 4 197 0
 1192 0134 783D9FE5 		ldr	r3, .L292+20
 1193 0138 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1194              	.LBB46:
 1195              	.LBB47:
 1196              		.loc 3 81 0
 1197 013c 7C3E9FE5 		ldr	r3, .L292+288
 1198 0140 003093E5 		ldr	r3, [r3, #0]
 1199              		.loc 3 82 0
 1200 0144 0810A0E3 		mov	r1, #8	@ movhi
 1201              	.LBE47:
 1202              	.LBE46:
 1203              		.loc 4 197 0
 1204 0148 270052E3 		cmp	r2, #39
 1205              	.LBB48:
 1206              	.LBB49:
 1207              		.loc 3 82 0
 1208 014c B612C3E1 		strh	r1, [r3, #38]	@ movhi
 1209              		.loc 3 81 0
 1210 0150 0010A0E3 		mov	r1, #0	@ movhi
 1211 0154 B412C3E1 		strh	r1, [r3, #36]	@ movhi
 1212              	.LBE49:
 1213              	.LBE48:
 1214              		.loc 4 197 0
 1215 0158 46C0A083 		movhi	ip, #70
 1216 015c 4420A083 		movhi	r2, #68
 1217 0160 5B00008A 		bhi	.L280
 1218 0164 090052E3 		cmp	r2, #9
 1219 0168 B404008A 		bhi	.L98
 1220 016c 47C0A0E3 		mov	ip, #71
 1221 0170 0C20A0E1 		mov	r2, ip
 1222              	.L280:
 1223 0174 0CE0A0E1 		mov	lr, ip
 1224 0178 0230A0E1 		mov	r3, r2
 1225              	.L97:
 1226 017c 0C408DE2 		add	r4, sp, #12
 1227              	.LVL62:
 1228              		.loc 4 200 0
 1229 0180 385E9FE5 		ldr	r5, .L292+288
 1230              		.loc 4 197 0
 1231 0184 2C1D9FE5 		ldr	r1, .L292+24
 1232 0188 0400A0E1 		mov	r0, r4
 1233 018c 00508DE8 		stmia	sp, {ip, lr}	@ phole stm
 1234 0190 FEFFFFEB 		bl	sprintf
 1235              		.loc 4 200 0
 1236 0194 003095E5 		ldr	r3, [r5, #0]
 1237 0198 0400A0E1 		mov	r0, r4
 1238 019c B012D3E1 		ldrh	r1, [r3, #32]
 1239 01a0 FEFFFFEB 		bl	fb_putstr
 1240              	.LBB50:
 1241              	.LBB51:
 1242              		.loc 3 87 0
 1243 01a4 002095E5 		ldr	r2, [r5, #0]
 1244              	.LBE51:
 1245              	.LBE50:
 1246              		.loc 4 203 0
 1247 01a8 B002D2E1 		ldrh	r0, [r2, #32]
 1248              	.LBB52:
 1249              	.LBB53:
 1250              		.loc 3 87 0
 1251 01ac FF3CA0E3 		mov	r3, #65280
 1252              	.LBE53:
 1253              	.LBE52:
 1254              		.loc 4 203 0
 1255 01b0 010040E2 		sub	r0, r0, #1
 1256              	.LBB54:
 1257              	.LBB55:
 1258              		.loc 3 82 0
 1259 01b4 0A10A0E3 		mov	r1, #10	@ movhi
 1260              	.LBE55:
 1261              	.LBE54:
 1262              		.loc 4 203 0
 1263 01b8 0008A0E1 		mov	r0, r0, asl #16
 1264              	.LBB56:
 1265              	.LBB57:
 1266              		.loc 3 87 0
 1267 01bc 283082E5 		str	r3, [r2, #40]
 1268              	.LBE57:
 1269              	.LBE56:
 1270              	.LBB58:
 1271              	.LBB59:
 1272              		.loc 3 81 0
 1273 01c0 0030A0E3 		mov	r3, #0	@ movhi
 1274              		.loc 3 82 0
 1275 01c4 B612C2E1 		strh	r1, [r2, #38]	@ movhi
 1276              		.loc 3 81 0
 1277 01c8 B432C2E1 		strh	r3, [r2, #36]	@ movhi
 1278              	.LBE59:
 1279              	.LBE58:
 1280              		.loc 4 203 0
 1281 01cc 2008A0E1 		mov	r0, r0, lsr #16
 1282 01d0 0A10A0E3 		mov	r1, #10
 1283 01d4 FEFFFFEB 		bl	fb_boxto
 1284              	.LVL63:
 1285              	.L79:
 1286              		.loc 4 209 0
 1287 01d8 E43D9FE5 		ldr	r3, .L292+292
 1288 01dc 002093E5 		ldr	r2, [r3, #0]
 1289              	.LBB60:
 1290              	.LBB61:
 1291              		.loc 3 87 0
 1292 01e0 D83D9FE5 		ldr	r3, .L292+288
 1293 01e4 00C093E5 		ldr	ip, [r3, #0]
 1294 01e8 0000A0E3 		mov	r0, #0
 1295              	.LBE61:
 1296              	.LBE60:
 1297              	.LBB62:
 1298              	.LBB63:
 1299              		.loc 3 97 0
 1300 01ec 0230A0E3 		mov	r3, #2
 1301              	.LBE63:
 1302              	.LBE62:
 1303              		.loc 4 209 0
 1304 01f0 040052E3 		cmp	r2, #4
 1305              	.LBB64:
 1306              	.LBB65:
 1307              		.loc 3 97 0
 1308 01f4 30308CE5 		str	r3, [ip, #48]
 1309              	.LBE65:
 1310              	.LBE64:
 1311              	.LBB66:
 1312              	.LBB67:
 1313              		.loc 3 87 0
 1314 01f8 28008CE5 		str	r0, [ip, #40]
 1315              	.LBE67:
 1316              	.LBE66:
 1317              		.loc 4 209 0
 1318 01fc CA00001A 		bne	.L100
 1319              	.LBB68:
 1320              		.loc 4 210 0
 1321 0200 B43C9FE5 		ldr	r3, .L292+28
 1322 0204 001093E5 		ldr	r1, [r3, #0]
 1323 0208 B03C9FE5 		ldr	r3, .L292+32
 1324 020c 002093E5 		ldr	r2, [r3, #0]
 1325              		.loc 4 213 0
 1326 0210 AC3C9FE5 		ldr	r3, .L292+36
 1327 0214 003093E5 		ldr	r3, [r3, #0]
 1328              		.loc 4 210 0
 1329 0218 016062E0 		rsb	r6, r2, r1
 1330              	.LVL64:
 1331              	.LBB69:
 1332              	.LBB70:
 1333              		.loc 3 82 0
 1334 021c 1C20A0E3 		mov	r2, #28	@ movhi
 1335              		.loc 3 81 0
 1336 0220 B402CCE1 		strh	r0, [ip, #36]	@ movhi
 1337              		.loc 3 82 0
 1338 0224 B622CCE1 		strh	r2, [ip, #38]	@ movhi
 1339              	.LBE70:
 1340              	.LBE69:
 1341              		.loc 4 213 0
 1342 0228 040053E3 		cmp	r3, #4
 1343 022c 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 1344 0230 B30000EA 		b	.L102
 1345              		.p2align 2
 1346              	.L108:
 1347 0234 48020000 		.word	.L103
 1348 0238 BC020000 		.word	.L104
 1349 023c 54020000 		.word	.L105
 1350 0240 B0020000 		.word	.L106
 1351 0244 C8020000 		.word	.L107
 1352              	.L103:
 1353              		.loc 4 215 0
 1354 0248 780C9FE5 		ldr	r0, .L292+40
 1355 024c 0010E0E3 		mvn	r1, #0
 1356 0250 B20000EA 		b	.L281
 1357              	.L105:
 1358              		.loc 4 218 0
 1359 0254 705C9FE5 		ldr	r5, .L292+44
 1360 0258 0C408DE2 		add	r4, sp, #12
 1361              	.LVL65:
 1362 025c 0020D5E5 		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 1363 0260 681C9FE5 		ldr	r1, .L292+48
 1364 0264 0400A0E1 		mov	r0, r4
 1365 0268 FEFFFFEB 		bl	sprintf
 1366              		.loc 4 219 0
 1367 026c 0010E0E3 		mvn	r1, #0
 1368 0270 0400A0E1 		mov	r0, r4
 1369 0274 FEFFFFEB 		bl	fb_putstr
 1370              	.LBB71:
 1371              	.LBB72:
 1372              		.loc 3 81 0
 1373 0278 403D9FE5 		ldr	r3, .L292+288
 1374 027c 001093E5 		ldr	r1, [r3, #0]
 1375              		.loc 3 82 0
 1376 0280 2430A0E3 		mov	r3, #36	@ movhi
 1377              	.LBE72:
 1378              	.LBE71:
 1379              		.loc 4 221 0
 1380 0284 0020D5E5 		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 1381              	.LBB73:
 1382              	.LBB74:
 1383              		.loc 3 82 0
 1384 0288 B632C1E1 		strh	r3, [r1, #38]	@ movhi
 1385              	.LBE74:
 1386              	.LBE73:
 1387              		.loc 4 221 0
 1388 028c 403C9FE5 		ldr	r3, .L292+52
 1389 0290 930202E0 		mul	r2, r3, r2
 1390              	.LBB75:
 1391              	.LBB76:
 1392              		.loc 3 81 0
 1393 0294 0030A0E3 		mov	r3, #0	@ movhi
 1394 0298 B432C1E1 		strh	r3, [r1, #36]	@ movhi
 1395              	.LBE76:
 1396              	.LBE75:
 1397              		.loc 4 221 0
 1398 029c 0400A0E1 		mov	r0, r4
 1399 02a0 301C9FE5 		ldr	r1, .L292+56
 1400 02a4 FEFFFFEB 		bl	sprintf
 1401              		.loc 4 222 0
 1402 02a8 0400A0E1 		mov	r0, r4
 1403 02ac B10000EA 		b	.L291
 1404              	.LVL66:
 1405              	.L106:
 1406              		.loc 4 225 0
 1407 02b0 240C9FE5 		ldr	r0, .L292+60
 1408 02b4 0010E0E3 		mvn	r1, #0
 1409 02b8 B20000EA 		b	.L281
 1410              	.L104:
 1411              		.loc 4 228 0
 1412 02bc 1C0C9FE5 		ldr	r0, .L292+64
 1413 02c0 0010E0E3 		mvn	r1, #0
 1414 02c4 B20000EA 		b	.L281
 1415              	.L107:
 1416              		.loc 4 231 0
 1417 02c8 140C9FE5 		ldr	r0, .L292+68
 1418              	.L291:
 1419 02cc 0010E0E3 		mvn	r1, #0
 1420              	.L281:
 1421 02d0 FEFFFFEB 		bl	fb_putstr
 1422              	.L102:
 1423              		.loc 4 234 0
 1424 02d4 E83B9FE5 		ldr	r3, .L292+36
 1425 02d8 003093E5 		ldr	r3, [r3, #0]
 1426 02dc 023043E2 		sub	r3, r3, #2
 1427 02e0 010053E3 		cmp	r3, #1
 1428 02e4 CA00008A 		bhi	.L100
 1429              	.LBB77:
 1430              	.LBB78:
 1431              		.loc 3 81 0
 1432 02e8 D03C9FE5 		ldr	r3, .L292+288
 1433 02ec 002093E5 		ldr	r2, [r3, #0]
 1434              	.LBE78:
 1435              	.LBE77:
 1436              		.loc 4 238 0
 1437 02f0 FA3FA0E3 		mov	r3, #1000
 1438              	.LBB79:
 1439              	.LBB80:
 1440              		.loc 3 82 0
 1441 02f4 2C10A0E3 		mov	r1, #44	@ movhi
 1442              	.LBE80:
 1443              	.LBE79:
 1444              		.loc 4 238 0
 1445 02f8 960300E0 		mul	r0, r6, r3
 1446              	.LBB81:
 1447              	.LBB82:
 1448              		.loc 3 81 0
 1449 02fc 0030A0E3 		mov	r3, #0	@ movhi
 1450              		.loc 3 82 0
 1451 0300 B612C2E1 		strh	r1, [r2, #38]	@ movhi
 1452              		.loc 3 81 0
 1453 0304 B432C2E1 		strh	r3, [r2, #36]	@ movhi
 1454              	.LBE82:
 1455              	.LBE81:
 1456              		.loc 4 238 0
 1457 0308 6410A0E3 		mov	r1, #100
 1458 030c FEFFFFEB 		bl	__udivsi3
 1459 0310 0C408DE2 		add	r4, sp, #12
 1460              	.LVL67:
 1461 0314 0020A0E1 		mov	r2, r0
 1462 0318 C81B9FE5 		ldr	r1, .L292+72
 1463 031c 0400A0E1 		mov	r0, r4
 1464 0320 FEFFFFEB 		bl	sprintf
 1465              		.loc 4 239 0
 1466 0324 0400A0E1 		mov	r0, r4
 1467 0328 0010E0E3 		mvn	r1, #0
 1468 032c FEFFFFEB 		bl	fb_putstr
 1469              	.LVL68:
 1470              	.L100:
 1471              	.LBE68:
 1472              		.loc 4 247 0
 1473 0330 8C3C9FE5 		ldr	r3, .L292+292
 1474 0334 003093E5 		ldr	r3, [r3, #0]
 1475 0338 030053E3 		cmp	r3, #3
 1476 033c 6A02001A 		bne	.L110
 1477 0340 903C9FE5 		ldr	r3, .L292+312
 1478 0344 003093E5 		ldr	r3, [r3, #0]
 1479 0348 000053E3 		cmp	r3, #0
 1480 034c 730100AA 		bge	.L112
 1481              	.LBB83:
 1482              		.loc 4 249 0
 1483 0350 683C9FE5 		ldr	r3, .L292+288
 1484 0354 002093E5 		ldr	r2, [r3, #0]
 1485 0358 B032D2E1 		ldrh	r3, [r2, #32]
 1486 035c 603043E2 		sub	r3, r3, #96
 1487 0360 C330A0E1 		mov	r3, r3, asr #1
 1488              	.LVL69:
 1489              	.LBB84:
 1490              	.LBB85:
 1491              		.loc 3 97 0
 1492 0364 0000A0E3 		mov	r0, #0
 1493 0368 033083E2 		add	r3, r3, #3
 1494              	.LVL70:
 1495              	.LBE85:
 1496              	.LBE84:
 1497              		.loc 4 250 0
 1498 036c B212D2E1 		ldrh	r1, [r2, #34]
 1499              	.LBB86:
 1500              	.LBB87:
 1501              		.loc 3 97 0
 1502 0370 0338A0E1 		mov	r3, r3, asl #16
 1503 0374 300082E5 		str	r0, [r2, #48]
 1504              	.LBE87:
 1505              	.LBE86:
 1506              		.loc 4 250 0
 1507 0378 198041E2 		sub	r8, r1, #25
 1508              	.LVL71:
 1509              	.LBB88:
 1510              	.LBB89:
 1511              		.loc 3 97 0
 1512 037c 2368A0E1 		mov	r6, r3, lsr #16
 1513              	.LVL72:
 1514 0380 0090A0E1 		mov	r9, r0
 1515              	.LVL73:
 1516              	.LVL74:
 1517              	.L114:
 1518              	.LBE89:
 1519              	.LBE88:
 1520              		.loc 4 254 0
 1521 0384 603C9FE5 		ldr	r3, .L292+332
 1522 0388 003093E5 		ldr	r3, [r3, #0]
 1523 038c 000053E3 		cmp	r3, #0
 1524              		.loc 4 255 0
 1525 0390 03308912 		addne	r3, r9, #3
 1526 0394 07500312 		andne	r5, r3, #7
 1527              		.loc 4 260 0
 1528 0398 4C3B9FE5 		ldr	r3, .L292+76
 1529 039c 001093E5 		ldr	r1, [r3, #0]
 1530              	.LBB90:
 1531              	.LBB91:
 1532              		.loc 3 92 0
 1533 03a0 183C9FE5 		ldr	r3, .L292+288
 1534 03a4 002093E5 		ldr	r2, [r3, #0]
 1535              	.LBE91:
 1536              	.LBE90:
 1537              		.loc 4 254 0
 1538 03a8 0950A001 		moveq	r5, r9
 1539              		.loc 4 260 0
 1540 03ac 000051E3 		cmp	r1, #0
 1541              	.LBB92:
 1542              	.LBB93:
 1543              		.loc 3 81 0
 1544 03b0 031046E2 		sub	r1, r6, #3
 1545              	.LBE93:
 1546              	.LBE92:
 1547              	.LBB94:
 1548              	.LBB95:
 1549              		.loc 3 92 0
 1550 03b4 FF34E0E3 		mvn	r3, #-16777216
 1551              	.LBE95:
 1552              	.LBE94:
 1553              	.LBB96:
 1554              	.LBB97:
 1555              		.loc 3 81 0
 1556 03b8 B412C2E1 		strh	r1, [r2, #36]	@ movhi
 1557              		.loc 3 82 0
 1558 03bc 0710A0E3 		mov	r1, #7	@ movhi
 1559              	.LBE97:
 1560              	.LBE96:
 1561              	.LBB98:
 1562              	.LBB99:
 1563              		.loc 3 92 0
 1564 03c0 2C3082E5 		str	r3, [r2, #44]
 1565              	.LBE99:
 1566              	.LBE98:
 1567              	.LBB100:
 1568              	.LBB101:
 1569              		.loc 3 82 0
 1570 03c4 B612C2E1 		strh	r1, [r2, #38]	@ movhi
 1571              	.LBE101:
 1572              	.LBE100:
 1573              		.loc 4 260 0
 1574 03c8 203B9F15 		ldrne	r3, .L292+80
 1575 03cc 203B9F05 		ldreq	r3, .L292+84
 1576 03d0 0520D3E7 		ldrb	r2, [r3, r5]	@ zero_extendqisi2
 1577              	.LVL75:
 1578              		.loc 4 261 0
 1579 03d4 6E2062E2 		rsb	r2, r2, #110
 1580              	.LVL76:
 1581              		.loc 4 262 0
 1582 03d8 630052E3 		cmp	r2, #99
 1583              		.loc 4 265 0
 1584 03dc DCAB9FE5 		ldr	sl, .L292+288
 1585              		.loc 4 263 0
 1586 03e0 642042C2 		subgt	r2, r2, #100
 1587              		.loc 4 264 0
 1588 03e4 0C1B9FE5 		ldr	r1, .L292+88
 1589 03e8 0C008DE2 		add	r0, sp, #12
 1590 03ec FEFFFFEB 		bl	sprintf
 1591              	.LVL77:
 1592              		.loc 4 265 0
 1593 03f0 00309AE5 		ldr	r3, [sl, #0]
 1594 03f4 0C008DE2 		add	r0, sp, #12
 1595 03f8 B012D3E1 		ldrh	r1, [r3, #32]
 1596 03fc FEFFFFEB 		bl	fb_putstr
 1597              		.loc 4 267 0
 1598 0400 0808A0E1 		mov	r0, r8, asl #16
 1599              	.LBB102:
 1600              	.LBB103:
 1601              		.loc 3 92 0
 1602 0404 00209AE5 		ldr	r2, [sl, #0]
 1603              	.LBE103:
 1604              	.LBE102:
 1605              	.LBB104:
 1606              	.LBB105:
 1607              		.loc 3 82 0
 1608 0408 0A3880E2 		add	r3, r0, #655360
 1609 040c 2338A0E1 		mov	r3, r3, lsr #16
 1610 0410 B632C2E1 		strh	r3, [r2, #38]	@ movhi
 1611              	.LBE105:
 1612              	.LBE104:
 1613              	.LBB106:
 1614              	.LBB107:
 1615              		.loc 3 92 0
 1616 0414 0030A0E3 		mov	r3, #0
 1617 0418 2C3082E5 		str	r3, [r2, #44]
 1618              	.LBE107:
 1619              	.LBE106:
 1620              	.LBB108:
 1621              	.LBB109:
 1622              		.loc 3 81 0
 1623 041c B462C2E1 		strh	r6, [r2, #36]	@ movhi
 1624              	.LBE109:
 1625              	.LBE108:
 1626              		.loc 4 268 0
 1627 0420 CC3A9FE5 		ldr	r3, .L292+84
 1628 0424 0530D3E7 		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 1629 0428 980301E0 		mul	r1, r8, r3
 1630 042c 000051E3 		cmp	r1, #0
 1631 0430 3F3081E2 		add	r3, r1, #63
 1632 0434 0310A0B1 		movlt	r1, r3
 1633              	.LBB110:
 1634              	.LBB111:
 1635              		.loc 3 82 0
 1636 0438 2048A0E1 		mov	r4, r0, lsr #16
 1637              	.LVL78:
 1638              	.LBE111:
 1639              	.LBE110:
 1640              		.loc 4 268 0
 1641 043c 411344E0 		sub	r1, r4, r1, asr #6
 1642 0440 053086E2 		add	r3, r6, #5
 1643 0444 0338A0E1 		mov	r3, r3, asl #16
 1644 0448 0A1081E2 		add	r1, r1, #10
 1645 044c 2378A0E1 		mov	r7, r3, lsr #16
 1646 0450 0118A0E1 		mov	r1, r1, asl #16
 1647              		.loc 4 269 0
 1648 0454 90BA9FE5 		ldr	fp, .L292+76
 1649              		.loc 4 268 0
 1650 0458 2118A0E1 		mov	r1, r1, lsr #16
 1651 045c 0700A0E1 		mov	r0, r7
 1652 0460 FEFFFFEB 		bl	fb_boxto
 1653              		.loc 4 269 0
 1654 0464 00309BE5 		ldr	r3, [fp, #0]
 1655 0468 000053E3 		cmp	r3, #0
 1656 046c 3001000A 		beq	.L123
 1657 0470 781A9FE5 		ldr	r1, .L292+80
 1658 0474 0530D1E7 		ldrb	r3, [r1, r5]	@ zero_extendqisi2
 1659 0478 980303E0 		mul	r3, r8, r3
 1660 047c 3F2083E2 		add	r2, r3, #63
 1661 0480 000053E3 		cmp	r3, #0
 1662 0484 0230A0B1 		movlt	r3, r2
 1663 0488 433344E0 		sub	r3, r4, r3, asr #6
 1664              	.LBB112:
 1665              	.LBB113:
 1666              		.loc 3 81 0
 1667 048c 00209AE5 		ldr	r2, [sl, #0]
 1668              	.LBE113:
 1669              	.LBE112:
 1670              		.loc 4 269 0
 1671 0490 0A3083E2 		add	r3, r3, #10
 1672              	.LBB114:
 1673              	.LBB115:
 1674              		.loc 3 82 0
 1675 0494 B632C2E1 		strh	r3, [r2, #38]	@ movhi
 1676              		.loc 3 81 0
 1677 0498 B462C2E1 		strh	r6, [r2, #36]	@ movhi
 1678              	.LBE115:
 1679              	.LBE114:
 1680              		.loc 4 271 0
 1681 049c 0530D1E7 		ldrb	r3, [r1, r5]	@ zero_extendqisi2
 1682 04a0 980301E0 		mul	r1, r8, r3
 1683 04a4 3F3081E2 		add	r3, r1, #63
 1684 04a8 000051E3 		cmp	r1, #0
 1685 04ac 0310A0B1 		movlt	r1, r3
 1686 04b0 411344E0 		sub	r1, r4, r1, asr #6
 1687 04b4 0A1081E2 		add	r1, r1, #10
 1688 04b8 0118A0E1 		mov	r1, r1, asl #16
 1689 04bc 0700A0E1 		mov	r0, r7
 1690 04c0 2118A0E1 		mov	r1, r1, lsr #16
 1691 04c4 FEFFFFEB 		bl	fb_boxto
 1692              	.L123:
 1693              		.loc 4 253 0
 1694 04c8 0C3086E2 		add	r3, r6, #12
 1695 04cc 019089E2 		add	r9, r9, #1
 1696 04d0 0338A0E1 		mov	r3, r3, asl #16
 1697 04d4 080059E3 		cmp	r9, #8
 1698 04d8 2368A0E1 		mov	r6, r3, lsr #16
 1699 04dc DF00001A 		bne	.L114
 1700              		.loc 4 275 0
 1701 04e0 00309BE5 		ldr	r3, [fp, #0]
 1702              	.LBB116:
 1703              	.LBB117:
 1704              		.loc 3 92 0
 1705 04e4 00009AE5 		ldr	r0, [sl, #0]
 1706              	.LBE117:
 1707              	.LBE116:
 1708              		.loc 4 275 0
 1709 04e8 000053E3 		cmp	r3, #0
 1710              	.LBB118:
 1711              	.LBB119:
 1712              		.loc 3 92 0
 1713 04ec FE34E0E3 		mvn	r3, #-33554432
 1714 04f0 2C3080E5 		str	r3, [r0, #44]
 1715              	.LBE119:
 1716              	.LBE118:
 1717              		.loc 4 275 0
 1718 04f4 4501000A 		beq	.L126
 1719              	.LBB120:
 1720              	.LBB121:
 1721              		.loc 3 81 0
 1722 04f8 B012D0E1 		ldrh	r1, [r0, #32]
 1723 04fc 102041E2 		sub	r2, r1, #16
 1724 0500 B422C0E1 		strh	r2, [r0, #36]	@ movhi
 1725              	.LBE121:
 1726              	.LBE120:
 1727              	.LBB122:
 1728              	.LBB123:
 1729              		.loc 3 87 0
 1730 0504 FF38A0E3 		mov	r3, #16711680
 1731              	.LBE123:
 1732              	.LBE122:
 1733              	.LBB124:
 1734              	.LBB125:
 1735              		.loc 3 82 0
 1736 0508 0F20A0E3 		mov	r2, #15	@ movhi
 1737              	.LBE125:
 1738              	.LBE124:
 1739              	.LBB126:
 1740              	.LBB127:
 1741              		.loc 3 87 0
 1742 050c 283080E5 		str	r3, [r0, #40]
 1743              	.LBE127:
 1744              	.LBE126:
 1745              	.LBB128:
 1746              	.LBB129:
 1747              		.loc 3 82 0
 1748 0510 B622C0E1 		strh	r2, [r0, #38]	@ movhi
 1749              	.LBE129:
 1750              	.LBE128:
 1751              		.loc 4 278 0
 1752 0514 E0099FE5 		ldr	r0, .L292+92
 1753 0518 FEFFFFEB 		bl	fb_putstr
 1754              	.L126:
 1755              		.loc 4 283 0
 1756 051c C43A9FE5 		ldr	r3, .L292+328
 1757 0520 003093E5 		ldr	r3, [r3, #0]
 1758              	.LBB130:
 1759              	.LBB131:
 1760              		.loc 3 97 0
 1761 0524 00209AE5 		ldr	r2, [sl, #0]
 1762              	.LBE131:
 1763              	.LBE130:
 1764              		.loc 4 283 0
 1765 0528 000053E3 		cmp	r3, #0
 1766              	.LBB132:
 1767              	.LBB133:
 1768              		.loc 3 97 0
 1769 052c 0230A0E3 		mov	r3, #2
 1770 0530 303082E5 		str	r3, [r2, #48]
 1771              	.LBE133:
 1772              	.LBE132:
 1773              	.LBB134:
 1774              	.LBB135:
 1775              		.loc 3 87 0
 1776 0534 FD3083E2 		add	r3, r3, #253
 1777 0538 283082E5 		str	r3, [r2, #40]
 1778              	.LBE135:
 1779              	.LBE134:
 1780              	.LBB136:
 1781              	.LBB137:
 1782              		.loc 3 82 0
 1783 053c 1010A0E3 		mov	r1, #16	@ movhi
 1784              		.loc 3 81 0
 1785 0540 0030A0E3 		mov	r3, #0	@ movhi
 1786 0544 B432C2E1 		strh	r3, [r2, #36]	@ movhi
 1787              		.loc 3 82 0
 1788 0548 B612C2E1 		strh	r1, [r2, #38]	@ movhi
 1789              	.LBE137:
 1790              	.LBE136:
 1791              		.loc 4 283 0
 1792 054c 5B01000A 		beq	.L128
 1793 0550 A8399FE5 		ldr	r3, .L292+96
 1794 0554 B020D3E1 		ldrh	r2, [r3, #0]
 1795 0558 020C52E3 		cmp	r2, #512
 1796 055c 5B01003A 		bcc	.L128
 1797 0560 9C399FE5 		ldr	r3, .L292+100
 1798 0564 030052E1 		cmp	r2, r3
 1799              		.loc 4 284 0
 1800 0568 0C008D92 		addls	r0, sp, #12
 1801 056c 94199F95 		ldrls	r1, .L292+104
 1802              		.loc 4 283 0
 1803 0570 6801009A 		bls	.L283
 1804              	.L128:
 1805              		.loc 4 285 0
 1806 0574 84399FE5 		ldr	r3, .L292+96
 1807 0578 B010D3E1 		ldrh	r1, [r3, #0]
 1808 057c 88299FE5 		ldr	r2, .L292+108
 1809 0580 023C41E2 		sub	r3, r1, #512
 1810 0584 0338A0E1 		mov	r3, r3, asl #16
 1811 0588 230852E1 		cmp	r2, r3, lsr #16
 1812 058c 0C608DE2 		add	r6, sp, #12
 1813              		.loc 4 286 0
 1814 0590 0120A021 		movcs	r2, r1
 1815              		.loc 4 288 0
 1816 0594 0120A031 		movcc	r2, r1
 1817              		.loc 4 286 0
 1818 0598 70199F25 		ldrcs	r1, .L292+112
 1819              		.loc 4 288 0
 1820 059c 70199F35 		ldrcc	r1, .L292+116
 1821              		.loc 4 286 0
 1822 05a0 0600A021 		movcs	r0, r6
 1823              		.loc 4 288 0
 1824 05a4 0600A031 		movcc	r0, r6
 1825              	.L283:
 1826              		.loc 4 289 0
 1827 05a8 104A9FE5 		ldr	r4, .L292+288
 1828              		.loc 4 288 0
 1829 05ac FEFFFFEB 		bl	sprintf
 1830              		.loc 4 289 0
 1831 05b0 003094E5 		ldr	r3, [r4, #0]
 1832 05b4 0C008DE2 		add	r0, sp, #12
 1833 05b8 B012D3E1 		ldrh	r1, [r3, #32]
 1834 05bc FEFFFFEB 		bl	fb_putstr
 1835              	.LBB138:
 1836              	.LBB139:
 1837              		.loc 3 92 0
 1838 05c0 002094E5 		ldr	r2, [r4, #0]
 1839              	.LBE139:
 1840              	.LBE138:
 1841              	.LBB140:
 1842              	.LBB141:
 1843              		.loc 3 87 0
 1844 05c4 0030A0E3 		mov	r3, #0
 1845 05c8 283082E5 		str	r3, [r2, #40]
 1846              	.LBE141:
 1847              	.LBE140:
 1848              	.LBB142:
 1849              	.LBB143:
 1850              		.loc 3 92 0
 1851 05cc FF34E0E3 		mvn	r3, #-16777216
 1852 05d0 2C3082E5 		str	r3, [r2, #44]
 1853              	.LVL79:
 1854              	.L112:
 1855              	.LBE143:
 1856              	.LBE142:
 1857              	.LBE83:
 1858              		.loc 4 295 0
 1859 05d4 E8399FE5 		ldr	r3, .L292+292
 1860 05d8 003093E5 		ldr	r3, [r3, #0]
 1861 05dc 030053E3 		cmp	r3, #3
 1862 05e0 6A02001A 		bne	.L110
 1863 05e4 EC399FE5 		ldr	r3, .L292+312
 1864 05e8 001093E5 		ldr	r1, [r3, #0]
 1865 05ec 000051E3 		cmp	r1, #0
 1866 05f0 0C02001A 		bne	.L136
 1867              	.LBB144:
 1868              	.LBB145:
 1869              		.loc 3 81 0
 1870 05f4 C4399FE5 		ldr	r3, .L292+288
 1871 05f8 002093E5 		ldr	r2, [r3, #0]
 1872              	.LBE145:
 1873              	.LBE144:
 1874              		.loc 4 297 0
 1875 05fc 14399FE5 		ldr	r3, .L292+120
 1876              	.LBB146:
 1877              	.LBB147:
 1878              		.loc 3 81 0
 1879 0600 B412C2E1 		strh	r1, [r2, #36]	@ movhi
 1880              	.LBE147:
 1881              	.LBE146:
 1882              		.loc 4 297 0
 1883 0604 001093E5 		ldr	r1, [r3, #0]
 1884              	.LBB148:
 1885              	.LBB149:
 1886              		.loc 3 82 0
 1887 0608 1430A0E3 		mov	r3, #20	@ movhi
 1888 060c B632C2E1 		strh	r3, [r2, #38]	@ movhi
 1889              	.LBE149:
 1890              	.LBE148:
 1891              		.loc 4 297 0
 1892 0610 0030D1E5 		ldrb	r3, [r1, #0]	@ zero_extendqisi2
 1893 0614 6F0053E3 		cmp	r3, #111
 1894 0618 0C608DE2 		add	r6, sp, #12
 1895              	.LVL80:
 1896 061c 9201001A 		bne	.L138
 1897              		.loc 4 298 0
 1898 0620 F4389FE5 		ldr	r3, .L292+124
 1899 0624 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1900 0628 84389FE5 		ldr	r3, .L292+20
 1901 062c 00C0D3E5 		ldrb	ip, [r3, #0]	@ zero_extendqisi2
 1902 0630 0600A0E1 		mov	r0, r6
 1903 0634 6EC04CE2 		sub	ip, ip, #110
 1904 0638 073002E2 		and	r3, r2, #7
 1905 063c DC189FE5 		ldr	r1, .L292+128
 1906 0640 A221A0E1 		mov	r2, r2, lsr #3
 1907 0644 00C08DE5 		str	ip, [sp, #0]
 1908 0648 FEFFFFEB 		bl	sprintf
 1909 064c 960100EA 		b	.L140
 1910              	.L138:
 1911              		.loc 4 301 0
 1912 0650 0120A0E1 		mov	r2, r1
 1913 0654 0600A0E1 		mov	r0, r6
 1914 0658 C4189FE5 		ldr	r1, .L292+132
 1915 065c FEFFFFEB 		bl	sprintf
 1916              	.L140:
 1917              	.LBB150:
 1918              	.LBB151:
 1919              		.loc 3 81 0
 1920 0660 58A99FE5 		ldr	sl, .L292+288
 1921              	.LBE151:
 1922              	.LBE150:
 1923              		.loc 4 302 0
 1924 0664 0CB08DE2 		add	fp, sp, #12
 1925 0668 0010E0E3 		mvn	r1, #0
 1926 066c 0B00A0E1 		mov	r0, fp
 1927 0670 FEFFFFEB 		bl	fb_putstr
 1928              	.LBB152:
 1929              	.LBB153:
 1930              		.loc 3 81 0
 1931 0674 00309AE5 		ldr	r3, [sl, #0]
 1932              		.loc 3 82 0
 1933 0678 1C10A0E3 		mov	r1, #28	@ movhi
 1934              		.loc 3 81 0
 1935 067c 0020A0E3 		mov	r2, #0	@ movhi
 1936              		.loc 3 82 0
 1937 0680 B612C3E1 		strh	r1, [r3, #38]	@ movhi
 1938              		.loc 3 81 0
 1939 0684 B422C3E1 		strh	r2, [r3, #36]	@ movhi
 1940              	.LBE153:
 1941              	.LBE152:
 1942              		.loc 4 305 0
 1943 0688 98389FE5 		ldr	r3, .L292+136
 1944 068c 0240D3E5 		ldrb	r4, [r3, #2]	@ zero_extendqisi2
 1945              	.LVL81:
 1946              		.loc 4 307 0
 1947 0690 94389FE5 		ldr	r3, .L292+140
 1948 0694 02E0D3E5 		ldrb	lr, [r3, #2]	@ zero_extendqisi2
 1949              		.loc 4 309 0
 1950 0698 90389FE5 		ldr	r3, .L292+144
 1951 069c 0220D3E5 		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 1952              		.loc 4 311 0
 1953 06a0 8C389FE5 		ldr	r3, .L292+148
 1954              		.loc 4 305 0
 1955 06a4 000054E3 		cmp	r4, #0
 1956              		.loc 4 311 0
 1957 06a8 0210D3E5 		ldrb	r1, [r3, #2]	@ zero_extendqisi2
 1958              		.loc 4 314 0
 1959 06ac 84389FE5 		ldr	r3, .L292+152
 1960              		.loc 4 305 0
 1961 06b0 2D40A003 		moveq	r4, #45
 1962 06b4 3140A013 		movne	r4, #49
 1963              		.loc 4 307 0
 1964 06b8 00005EE3 		cmp	lr, #0
 1965 06bc 2DE0A003 		moveq	lr, #45
 1966 06c0 32E0A013 		movne	lr, #50
 1967              		.loc 4 309 0
 1968 06c4 000052E3 		cmp	r2, #0
 1969              		.loc 4 314 0
 1970 06c8 0220D3E5 		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 1971              		.loc 4 316 0
 1972 06cc 68389FE5 		ldr	r3, .L292+156
 1973              		.loc 4 310 0
 1974 06d0 2090A003 		moveq	r9, #32
 1975 06d4 6290A013 		movne	r9, #98
 1976              	.LVL82:
 1977              		.loc 4 316 0
 1978 06d8 02C0D3E5 		ldrb	ip, [r3, #2]	@ zero_extendqisi2
 1979              		.loc 4 309 0
 1980 06dc 2D70A003 		moveq	r7, #45
 1981 06e0 3270A013 		movne	r7, #50
 1982              		.loc 4 311 0
 1983 06e4 000051E3 		cmp	r1, #0
 1984              		.loc 4 312 0
 1985 06e8 2080A003 		moveq	r8, #32
 1986 06ec 7480A013 		movne	r8, #116
 1987              	.LVL83:
 1988              		.loc 4 311 0
 1989 06f0 2D60A003 		moveq	r6, #45
 1990 06f4 3260A013 		movne	r6, #50
 1991              		.loc 4 314 0
 1992 06f8 000052E3 		cmp	r2, #0
 1993 06fc 2D20A003 		moveq	r2, #45
 1994 0700 3320A013 		movne	r2, #51
 1995              		.loc 4 316 0
 1996 0704 00005CE3 		cmp	ip, #0
 1997              		.loc 4 306 0
 1998 0708 2030A0E3 		mov	r3, #32
 1999              		.loc 4 316 0
 2000 070c 2DC0A003 		moveq	ip, #45
 2001 0710 34C0A013 		movne	ip, #52
 2002              		.loc 4 317 0
 2003 0714 0050A0E3 		mov	r5, #0
 2004              	.LVL84:
 2005              		.loc 4 318 0
 2006 0718 0010E0E3 		mvn	r1, #0
 2007 071c 0C008DE2 		add	r0, sp, #12
 2008              		.loc 4 314 0
 2009 0720 1520CDE5 		strb	r2, [sp, #21]
 2010              		.loc 4 307 0
 2011 0724 0EE0CDE5 		strb	lr, [sp, #14]
 2012              		.loc 4 315 0
 2013 0728 1630CDE5 		strb	r3, [sp, #22]
 2014              		.loc 4 316 0
 2015 072c 17C0CDE5 		strb	ip, [sp, #23]
 2016              		.loc 4 306 0
 2017 0730 0D30CDE5 		strb	r3, [sp, #13]
 2018              		.loc 4 308 0
 2019 0734 0F30CDE5 		strb	r3, [sp, #15]
 2020              		.loc 4 313 0
 2021 0738 1430CDE5 		strb	r3, [sp, #20]
 2022              		.loc 4 305 0
 2023 073c 0C40CDE5 		strb	r4, [sp, #12]
 2024              		.loc 4 309 0
 2025 0740 1070CDE5 		strb	r7, [sp, #16]
 2026              		.loc 4 310 0
 2027 0744 1190CDE5 		strb	r9, [sp, #17]
 2028              		.loc 4 311 0
 2029 0748 1260CDE5 		strb	r6, [sp, #18]
 2030              		.loc 4 312 0
 2031 074c 1380CDE5 		strb	r8, [sp, #19]
 2032              		.loc 4 317 0
 2033 0750 1850CDE5 		strb	r5, [sp, #24]
 2034              		.loc 4 318 0
 2035 0754 FEFFFFEB 		bl	fb_putstr
 2036              	.LBB154:
 2037              	.LBB155:
 2038              		.loc 3 81 0
 2039 0758 00309AE5 		ldr	r3, [sl, #0]
 2040              		.loc 3 82 0
 2041 075c 2410A0E3 		mov	r1, #36	@ movhi
 2042 0760 B612C3E1 		strh	r1, [r3, #38]	@ movhi
 2043              		.loc 3 81 0
 2044 0764 B452C3E1 		strh	r5, [r3, #36]	@ movhi
 2045              	.LBE155:
 2046              	.LBE154:
 2047              		.loc 4 321 0
 2048 0768 0010E0E3 		mvn	r1, #0
 2049 076c CC079FE5 		ldr	r0, .L292+160
 2050 0770 FEFFFFEB 		bl	fb_putstr
 2051              		.loc 4 323 0
 2052 0774 C8379FE5 		ldr	r3, .L292+164
 2053 0778 B020D3E1 		ldrh	r2, [r3, #0]
 2054              	.LBB156:
 2055              	.LBB157:
 2056              		.loc 3 81 0
 2057 077c 00309AE5 		ldr	r3, [sl, #0]
 2058              	.LBE157:
 2059              	.LBE156:
 2060              		.loc 4 323 0
 2061 0780 050052E1 		cmp	r2, r5
 2062              	.LBB158:
 2063              	.LBB159:
 2064              		.loc 3 82 0
 2065 0784 2C10A0E3 		mov	r1, #44	@ movhi
 2066              		.loc 3 81 0
 2067 0788 B452C3E1 		strh	r5, [r3, #36]	@ movhi
 2068              		.loc 3 82 0
 2069 078c B612C3E1 		strh	r1, [r3, #38]	@ movhi
 2070              	.LBE159:
 2071              	.LBE158:
 2072              		.loc 4 330 0
 2073 0790 B0079F05 		ldreq	r0, .L292+168
 2074              		.loc 4 323 0
 2075 0794 F601000A 		beq	.L285
 2076              		.loc 4 324 0
 2077 0798 AC379FE5 		ldr	r3, .L292+172
 2078 079c B030D3E1 		ldrh	r3, [r3, #0]
 2079 07a0 03E8A0E1 		mov	lr, r3, asl #16
 2080 07a4 2E18A0E1 		mov	r1, lr, lsr #16
 2081 07a8 0F3001E2 		and	r3, r1, #15
 2082 07ac 0F0053E3 		cmp	r3, #15
 2083 07b0 98379FE5 		ldr	r3, .L292+176
 2084              		.loc 4 325 0
 2085 07b4 B0C0D301 		ldreqh	ip, [r3, #0]
 2086              		.loc 4 327 0
 2087 07b8 B0C0D311 		ldrneh	ip, [r3, #0]
 2088              		.loc 4 325 0
 2089 07bc 0C008D02 		addeq	r0, sp, #12
 2090              		.loc 4 327 0
 2091 07c0 0130A011 		movne	r3, r1
 2092              		.loc 4 325 0
 2093 07c4 2E3AA001 		moveq	r3, lr, lsr #20
 2094 07c8 84179F05 		ldreq	r1, .L292+180
 2095              		.loc 4 327 0
 2096 07cc 0B00A011 		movne	r0, fp
 2097 07d0 80179F15 		ldrne	r1, .L292+184
 2098 07d4 00C08DE5 		str	ip, [sp, #0]
 2099 07d8 FEFFFFEB 		bl	sprintf
 2100              		.loc 4 328 0
 2101 07dc 0C008DE2 		add	r0, sp, #12
 2102              	.L285:
 2103              		.loc 4 330 0
 2104 07e0 0010E0E3 		mvn	r1, #0
 2105 07e4 FEFFFFEB 		bl	fb_putstr
 2106              	.LBB160:
 2107              	.LBB161:
 2108              		.loc 3 81 0
 2109 07e8 D0379FE5 		ldr	r3, .L292+288
 2110 07ec 003093E5 		ldr	r3, [r3, #0]
 2111              		.loc 3 82 0
 2112 07f0 3420A0E3 		mov	r2, #52	@ movhi
 2113              		.loc 3 81 0
 2114 07f4 0010A0E3 		mov	r1, #0	@ movhi
 2115              		.loc 3 82 0
 2116 07f8 B622C3E1 		strh	r2, [r3, #38]	@ movhi
 2117              		.loc 3 81 0
 2118 07fc B412C3E1 		strh	r1, [r3, #36]	@ movhi
 2119              	.LBE161:
 2120              	.LBE160:
 2121              		.loc 4 332 0
 2122 0800 30379FE5 		ldr	r3, .L292+152
 2123 0804 0230D3E5 		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 2124 0808 000053E3 		cmp	r3, #0
 2125              		.loc 4 336 0
 2126 080c 48079F05 		ldreq	r0, .L292+188
 2127              		.loc 4 332 0
 2128 0810 0A02000A 		beq	.L286
 2129              		.loc 4 333 0
 2130 0814 44379FE5 		ldr	r3, .L292+192
 2131 0818 0C408DE2 		add	r4, sp, #12
 2132 081c B020D3E1 		ldrh	r2, [r3, #0]
 2133 0820 0400A0E1 		mov	r0, r4
 2134 0824 38179FE5 		ldr	r1, .L292+196
 2135 0828 FEFFFFEB 		bl	sprintf
 2136              		.loc 4 334 0
 2137 082c 0400A0E1 		mov	r0, r4
 2138              	.L286:
 2139              		.loc 4 336 0
 2140 0830 0010E0E3 		mvn	r1, #0
 2141 0834 FEFFFFEB 		bl	fb_putstr
 2142              	.LVL85:
 2143              	.L136:
 2144              		.loc 4 340 0
 2145 0838 84379FE5 		ldr	r3, .L292+292
 2146 083c 003093E5 		ldr	r3, [r3, #0]
 2147 0840 030053E3 		cmp	r3, #3
 2148 0844 6A02001A 		bne	.L110
 2149 0848 88379FE5 		ldr	r3, .L292+312
 2150 084c 003093E5 		ldr	r3, [r3, #0]
 2151 0850 000053E3 		cmp	r3, #0
 2152 0854 6A0200DA 		ble	.L110
 2153              	.LBB162:
 2154              		.loc 4 341 0
 2155 0858 0030A0E3 		mov	r3, #0
 2156 085c 1C308DE5 		str	r3, [sp, #28]
 2157              	.LVL86:
 2158              		.loc 4 343 0
 2159 0860 0C30CDE5 		strb	r3, [sp, #12]
 2160 0864 FC569FE5 		ldr	r5, .L292+200
 2161              	.LVL87:
 2162 0868 0340A0E1 		mov	r4, r3
 2163              	.LVL88:
 2164              	.L175:
 2165              		.loc 4 345 0
 2166 086c 0030D5E5 		ldrb	r3, [r5, #0]	@ zero_extendqisi2
 2167 0870 010013E3 		tst	r3, #1
 2168 0874 3102000A 		beq	.L176
 2169              		.loc 4 346 0
 2170 0878 0C30DDE5 		ldrb	r3, [sp, #12]	@ zero_extendqisi2
 2171 087c 0C608DE2 		add	r6, sp, #12
 2172              	.LVL89:
 2173 0880 000053E3 		cmp	r3, #0
 2174              		.loc 4 347 0
 2175 0884 E0169FE5 		ldr	r1, .L292+204
 2176 0888 0420A0E1 		mov	r2, r4
 2177 088c 0600A0E1 		mov	r0, r6
 2178              		.loc 4 346 0
 2179 0890 2502001A 		bne	.L178
 2180              	.LVL90:
 2181              		.loc 4 347 0
 2182 0894 FEFFFFEB 		bl	sprintf
 2183              	.LVL91:
 2184 0898 310200EA 		b	.L176
 2185              	.LVL92:
 2186              	.L178:
 2187              		.loc 4 349 0
 2188 089c 0420A0E1 		mov	r2, r4
 2189 08a0 C8169FE5 		ldr	r1, .L292+208
 2190 08a4 070086E2 		add	r0, r6, #7
 2191 08a8 FEFFFFEB 		bl	sprintf
 2192              	.LVL93:
 2193              		.loc 4 350 0
 2194 08ac 24379FE5 		ldr	r3, .L292+312
 2195 08b0 002093E5 		ldr	r2, [r3, #0]
 2196 08b4 0600A0E1 		mov	r0, r6
 2197 08b8 012042E2 		sub	r2, r2, #1
 2198 08bc 1C108DE2 		add	r1, sp, #28
 2199 08c0 FEFFFFEB 		bl	print_display
 2200              		.loc 4 351 0
 2201 08c4 0030A0E3 		mov	r3, #0
 2202 08c8 0C30CDE5 		strb	r3, [sp, #12]
 2203              	.LVL94:
 2204              	.L176:
 2205              		.loc 4 344 0
 2206 08cc 014084E2 		add	r4, r4, #1
 2207 08d0 010B54E3 		cmp	r4, #1024
 2208 08d4 015085E2 		add	r5, r5, #1
 2209 08d8 1902001A 		bne	.L175
 2210              		.loc 4 355 0
 2211 08dc 0C30DDE5 		ldrb	r3, [sp, #12]	@ zero_extendqisi2
 2212 08e0 000053E3 		cmp	r3, #0
 2213 08e4 3E02000A 		beq	.L181
 2214              		.loc 4 356 0
 2215 08e8 E8369FE5 		ldr	r3, .L292+312
 2216 08ec 002093E5 		ldr	r2, [r3, #0]
 2217 08f0 0C008DE2 		add	r0, sp, #12
 2218 08f4 012042E2 		sub	r2, r2, #1
 2219 08f8 1C108DE2 		add	r1, sp, #28
 2220 08fc FEFFFFEB 		bl	print_display
 2221              	.L181:
 2222              		.loc 4 357 0
 2223 0900 0030A0E3 		mov	r3, #0
 2224 0904 0C30CDE5 		strb	r3, [sp, #12]
 2225 0908 58569FE5 		ldr	r5, .L292+200
 2226 090c 0340A0E1 		mov	r4, r3
 2227              	.LVL95:
 2228              	.L183:
 2229              		.loc 4 359 0
 2230 0910 0030D5E5 		ldrb	r3, [r5, #0]	@ zero_extendqisi2
 2231 0914 1C0013E3 		tst	r3, #28
 2232 0918 5A02000A 		beq	.L184
 2233              		.loc 4 360 0
 2234 091c 0C30DDE5 		ldrb	r3, [sp, #12]	@ zero_extendqisi2
 2235 0920 0C608DE2 		add	r6, sp, #12
 2236              	.LVL96:
 2237 0924 000053E3 		cmp	r3, #0
 2238              		.loc 4 361 0
 2239 0928 44169FE5 		ldr	r1, .L292+212
 2240 092c 0420A0E1 		mov	r2, r4
 2241 0930 0600A0E1 		mov	r0, r6
 2242              		.loc 4 360 0
 2243 0934 4E02001A 		bne	.L186
 2244              	.LVL97:
 2245              		.loc 4 361 0
 2246 0938 FEFFFFEB 		bl	sprintf
 2247              	.LVL98:
 2248 093c 5A0200EA 		b	.L184
 2249              	.LVL99:
 2250              	.L186:
 2251              		.loc 4 363 0
 2252 0940 0420A0E1 		mov	r2, r4
 2253 0944 24169FE5 		ldr	r1, .L292+208
 2254 0948 070086E2 		add	r0, r6, #7
 2255 094c FEFFFFEB 		bl	sprintf
 2256              	.LVL100:
 2257              		.loc 4 364 0
 2258 0950 80369FE5 		ldr	r3, .L292+312
 2259 0954 002093E5 		ldr	r2, [r3, #0]
 2260 0958 0600A0E1 		mov	r0, r6
 2261 095c 012042E2 		sub	r2, r2, #1
 2262 0960 1C108DE2 		add	r1, sp, #28
 2263 0964 FEFFFFEB 		bl	print_display
 2264              		.loc 4 365 0
 2265 0968 0030A0E3 		mov	r3, #0
 2266 096c 0C30CDE5 		strb	r3, [sp, #12]
 2267              	.LVL101:
 2268              	.L184:
 2269              		.loc 4 358 0
 2270 0970 014084E2 		add	r4, r4, #1
 2271 0974 010B54E3 		cmp	r4, #1024
 2272 0978 015085E2 		add	r5, r5, #1
 2273 097c 4202001A 		bne	.L183
 2274              		.loc 4 369 0
 2275 0980 0C30DDE5 		ldrb	r3, [sp, #12]	@ zero_extendqisi2
 2276 0984 000053E3 		cmp	r3, #0
 2277 0988 6702000A 		beq	.L189
 2278              		.loc 4 370 0
 2279 098c 44369FE5 		ldr	r3, .L292+312
 2280 0990 002093E5 		ldr	r2, [r3, #0]
 2281 0994 0C008DE2 		add	r0, sp, #12
 2282 0998 012042E2 		sub	r2, r2, #1
 2283 099c 1C108DE2 		add	r1, sp, #28
 2284 09a0 FEFFFFEB 		bl	print_display
 2285              	.L189:
 2286              		.loc 4 371 0
 2287 09a4 1C209DE5 		ldr	r2, [sp, #28]
 2288 09a8 C8359FE5 		ldr	r3, .L292+216
 2289 09ac 002083E5 		str	r2, [r3, #0]
 2290              	.LVL102:
 2291              	.L110:
 2292              	.LBE162:
 2293              		.loc 4 375 0
 2294 09b0 0C369FE5 		ldr	r3, .L292+292
 2295 09b4 002093E5 		ldr	r2, [r3, #0]
 2296              	.LVL103:
 2297 09b8 020052E3 		cmp	r2, #2
 2298 09bc 00005213 		cmpne	r2, #0
 2299 09c0 9A02001A 		bne	.L191
 2300              	.LBB163:
 2301              	.LBB164:
 2302              		.loc 3 81 0
 2303 09c4 F4359FE5 		ldr	r3, .L292+288
 2304 09c8 003093E5 		ldr	r3, [r3, #0]
 2305              	.LBE164:
 2306              	.LBE163:
 2307              		.loc 4 377 0
 2308 09cc 020052E3 		cmp	r2, #2
 2309              	.LBB165:
 2310              	.LBB166:
 2311              		.loc 3 81 0
 2312 09d0 0010A0E3 		mov	r1, #0	@ movhi
 2313              		.loc 3 82 0
 2314 09d4 1420A0E3 		mov	r2, #20	@ movhi
 2315 09d8 B622C3E1 		strh	r2, [r3, #38]	@ movhi
 2316              		.loc 3 81 0
 2317 09dc B412C3E1 		strh	r1, [r3, #36]	@ movhi
 2318              	.LBE166:
 2319              	.LBE165:
 2320              		.loc 4 377 0
 2321              		.loc 4 378 0
 2322 09e0 94159F05 		ldreq	r1, .L292+220
 2323 09e4 94259F05 		ldreq	r2, .L292+224
 2324 09e8 0C008D02 		addeq	r0, sp, #12
 2325 09ec 9402000A 		beq	.L287
 2326              	.L193:
 2327              		.loc 4 379 0
 2328 09f0 F0359FE5 		ldr	r3, .L292+328
 2329 09f4 003093E5 		ldr	r3, [r3, #0]
 2330 09f8 000053E3 		cmp	r3, #0
 2331 09fc 8702000A 		beq	.L196
 2332 0a00 AC359FE5 		ldr	r3, .L292+276
 2333 0a04 B020D3E1 		ldrh	r2, [r3, #0]
 2334 0a08 020C52E3 		cmp	r2, #512
 2335 0a0c 8702003A 		bcc	.L196
 2336 0a10 EC349FE5 		ldr	r3, .L292+100
 2337 0a14 030052E1 		cmp	r2, r3
 2338              		.loc 4 380 0
 2339 0a18 0C008D92 		addls	r0, sp, #12
 2340 0a1c 60159F95 		ldrls	r1, .L292+228
 2341              		.loc 4 379 0
 2342 0a20 9402009A 		bls	.L287
 2343              	.L196:
 2344              		.loc 4 381 0
 2345 0a24 88359FE5 		ldr	r3, .L292+276
 2346 0a28 B010D3E1 		ldrh	r1, [r3, #0]
 2347 0a2c D8249FE5 		ldr	r2, .L292+108
 2348 0a30 023C41E2 		sub	r3, r1, #512
 2349 0a34 0338A0E1 		mov	r3, r3, asl #16
 2350 0a38 230852E1 		cmp	r2, r3, lsr #16
 2351 0a3c 0C608DE2 		add	r6, sp, #12
 2352              	.LVL104:
 2353              		.loc 4 382 0
 2354 0a40 0120A021 		movcs	r2, r1
 2355              		.loc 4 384 0
 2356 0a44 0120A031 		movcc	r2, r1
 2357              		.loc 4 382 0
 2358 0a48 38159F25 		ldrcs	r1, .L292+232
 2359              		.loc 4 384 0
 2360 0a4c 38159F35 		ldrcc	r1, .L292+236
 2361              		.loc 4 382 0
 2362 0a50 0600A021 		movcs	r0, r6
 2363              		.loc 4 384 0
 2364 0a54 0600A031 		movcc	r0, r6
 2365              	.LVL105:
 2366              	.L287:
 2367 0a58 FEFFFFEB 		bl	sprintf
 2368              		.loc 4 385 0
 2369 0a5c 5C359FE5 		ldr	r3, .L292+288
 2370 0a60 003093E5 		ldr	r3, [r3, #0]
 2371 0a64 0C008DE2 		add	r0, sp, #12
 2372 0a68 B012D3E1 		ldrh	r1, [r3, #32]
 2373 0a6c FEFFFFEB 		bl	fb_putstr
 2374              	.L191:
 2375              		.loc 4 389 0
 2376 0a70 4C659FE5 		ldr	r6, .L292+292
 2377              	.LVL106:
 2378 0a74 003096E5 		ldr	r3, [r6, #0]
 2379 0a78 020053E3 		cmp	r3, #2
 2380 0a7c AB02001A 		bne	.L202
 2381              	.LBB167:
 2382              	.LBB168:
 2383              		.loc 3 87 0
 2384 0a80 38559FE5 		ldr	r5, .L292+288
 2385              	.LVL107:
 2386 0a84 002095E5 		ldr	r2, [r5, #0]
 2387              	.LBE168:
 2388              	.LBE167:
 2389              	.LBB169:
 2390              	.LBB170:
 2391              		.loc 3 92 0
 2392 0a88 FD3083E2 		add	r3, r3, #253
 2393              	.LBE170:
 2394              	.LBE169:
 2395              	.LBB171:
 2396              	.LBB172:
 2397              		.loc 3 87 0
 2398 0a8c FF44E0E3 		mvn	r4, #-16777216
 2399              	.LVL108:
 2400              	.LBE172:
 2401              	.LBE171:
 2402              	.LBB173:
 2403              	.LBB174:
 2404              		.loc 3 92 0
 2405 0a90 2C3082E5 		str	r3, [r2, #44]
 2406              	.LBE174:
 2407              	.LBE173:
 2408              	.LBB175:
 2409              	.LBB176:
 2410              		.loc 3 87 0
 2411 0a94 284082E5 		str	r4, [r2, #40]
 2412              	.LBE176:
 2413              	.LBE175:
 2414              		.loc 4 392 0
 2415 0a98 B012D2E1 		ldrh	r1, [r2, #32]
 2416 0a9c EC049FE5 		ldr	r0, .L292+240
 2417 0aa0 FEFFFFEB 		bl	fb_putstr
 2418              	.LBB177:
 2419              	.LBB178:
 2420              		.loc 3 87 0
 2421 0aa4 002095E5 		ldr	r2, [r5, #0]
 2422 0aa8 0030A0E3 		mov	r3, #0
 2423              	.LBE178:
 2424              	.LBE177:
 2425              	.LBB179:
 2426              	.LBB180:
 2427              		.loc 3 92 0
 2428 0aac 2C4082E5 		str	r4, [r2, #44]
 2429              	.LBE180:
 2430              	.LBE179:
 2431              	.LBB181:
 2432              	.LBB182:
 2433              		.loc 3 87 0
 2434 0ab0 283082E5 		str	r3, [r2, #40]
 2435              	.LVL109:
 2436              	.L202:
 2437              	.LBE182:
 2438              	.LBE181:
 2439              		.loc 4 398 0
 2440 0ab4 003096E5 		ldr	r3, [r6, #0]
 2441 0ab8 000053E3 		cmp	r3, #0
 2442 0abc 3203001A 		bne	.L204
 2443              	.LBB183:
 2444              		.loc 4 401 0
 2445 0ac0 20359FE5 		ldr	r3, .L292+328
 2446 0ac4 003093E5 		ldr	r3, [r3, #0]
 2447 0ac8 000053E3 		cmp	r3, #0
 2448 0acc C102000A 		beq	.L206
 2449 0ad0 DC349FE5 		ldr	r3, .L292+276
 2450 0ad4 B020D3E1 		ldrh	r2, [r3, #0]
 2451 0ad8 020C52E3 		cmp	r2, #512
 2452 0adc C102003A 		bcc	.L206
 2453 0ae0 1C349FE5 		ldr	r3, .L292+100
 2454 0ae4 030052E1 		cmp	r2, r3
 2455 0ae8 C102008A 		bhi	.L206
 2456              		.loc 4 402 0
 2457 0aec F8349FE5 		ldr	r3, .L292+332
 2458 0af0 001093E5 		ldr	r1, [r3, #0]
 2459 0af4 98249FE5 		ldr	r2, .L292+244
 2460 0af8 98349FE5 		ldr	r3, .L292+248
 2461 0afc 000051E3 		cmp	r1, #0
 2462 0b00 0210A001 		moveq	r1, r2
 2463              	.LVL110:
 2464 0b04 0310A011 		movne	r1, r3
 2465 0b08 C90200EA 		b	.L212
 2466              	.LVL111:
 2467              	.L206:
 2468              		.loc 4 406 0
 2469 0b0c D8349FE5 		ldr	r3, .L292+332
 2470 0b10 003093E5 		ldr	r3, [r3, #0]
 2471 0b14 000053E3 		cmp	r3, #0
 2472 0b18 7C349FE5 		ldr	r3, .L292+252
 2473              		.loc 4 407 0
 2474 0b1c 00309315 		ldrne	r3, [r3, #0]
 2475              		.loc 4 409 0
 2476 0b20 00309305 		ldreq	r3, [r3, #0]
 2477              		.loc 4 407 0
 2478 0b24 10109315 		ldrne	r1, [r3, #16]
 2479              	.LVL112:
 2480              		.loc 4 409 0
 2481 0b28 14109305 		ldreq	r1, [r3, #20]
 2482              	.L212:
 2483              		.loc 4 410 0
 2484 0b2c 68349FE5 		ldr	r3, .L292+252
 2485 0b30 003093E5 		ldr	r3, [r3, #0]
 2486 0b34 002093E5 		ldr	r2, [r3, #0]
 2487 0b38 74349FE5 		ldr	r3, .L292+276
 2488 0b3c B040D3E1 		ldrh	r4, [r3, #0]
 2489              	.LVL113:
 2490              	.LBB184:
 2491              	.LBB185:
 2492              		.loc 3 81 0
 2493 0b40 78549FE5 		ldr	r5, .L292+288
 2494              	.LVL114:
 2495              	.LBE185:
 2496              	.LBE184:
 2497              		.loc 4 410 0
 2498 0b44 044062E0 		rsb	r4, r2, r4
 2499 0b48 044BA0E1 		mov	r4, r4, asl #22
 2500              	.LBB186:
 2501              	.LBB187:
 2502              		.loc 3 81 0
 2503 0b4c 003095E5 		ldr	r3, [r5, #0]
 2504              	.LBE187:
 2505              	.LBE186:
 2506              		.loc 4 410 0
 2507 0b50 244BA0E1 		mov	r4, r4, lsr #22
 2508 0b54 844081E0 		add	r4, r1, r4, asl #1
 2509              	.LVL115:
 2510              	.LBB188:
 2511              	.LBB189:
 2512              		.loc 3 82 0
 2513 0b58 1E20A0E3 		mov	r2, #30	@ movhi
 2514              		.loc 3 81 0
 2515 0b5c 0010A0E3 		mov	r1, #0	@ movhi
 2516              	.LVL116:
 2517              		.loc 3 82 0
 2518 0b60 B622C3E1 		strh	r2, [r3, #38]	@ movhi
 2519              		.loc 3 81 0
 2520 0b64 B412C3E1 		strh	r1, [r3, #36]	@ movhi
 2521              	.LBE189:
 2522              	.LBE188:
 2523              		.loc 4 413 0
 2524 0b68 0400A0E1 		mov	r0, r4
 2525 0b6c 0A10A0E3 		mov	r1, #10
 2526 0b70 FEFFFFEB 		bl	__divsi3
 2527 0b74 0A10A0E3 		mov	r1, #10
 2528 0b78 0060A0E1 		mov	r6, r0
 2529 0b7c 0400A0E1 		mov	r0, r4
 2530 0b80 FEFFFFEB 		bl	__modsi3
 2531 0b84 0C408DE2 		add	r4, sp, #12
 2532              	.LVL117:
 2533 0b88 0620A0E1 		mov	r2, r6
 2534 0b8c 0030A0E1 		mov	r3, r0
 2535 0b90 08149FE5 		ldr	r1, .L292+256
 2536 0b94 0400A0E1 		mov	r0, r4
 2537 0b98 FEFFFFEB 		bl	sprintf
 2538              		.loc 4 414 0
 2539 0b9c 003095E5 		ldr	r3, [r5, #0]
 2540 0ba0 0400A0E1 		mov	r0, r4
 2541 0ba4 B012D3E1 		ldrh	r1, [r3, #32]
 2542 0ba8 FEFFFFEB 		bl	fb_putstr
 2543              		.loc 4 417 0
 2544 0bac 38339FE5 		ldr	r3, .L292+76
 2545 0bb0 003093E5 		ldr	r3, [r3, #0]
 2546              	.LBB190:
 2547              	.LBB191:
 2548              		.loc 3 81 0
 2549 0bb4 002095E5 		ldr	r2, [r5, #0]
 2550              	.LBE191:
 2551              	.LBE190:
 2552              		.loc 4 417 0
 2553 0bb8 000053E3 		cmp	r3, #0
 2554              	.LBB192:
 2555              	.LBB193:
 2556              		.loc 3 81 0
 2557 0bbc 0010A0E3 		mov	r1, #0	@ movhi
 2558              		.loc 3 82 0
 2559 0bc0 2830A0E3 		mov	r3, #40	@ movhi
 2560 0bc4 B632C2E1 		strh	r3, [r2, #38]	@ movhi
 2561              		.loc 3 81 0
 2562 0bc8 B412C2E1 		strh	r1, [r2, #36]	@ movhi
 2563              	.LBE193:
 2564              	.LBE192:
 2565              		.loc 4 417 0
 2566 0bcc D0339F15 		ldrne	r3, .L292+260
 2567 0bd0 DC329F05 		ldreq	r3, .L292+20
 2568 0bd4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2569 0bd8 0C408DE2 		add	r4, sp, #12
 2570              		.loc 4 418 0
 2571 0bdc DC539FE5 		ldr	r5, .L292+288
 2572              		.loc 4 417 0
 2573 0be0 6E2043E2 		sub	r2, r3, #110
 2574 0be4 BC139FE5 		ldr	r1, .L292+264
 2575 0be8 0400A0E1 		mov	r0, r4
 2576 0bec FEFFFFEB 		bl	sprintf
 2577              		.loc 4 418 0
 2578 0bf0 003095E5 		ldr	r3, [r5, #0]
 2579              		.loc 4 419 0
 2580 0bf4 F0629FE5 		ldr	r6, .L292+76
 2581              		.loc 4 418 0
 2582 0bf8 B012D3E1 		ldrh	r1, [r3, #32]
 2583 0bfc 0400A0E1 		mov	r0, r4
 2584 0c00 FEFFFFEB 		bl	fb_putstr
 2585              		.loc 4 419 0
 2586 0c04 003096E5 		ldr	r3, [r6, #0]
 2587 0c08 000053E3 		cmp	r3, #0
 2588 0c0c 1203000A 		beq	.L218
 2589              	.LBB194:
 2590              	.LBB195:
 2591              		.loc 3 97 0
 2592 0c10 002095E5 		ldr	r2, [r5, #0]
 2593              	.LBE195:
 2594              	.LBE194:
 2595              	.LBB196:
 2596              	.LBB197:
 2597              		.loc 3 81 0
 2598 0c14 B012D2E1 		ldrh	r1, [r2, #32]
 2599              	.LBE197:
 2600              	.LBE196:
 2601              	.LBB198:
 2602              	.LBB199:
 2603              		.loc 3 87 0
 2604 0c18 FF38A0E3 		mov	r3, #16711680
 2605              	.LBE199:
 2606              	.LBE198:
 2607              	.LBB200:
 2608              	.LBB201:
 2609              		.loc 3 81 0
 2610 0c1c 100041E2 		sub	r0, r1, #16
 2611              	.LBE201:
 2612              	.LBE200:
 2613              	.LBB202:
 2614              	.LBB203:
 2615              		.loc 3 87 0
 2616 0c20 283082E5 		str	r3, [r2, #40]
 2617              	.LBE203:
 2618              	.LBE202:
 2619              	.LBB204:
 2620              	.LBB205:
 2621              		.loc 3 97 0
 2622 0c24 0040A0E3 		mov	r4, #0
 2623              	.LBE205:
 2624              	.LBE204:
 2625              	.LBB206:
 2626              	.LBB207:
 2627              		.loc 3 82 0
 2628 0c28 2730A0E3 		mov	r3, #39	@ movhi
 2629              		.loc 3 81 0
 2630 0c2c B402C2E1 		strh	r0, [r2, #36]	@ movhi
 2631              		.loc 3 82 0
 2632 0c30 B632C2E1 		strh	r3, [r2, #38]	@ movhi
 2633              	.LBE207:
 2634              	.LBE206:
 2635              	.LBB208:
 2636              	.LBB209:
 2637              		.loc 3 97 0
 2638 0c34 304082E5 		str	r4, [r2, #48]
 2639              	.LBE209:
 2640              	.LBE208:
 2641              		.loc 4 423 0
 2642 0c38 BC029FE5 		ldr	r0, .L292+92
 2643 0c3c FEFFFFEB 		bl	fb_putstr
 2644              	.LBB210:
 2645              	.LBB211:
 2646              		.loc 3 97 0
 2647 0c40 002095E5 		ldr	r2, [r5, #0]
 2648 0c44 0230A0E3 		mov	r3, #2
 2649              	.LBE211:
 2650              	.LBE210:
 2651              	.LBB212:
 2652              	.LBB213:
 2653              		.loc 3 87 0
 2654 0c48 284082E5 		str	r4, [r2, #40]
 2655              	.LBE213:
 2656              	.LBE212:
 2657              	.LBB214:
 2658              	.LBB215:
 2659              		.loc 3 97 0
 2660 0c4c 303082E5 		str	r3, [r2, #48]
 2661              	.L218:
 2662              	.LBE215:
 2663              	.LBE214:
 2664              	.LBB216:
 2665              	.LBB217:
 2666              		.loc 3 92 0
 2667 0c50 002095E5 		ldr	r2, [r5, #0]
 2668              	.LBE217:
 2669              	.LBE216:
 2670              		.loc 4 429 0
 2671 0c54 58329FE5 		ldr	r3, .L292+20
 2672 0c58 B012D2E1 		ldrh	r1, [r2, #32]
 2673 0c5c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2674 0c60 930100E0 		mul	r0, r3, r1
 2675              	.LBB218:
 2676              	.LBB219:
 2677              		.loc 3 92 0
 2678 0c64 0030A0E3 		mov	r3, #0
 2679              	.LBE219:
 2680              	.LBE218:
 2681              	.LBB220:
 2682              	.LBB221:
 2683              		.loc 3 82 0
 2684 0c68 2D10A0E3 		mov	r1, #45	@ movhi
 2685              	.LBE221:
 2686              	.LBE220:
 2687              		.loc 4 429 0
 2688 0c6c 0005A0E1 		mov	r0, r0, asl #10
 2689              	.LBB222:
 2690              	.LBB223:
 2691              		.loc 3 81 0
 2692 0c70 B432C2E1 		strh	r3, [r2, #36]	@ movhi
 2693              	.LBE223:
 2694              	.LBE222:
 2695              	.LBB224:
 2696              	.LBB225:
 2697              		.loc 3 92 0
 2698 0c74 2C3082E5 		str	r3, [r2, #44]
 2699              	.LBE225:
 2700              	.LBE224:
 2701              	.LBB226:
 2702              	.LBB227:
 2703              		.loc 3 82 0
 2704 0c78 B612C2E1 		strh	r1, [r2, #38]	@ movhi
 2705              	.LBE227:
 2706              	.LBE226:
 2707              		.loc 4 429 0
 2708 0c7c 2008A0E1 		mov	r0, r0, lsr #16
 2709 0c80 3210A0E3 		mov	r1, #50
 2710 0c84 FEFFFFEB 		bl	fb_boxto
 2711              		.loc 4 430 0
 2712 0c88 003096E5 		ldr	r3, [r6, #0]
 2713 0c8c 000053E3 		cmp	r3, #0
 2714 0c90 2F03000A 		beq	.L220
 2715              		.loc 4 431 0
 2716 0c94 002095E5 		ldr	r2, [r5, #0]
 2717              	.LBB228:
 2718              	.LBB229:
 2719              		.loc 3 81 0
 2720 0c98 04339FE5 		ldr	r3, .L292+260
 2721 0c9c 0010D3E5 		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 2722 0ca0 B032D2E1 		ldrh	r3, [r2, #32]
 2723 0ca4 910300E0 		mul	r0, r1, r3
 2724 0ca8 0005A0E1 		mov	r0, r0, asl #10
 2725 0cac 2008A0E1 		mov	r0, r0, lsr #16
 2726              		.loc 3 82 0
 2727 0cb0 2D30A0E3 		mov	r3, #45	@ movhi
 2728 0cb4 B632C2E1 		strh	r3, [r2, #38]	@ movhi
 2729              		.loc 3 81 0
 2730 0cb8 B402C2E1 		strh	r0, [r2, #36]	@ movhi
 2731              	.LBE229:
 2732              	.LBE228:
 2733              		.loc 4 432 0
 2734 0cbc 3210A0E3 		mov	r1, #50
 2735 0cc0 FEFFFFEB 		bl	fb_boxto
 2736              	.L220:
 2737              	.LBB230:
 2738              	.LBB231:
 2739              		.loc 3 92 0
 2740 0cc4 002095E5 		ldr	r2, [r5, #0]
 2741 0cc8 FF34E0E3 		mvn	r3, #-16777216
 2742 0ccc 2C3082E5 		str	r3, [r2, #44]
 2743              	.LVL118:
 2744              	.L204:
 2745              	.LBE231:
 2746              	.LBE230:
 2747              	.LBE183:
 2748              		.loc 4 438 0
 2749 0cd0 EC329FE5 		ldr	r3, .L292+292
 2750 0cd4 003093E5 		ldr	r3, [r3, #0]
 2751 0cd8 010053E3 		cmp	r3, #1
 2752 0cdc 4A04001A 		bne	.L222
 2753              	.LBB232:
 2754              		.loc 4 441 0
 2755 0ce0 D8329FE5 		ldr	r3, .L292+288
 2756 0ce4 002093E5 		ldr	r2, [r3, #0]
 2757              		.loc 4 444 0
 2758 0ce8 F8329FE5 		ldr	r3, .L292+328
 2759              		.loc 4 441 0
 2760 0cec B212D2E1 		ldrh	r1, [r2, #34]
 2761              		.loc 4 444 0
 2762 0cf0 003093E5 		ldr	r3, [r3, #0]
 2763              		.loc 4 441 0
 2764 0cf4 19A041E2 		sub	sl, r1, #25
 2765              	.LVL119:
 2766              		.loc 4 444 0
 2767 0cf8 000053E3 		cmp	r3, #0
 2768              	.LBB233:
 2769              	.LBB234:
 2770              		.loc 3 81 0
 2771 0cfc 0010A0E3 		mov	r1, #0	@ movhi
 2772              		.loc 3 82 0
 2773 0d00 0830A0E3 		mov	r3, #8	@ movhi
 2774 0d04 B632C2E1 		strh	r3, [r2, #38]	@ movhi
 2775              		.loc 3 81 0
 2776 0d08 B412C2E1 		strh	r1, [r2, #36]	@ movhi
 2777              	.LBE234:
 2778              	.LBE233:
 2779              		.loc 4 444 0
 2780 0d0c 4B03000A 		beq	.L224
 2781 0d10 9C329FE5 		ldr	r3, .L292+276
 2782 0d14 B020D3E1 		ldrh	r2, [r3, #0]
 2783 0d18 020C52E3 		cmp	r2, #512
 2784 0d1c 4B03003A 		bcc	.L224
 2785 0d20 DC319FE5 		ldr	r3, .L292+100
 2786 0d24 030052E1 		cmp	r2, r3
 2787              		.loc 4 445 0
 2788 0d28 0C008D92 		addls	r0, sp, #12
 2789 0d2c D4119F95 		ldrls	r1, .L292+104
 2790              		.loc 4 444 0
 2791 0d30 5803009A 		bls	.L289
 2792              	.L224:
 2793              		.loc 4 446 0
 2794 0d34 78329FE5 		ldr	r3, .L292+276
 2795 0d38 B010D3E1 		ldrh	r1, [r3, #0]
 2796 0d3c C8219FE5 		ldr	r2, .L292+108
 2797 0d40 023C41E2 		sub	r3, r1, #512
 2798 0d44 0338A0E1 		mov	r3, r3, asl #16
 2799 0d48 230852E1 		cmp	r2, r3, lsr #16
 2800 0d4c 0C608DE2 		add	r6, sp, #12
 2801              		.loc 4 447 0
 2802 0d50 0120A021 		movcs	r2, r1
 2803              		.loc 4 449 0
 2804 0d54 0120A031 		movcc	r2, r1
 2805              		.loc 4 447 0
 2806 0d58 B0119F25 		ldrcs	r1, .L292+112
 2807              		.loc 4 449 0
 2808 0d5c B0119F35 		ldrcc	r1, .L292+116
 2809              		.loc 4 447 0
 2810 0d60 0600A021 		movcs	r0, r6
 2811              		.loc 4 449 0
 2812 0d64 0600A031 		movcc	r0, r6
 2813              	.L289:
 2814              		.loc 4 450 0
 2815 0d68 44629FE5 		ldr	r6, .L292+276
 2816              		.loc 4 449 0
 2817 0d6c FEFFFFEB 		bl	sprintf
 2818              		.loc 4 450 0
 2819 0d70 B030D6E1 		ldrh	r3, [r6, #0]
 2820 0d74 3C229FE5 		ldr	r2, .L292+280
 2821 0d78 033BA0E1 		mov	r3, r3, asl #22
 2822 0d7c 233BA0E1 		mov	r3, r3, lsr #22
 2823 0d80 0320D2E7 		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2824 0d84 0C508DE2 		add	r5, sp, #12
 2825              	.LVL120:
 2826 0d88 6E2042E2 		sub	r2, r2, #110
 2827 0d8c 18129FE5 		ldr	r1, .L292+268
 2828 0d90 050085E2 		add	r0, r5, #5
 2829 0d94 FEFFFFEB 		bl	sprintf
 2830              		.loc 4 451 0
 2831 0d98 0500A0E1 		mov	r0, r5
 2832 0d9c 0010E0E3 		mvn	r1, #0
 2833 0da0 FEFFFFEB 		bl	fb_putstr
 2834              		.loc 4 453 0
 2835 0da4 40319FE5 		ldr	r3, .L292+76
 2836              	.LBB235:
 2837              	.LBB236:
 2838              		.loc 3 87 0
 2839 0da8 10429FE5 		ldr	r4, .L292+288
 2840              	.LVL121:
 2841              	.LBE236:
 2842              	.LBE235:
 2843              		.loc 4 453 0
 2844 0dac 003093E5 		ldr	r3, [r3, #0]
 2845              	.LBB237:
 2846              	.LBB238:
 2847              		.loc 3 87 0
 2848 0db0 000094E5 		ldr	r0, [r4, #0]
 2849              	.LBE238:
 2850              	.LBE237:
 2851              		.loc 4 453 0
 2852 0db4 000053E3 		cmp	r3, #0
 2853              	.LBB239:
 2854              	.LBB240:
 2855              		.loc 3 87 0
 2856 0db8 FF38A0E3 		mov	r3, #16711680
 2857 0dbc 283080E5 		str	r3, [r0, #40]
 2858              	.LBE240:
 2859              	.LBE239:
 2860              		.loc 4 453 0
 2861 0dc0 7B03000A 		beq	.L231
 2862              	.LBB241:
 2863              	.LBB242:
 2864              		.loc 3 81 0
 2865 0dc4 B012D0E1 		ldrh	r1, [r0, #32]
 2866 0dc8 102041E2 		sub	r2, r1, #16
 2867              	.LBE242:
 2868              	.LBE241:
 2869              	.LBB243:
 2870              	.LBB244:
 2871              		.loc 3 97 0
 2872 0dcc FF3843E2 		sub	r3, r3, #16711680
 2873              	.LBE244:
 2874              	.LBE243:
 2875              	.LBB245:
 2876              	.LBB246:
 2877              		.loc 3 81 0
 2878 0dd0 B422C0E1 		strh	r2, [r0, #36]	@ movhi
 2879              		.loc 3 82 0
 2880 0dd4 0F20A0E3 		mov	r2, #15	@ movhi
 2881              	.LBE246:
 2882              	.LBE245:
 2883              	.LBB247:
 2884              	.LBB248:
 2885              		.loc 3 97 0
 2886 0dd8 303080E5 		str	r3, [r0, #48]
 2887              	.LBE248:
 2888              	.LBE247:
 2889              	.LBB249:
 2890              	.LBB250:
 2891              		.loc 3 82 0
 2892 0ddc B622C0E1 		strh	r2, [r0, #38]	@ movhi
 2893              	.LBE250:
 2894              	.LBE249:
 2895              		.loc 4 456 0
 2896 0de0 14019FE5 		ldr	r0, .L292+92
 2897 0de4 FEFFFFEB 		bl	fb_putstr
 2898              	.LBB251:
 2899              	.LBB252:
 2900              		.loc 3 97 0
 2901 0de8 002094E5 		ldr	r2, [r4, #0]
 2902 0dec 0230A0E3 		mov	r3, #2
 2903 0df0 303082E5 		str	r3, [r2, #48]
 2904              	.L231:
 2905              	.LBE252:
 2906              	.LBE251:
 2907              		.loc 4 459 0
 2908 0df4 C0319FE5 		ldr	r3, .L292+284
 2909 0df8 002093E5 		ldr	r2, [r3, #0]
 2910 0dfc 010052E3 		cmp	r2, #1
 2911 0e00 9003000A 		beq	.L233
 2912              	.LBB253:
 2913              	.LBB254:
 2914              		.loc 3 97 0
 2915 0e04 001094E5 		ldr	r1, [r4, #0]
 2916 0e08 0030A0E3 		mov	r3, #0
 2917 0e0c 303081E5 		str	r3, [r1, #48]
 2918              	.LBE254:
 2919              	.LBE253:
 2920              	.LBB255:
 2921              	.LBB256:
 2922              		.loc 3 82 0
 2923 0e10 0F30A0E3 		mov	r3, #15	@ movhi
 2924 0e14 B632C1E1 		strh	r3, [r1, #38]	@ movhi
 2925              		.loc 3 81 0
 2926 0e18 0130A0E3 		mov	r3, #1	@ movhi
 2927 0e1c B432C1E1 		strh	r3, [r1, #36]	@ movhi
 2928              	.LBE256:
 2929              	.LBE255:
 2930              		.loc 4 462 0
 2931 0e20 0500A0E1 		mov	r0, r5
 2932 0e24 84119FE5 		ldr	r1, .L292+272
 2933 0e28 FEFFFFEB 		bl	sprintf
 2934              		.loc 4 463 0
 2935 0e2c 003094E5 		ldr	r3, [r4, #0]
 2936 0e30 0500A0E1 		mov	r0, r5
 2937 0e34 B012D3E1 		ldrh	r1, [r3, #32]
 2938 0e38 FEFFFFEB 		bl	fb_putstr
 2939              	.LBB257:
 2940              	.LBB258:
 2941              		.loc 3 97 0
 2942 0e3c 002094E5 		ldr	r2, [r4, #0]
 2943 0e40 0230A0E3 		mov	r3, #2
 2944 0e44 303082E5 		str	r3, [r2, #48]
 2945              	.L233:
 2946              	.LBE258:
 2947              	.LBE257:
 2948              		.loc 4 467 0
 2949 0e48 98319FE5 		ldr	r3, .L292+328
 2950 0e4c 003093E5 		ldr	r3, [r3, #0]
 2951              	.LBB259:
 2952              	.LBB260:
 2953              		.loc 3 87 0
 2954 0e50 002094E5 		ldr	r2, [r4, #0]
 2955              	.LBE260:
 2956              	.LBE259:
 2957              		.loc 4 467 0
 2958 0e54 000053E3 		cmp	r3, #0
 2959              	.LBB261:
 2960              	.LBB262:
 2961              		.loc 3 87 0
 2962 0e58 0030A0E3 		mov	r3, #0
 2963 0e5c 283082E5 		str	r3, [r2, #40]
 2964              	.LBE262:
 2965              	.LBE261:
 2966              		.loc 4 467 0
 2967 0e60 9F03000A 		beq	.L235
 2968 0e64 B030D6E1 		ldrh	r3, [r6, #0]
 2969 0e68 020C53E3 		cmp	r3, #512
 2970 0e6c 9F03003A 		bcc	.L235
 2971 0e70 8C209FE5 		ldr	r2, .L292+100
 2972 0e74 020053E1 		cmp	r3, r2
 2973 0e78 08208D95 		strls	r2, [sp, #8]
 2974              	.LVL122:
 2975 0e7c 02BCA093 		movls	fp, #512
 2976              	.LVL123:
 2977 0e80 A403009A 		bls	.L239
 2978              	.L235:
 2979              		.loc 4 471 0
 2980 0e84 10319FE5 		ldr	r3, .L292+252
 2981 0e88 003093E5 		ldr	r3, [r3, #0]
 2982              		.loc 4 472 0
 2983 0e8c B410D3E1 		ldrh	r1, [r3, #4]
 2984              		.loc 4 471 0
 2985 0e90 B0B0D3E1 		ldrh	fp, [r3, #0]
 2986              		.loc 4 472 0
 2987 0e94 08108DE5 		str	r1, [sp, #8]
 2988              	.L239:
 2989 0e98 0060A0E3 		mov	r6, #0
 2990              	.LVL124:
 2991 0e9c 300400EA 		b	.L240
 2992              	.L293:
 2993              		.align	2
 2994              	.L292:
 2995 0ea0 00000000 		.word	battery_info
 2996 0ea4 E8000000 		.word	.LC8
 2997 0ea8 00C0C000 		.word	12632064
 2998 0eac F8000000 		.word	.LC9
 2999 0eb0 00010000 		.word	.LC10
 3000 0eb4 00000000 		.word	power
 3001 0eb8 0C010000 		.word	.LC11
 3002 0ebc 00000000 		.word	jiffies
 3003 0ec0 00000000 		.word	rach_when
 3004 0ec4 00000000 		.word	assign
 3005 0ec8 18010000 		.word	.LC12
 3006 0ecc 00000000 		.word	ta
 3007 0ed0 28010000 		.word	.LC13
 3008 0ed4 2A020000 		.word	554
 3009 0ed8 30010000 		.word	.LC14
 3010 0edc 38010000 		.word	.LC15
 3011 0ee0 44010000 		.word	.LC16
 3012 0ee4 50010000 		.word	.LC17
 3013 0ee8 58010000 		.word	.LC18
 3014 0eec 00000000 		.word	max
 3015 0ef0 00000000 		.word	ul_max
 3016 0ef4 00000000 		.word	ul_levels
 3017 0ef8 64010000 		.word	.LC19
 3018 0efc 6C010000 		.word	.LC20
 3019 0f00 32000000 		.word	ul_arfcn
 3020 0f04 2A030000 		.word	810
 3021 0f08 70010000 		.word	.LC21
 3022 0f0c 75010000 		.word	373
 3023 0f10 78010000 		.word	.LC22
 3024 0f14 80010000 		.word	.LC23
 3025 0f18 00000000 		.word	sync_msg
 3026 0f1c 00000000 		.word	bsic
 3027 0f20 88010000 		.word	.LC24
 3028 0f24 98010000 		.word	.LC25
 3029 0f28 00000000 		.word	si_1
 3030 0f2c 00000000 		.word	si_2
 3031 0f30 00000000 		.word	si_2bis
 3032 0f34 00000000 		.word	si_2ter
 3033 0f38 00000000 		.word	si_3
 3034 0f3c 00000000 		.word	si_4
 3035 0f40 A0010000 		.word	.LC26
 3036 0f44 00000000 		.word	mcc
 3037 0f48 D0010000 		.word	.LC29
 3038 0f4c 00000000 		.word	mnc
 3039 0f50 00000000 		.word	lac
 3040 0f54 B0010000 		.word	.LC27
 3041 0f58 C0010000 		.word	.LC28
 3042 0f5c F0010000 		.word	.LC31
 3043 0f60 00000000 		.word	cell_id
 3044 0f64 E0010000 		.word	.LC30
 3045 0f68 00000000 		.word	freq
 3046 0f6c 00020000 		.word	.LC32
 3047 0f70 08020000 		.word	.LC33
 3048 0f74 10020000 		.word	.LC34
 3049 0f78 00000000 		.word	nb_num
 3050 0f7c 18020000 		.word	.LC35
 3051 0f80 00000000 		.word	input
 3052 0f84 24020000 		.word	.LC36
 3053 0f88 30020000 		.word	.LC37
 3054 0f8c 3C020000 		.word	.LC38
 3055 0f90 48020000 		.word	.LC39
 3056 0f94 664B0000 		.word	19302
 3057 0f98 46480000 		.word	18502
 3058 0f9c 00000000 		.word	band
 3059 0fa0 4C020000 		.word	.LC40
 3060 0fa4 00000000 		.word	max_power
 3061 0fa8 58020000 		.word	.LC41
 3062 0fac 64020000 		.word	.LC42
 3063 0fb0 6C020000 		.word	.LC43
 3064 0fb4 30000000 		.word	arfcn
 3065 0fb8 00000000 		.word	pm_spectrum
 3066 0fbc 00000000 		.word	pm_scale
 3067 0fc0 00000000 		.word	framebuffer
 3068 0fc4 00000000 		.word	mode
 3069 0fc8 70020000 		.word	.LC44
 3070 0fcc 78020000 		.word	.LC45
 3071 0fd0 80020000 		.word	.LC46
 3072 0fd4 90020000 		.word	.LC48
 3073 0fd8 00000000 		.word	cursor
 3074 0fdc A0020000 		.word	.LC51
 3075 0fe0 AC020000 		.word	.LC52
 3076 0fe4 88020000 		.word	.LC47
 3077 0fe8 00000000 		.word	pcs
 3078 0fec 00000000 		.word	uplink
 3079 0ff0 BC020000 		.word	.LC54
 3080 0ff4 9C020000 		.word	.LC50
 3081 0ff8 B8020000 		.word	.LC53
 3082 0ffc 98020000 		.word	.LC49
 3083 1000 C0020000 		.word	.LC55
 3084 1004 00000000 		.word	framebuffer
 3085 1008 00000000 		.word	tone
 3086 100c CC020000 		.word	.LC56
 3087              	.LVL125:
 3088              	.L241:
 3089              		.loc 4 476 0
 3090 1010 64301FE5 		ldr	r3, .L292+276
 3091 1014 B030D3E1 		ldrh	r3, [r3, #0]
 3092 1018 053083E0 		add	r3, r3, r5
 3093 101c 033068E0 		rsb	r3, r8, r3
 3094 1020 032BA0E1 		mov	r2, r3, asl #22
 3095 1024 222BA0E1 		mov	r2, r2, lsr #22
 3096 1028 02306BE0 		rsb	r3, fp, r2
 3097              		.loc 4 478 0
 3098 102c 08109DE5 		ldr	r1, [sp, #8]
 3099              		.loc 4 476 0
 3100 1030 020C13E3 		tst	r3, #512
 3101              		.loc 4 478 0
 3102 1034 01C062E0 		rsb	ip, r2, r1
 3103              		.loc 4 476 0
 3104 1038 2F04001A 		bne	.L242
 3105              		.loc 4 485 0
 3106 103c 0A38A0E1 		mov	r3, sl, asl #16
 3107 1040 2348A0E1 		mov	r4, r3, lsr #16
 3108              		.loc 4 486 0
 3109 1044 0A1084E2 		add	r1, r4, #10
 3110 1048 0118A0E1 		mov	r1, r1, asl #16
 3111              		.loc 4 478 0
 3112 104c 029C1CE2 		ands	r9, ip, #512
 3113              	.LVL126:
 3114              		.loc 4 486 0
 3115 1050 0500A0E1 		mov	r0, r5
 3116 1054 2118A0E1 		mov	r1, r1, lsr #16
 3117              		.loc 4 478 0
 3118 1058 2F04001A 		bne	.L242
 3119              		.loc 4 480 0
 3120 105c AC301FE5 		ldr	r3, .L292+280
 3121 1060 0220D3E7 		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 3122 1064 B0301FE5 		ldr	r3, .L292+284
 3123 1068 003093E5 		ldr	r3, [r3, #0]
 3124 106c 920303E0 		mul	r3, r2, r3
 3125 1070 9A0303E0 		mul	r3, sl, r3
 3126 1074 3F2083E2 		add	r2, r3, #63
 3127 1078 000053E3 		cmp	r3, #0
 3128 107c 0230A0B1 		movlt	r3, r2
 3129 1080 0335A0E1 		mov	r3, r3, asl #10
 3130 1084 2338A0E1 		mov	r3, r3, lsr #16
 3131              	.LVL127:
 3132              		.loc 4 481 0
 3133 1088 0A0053E1 		cmp	r3, sl
 3134              		.loc 4 482 0
 3135 108c 0430A0C1 		movgt	r3, r4
 3136              	.LBB263:
 3137              	.LBB264:
 3138              		.loc 3 82 0
 3139 1090 043063E0 		rsb	r3, r3, r4
 3140              	.LVL128:
 3141              	.LBE264:
 3142              	.LBE263:
 3143              		.loc 4 483 0
 3144 1094 080056E1 		cmp	r6, r8
 3145              	.LBB265:
 3146              	.LBB266:
 3147              		.loc 3 81 0
 3148 1098 00C097E5 		ldr	ip, [r7, #0]
 3149              		.loc 3 82 0
 3150 109c 0A2083E2 		add	r2, r3, #10
 3151              	.LBE266:
 3152              	.LBE265:
 3153              	.LBB267:
 3154              	.LBB268:
 3155              		.loc 3 87 0
 3156 10a0 FF38A003 		moveq	r3, #16711680
 3157 10a4 28308E05 		streq	r3, [lr, #40]
 3158              	.LBE268:
 3159              	.LBE267:
 3160              	.LBB269:
 3161              	.LBB270:
 3162              		.loc 3 82 0
 3163 10a8 B622CCE1 		strh	r2, [ip, #38]	@ movhi
 3164              		.loc 3 81 0
 3165 10ac B452CCE1 		strh	r5, [ip, #36]	@ movhi
 3166              	.LBE270:
 3167              	.LBE269:
 3168              		.loc 4 486 0
 3169 10b0 FEFFFFEB 		bl	fb_boxto
 3170              		.loc 4 487 0
 3171 10b4 002097E5 		ldr	r2, [r7, #0]
 3172 10b8 B032D2E1 		ldrh	r3, [r2, #32]
 3173 10bc A30056E1 		cmp	r6, r3, lsr #1
 3174              	.LBB271:
 3175              	.LBB272:
 3176              		.loc 3 87 0
 3177 10c0 28908205 		streq	r9, [r2, #40]
 3178              	.LVL129:
 3179              	.L242:
 3180              	.LBE272:
 3181              	.LBE271:
 3182              		.loc 4 474 0
 3183 10c4 016086E2 		add	r6, r6, #1
 3184              	.LVL130:
 3185              	.L240:
 3186 10c8 10711FE5 		ldr	r7, .L292+288
 3187 10cc 00E097E5 		ldr	lr, [r7, #0]
 3188              		.loc 4 172 0
 3189 10d0 0638A0E1 		mov	r3, r6, asl #16
 3190 10d4 2358A0E1 		mov	r5, r3, lsr #16
 3191              		.loc 4 474 0
 3192 10d8 B032DEE1 		ldrh	r3, [lr, #32]
 3193 10dc 0338A0E1 		mov	r3, r3, asl #16
 3194 10e0 A348A0E1 		mov	r4, r3, lsr #17
 3195 10e4 230856E1 		cmp	r6, r3, lsr #16
 3196              		.loc 4 475 0
 3197 10e8 0480A0E1 		mov	r8, r4
 3198              	.LVL131:
 3199              		.loc 4 474 0
 3200 10ec 020400BA 		blt	.L241
 3201              	.LBB273:
 3202              	.LBB274:
 3203              		.loc 3 82 0
 3204 10f0 0020A0E3 		mov	r2, #0	@ movhi
 3205 10f4 B622CEE1 		strh	r2, [lr, #38]	@ movhi
 3206              	.LVL132:
 3207              	.LBE274:
 3208              	.LBE273:
 3209              		.loc 4 492 0
 3210 10f8 0400A0E1 		mov	r0, r4
 3211 10fc 0410A0E3 		mov	r1, #4
 3212              	.LBB275:
 3213              	.LBB276:
 3214              		.loc 3 81 0
 3215 1100 B442CEE1 		strh	r4, [lr, #36]	@ movhi
 3216              	.LBE276:
 3217              	.LBE275:
 3218              		.loc 4 492 0
 3219 1104 FEFFFFEB 		bl	fb_boxto
 3220              		.loc 4 493 0
 3221 1108 0A18A0E1 		mov	r1, sl, asl #16
 3222              	.LBB277:
 3223              	.LBB278:
 3224              		.loc 3 81 0
 3225 110c 002097E5 		ldr	r2, [r7, #0]
 3226              		.loc 3 82 0
 3227 1110 0A3881E2 		add	r3, r1, #655360
 3228 1114 2338A0E1 		mov	r3, r3, lsr #16
 3229              	.LBE278:
 3230              	.LBE277:
 3231              		.loc 4 494 0
 3232 1118 0E1881E2 		add	r1, r1, #917504
 3233              	.LBB279:
 3234              	.LBB280:
 3235              		.loc 3 82 0
 3236 111c B632C2E1 		strh	r3, [r2, #38]	@ movhi
 3237              		.loc 3 81 0
 3238 1120 B442C2E1 		strh	r4, [r2, #36]	@ movhi
 3239              	.LBE280:
 3240              	.LBE279:
 3241              		.loc 4 494 0
 3242 1124 0400A0E1 		mov	r0, r4
 3243 1128 2118A0E1 		mov	r1, r1, lsr #16
 3244 112c FEFFFFEB 		bl	fb_boxto
 3245              	.LVL133:
 3246              	.L222:
 3247              	.LBE232:
 3248              	.LBB281:
 3249              	.LBB282:
 3250              		.loc 3 87 0
 3251 1130 78411FE5 		ldr	r4, .L292+288
 3252              	.LVL134:
 3253 1134 002094E5 		ldr	r2, [r4, #0]
 3254              	.LBE282:
 3255              	.LBE281:
 3256              		.loc 4 499 0
 3257 1138 B212D2E1 		ldrh	r1, [r2, #34]
 3258              		.loc 4 500 0
 3259 113c B002D2E1 		ldrh	r0, [r2, #32]
 3260              		.loc 4 499 0
 3261 1140 0A1041E2 		sub	r1, r1, #10
 3262              	.LBB283:
 3263              	.LBB284:
 3264              		.loc 3 87 0
 3265 1144 FF3CA0E3 		mov	r3, #65280
 3266              	.LBE284:
 3267              	.LBE283:
 3268              		.loc 4 499 0
 3269 1148 0118A0E1 		mov	r1, r1, asl #16
 3270              		.loc 4 500 0
 3271 114c 010040E2 		sub	r0, r0, #1
 3272              		.loc 4 499 0
 3273 1150 2118A0E1 		mov	r1, r1, lsr #16
 3274              	.LBB285:
 3275              	.LBB286:
 3276              		.loc 3 87 0
 3277 1154 283082E5 		str	r3, [r2, #40]
 3278              	.LBE286:
 3279              	.LBE285:
 3280              		.loc 4 500 0
 3281 1158 0008A0E1 		mov	r0, r0, asl #16
 3282              	.LBB287:
 3283              	.LBB288:
 3284              		.loc 3 81 0
 3285 115c 0030A0E3 		mov	r3, #0	@ movhi
 3286 1160 B432C2E1 		strh	r3, [r2, #36]	@ movhi
 3287              		.loc 3 82 0
 3288 1164 B612C2E1 		strh	r1, [r2, #38]	@ movhi
 3289              	.LBE288:
 3290              	.LBE287:
 3291              		.loc 4 500 0
 3292 1168 2008A0E1 		mov	r0, r0, lsr #16
 3293 116c FEFFFFEB 		bl	fb_boxto
 3294              		.loc 4 501 0
 3295 1170 001094E5 		ldr	r1, [r4, #0]
 3296              		.loc 4 503 0
 3297 1174 B8311FE5 		ldr	r3, .L292+292
 3298              		.loc 4 501 0
 3299 1178 B222D1E1 		ldrh	r2, [r1, #34]
 3300              		.loc 4 503 0
 3301 117c 000093E5 		ldr	r0, [r3, #0]
 3302              		.loc 4 501 0
 3303 1180 012042E2 		sub	r2, r2, #1
 3304              	.LBB289:
 3305              	.LBB290:
 3306              		.loc 3 87 0
 3307 1184 FF38A0E3 		mov	r3, #16711680
 3308              	.LBE290:
 3309              	.LBE289:
 3310              	.LBB291:
 3311              	.LBB292:
 3312              		.loc 3 82 0
 3313 1188 B622C1E1 		strh	r2, [r1, #38]	@ movhi
 3314              	.LBE292:
 3315              	.LBE291:
 3316              		.loc 4 503 0
 3317 118c 020050E3 		cmp	r0, #2
 3318              	.LBB293:
 3319              	.LBB294:
 3320              		.loc 3 81 0
 3321 1190 0020A0E3 		mov	r2, #0	@ movhi
 3322              	.LBE294:
 3323              	.LBE293:
 3324              	.LBB295:
 3325              	.LBB296:
 3326              		.loc 3 87 0
 3327 1194 283081E5 		str	r3, [r1, #40]
 3328              	.LBE296:
 3329              	.LBE295:
 3330              	.LBB297:
 3331              	.LBB298:
 3332              		.loc 3 81 0
 3333 1198 B422C1E1 		strh	r2, [r1, #36]	@ movhi
 3334              	.LBE298:
 3335              	.LBE297:
 3336              		.loc 4 503 0
 3337 119c 7004001A 		bne	.L251
 3338              		.loc 4 504 0
 3339 11a0 D0311FE5 		ldr	r3, .L292+312
 3340 11a4 003093E5 		ldr	r3, [r3, #0]
 3341 11a8 000053E3 		cmp	r3, #0
 3342 11ac EC311F15 		ldrne	r3, .L292+296
 3343 11b0 EC211F15 		ldrne	r2, .L292+300
 3344 11b4 EC311F05 		ldreq	r3, .L292+304
 3345 11b8 DC211F05 		ldreq	r2, .L292+324
 3346 11bc F0111FE5 		ldr	r1, .L292+308
 3347 11c0 0C008DE2 		add	r0, sp, #12
 3348 11c4 960400EA 		b	.L290
 3349              	.L251:
 3350              		.loc 4 506 0
 3351 11c8 030050E3 		cmp	r0, #3
 3352 11cc 8004001A 		bne	.L257
 3353 11d0 00321FE5 		ldr	r3, .L292+312
 3354 11d4 003093E5 		ldr	r3, [r3, #0]
 3355 11d8 000053E3 		cmp	r3, #0
 3356 11dc 800400AA 		bge	.L257
 3357              		.loc 4 507 0
 3358 11e0 FC311FE5 		ldr	r3, .L292+332
 3359 11e4 001093E5 		ldr	r1, [r3, #0]
 3360 11e8 FC211FE5 		ldr	r2, .L292+340
 3361 11ec 000051E3 		cmp	r1, #0
 3362 11f0 FC311FE5 		ldr	r3, .L292+348
 3363 11f4 20121FE5 		ldr	r1, .L292+316
 3364 11f8 0230A001 		moveq	r3, r2
 3365 11fc 20221FE5 		ldr	r2, .L292+324
 3366 1200 0C008DE2 		add	r0, sp, #12
 3367 1204 960400EA 		b	.L290
 3368              	.L257:
 3369              		.loc 4 509 0
 3370 1208 033040E2 		sub	r3, r0, #3
 3371 120c 010053E3 		cmp	r3, #1
 3372 1210 8804008A 		bhi	.L263
 3373              		.loc 4 510 0
 3374 1214 0C008DE2 		add	r0, sp, #12
 3375 1218 40121FE5 		ldr	r1, .L292+320
 3376 121c 40221FE5 		ldr	r2, .L292+324
 3377 1220 FEFFFFEB 		bl	sprintf
 3378 1224 970400EA 		b	.L256
 3379              	.L263:
 3380              		.loc 4 512 0
 3381 1228 48321FE5 		ldr	r3, .L292+328
 3382 122c 001093E5 		ldr	r1, [r3, #0]
 3383 1230 4C321FE5 		ldr	r3, .L292+332
 3384 1234 000093E5 		ldr	r0, [r3, #0]
 3385 1238 50321FE5 		ldr	r3, .L292+336
 3386 123c 000051E3 		cmp	r1, #0
 3387 1240 54121FE5 		ldr	r1, .L292+340
 3388 1244 54221FE5 		ldr	r2, .L292+344
 3389 1248 0320A001 		moveq	r2, r3
 3390 124c 000050E3 		cmp	r0, #0
 3391 1250 5C321FE5 		ldr	r3, .L292+348
 3392 1254 0130A001 		moveq	r3, r1
 3393 1258 60121FE5 		ldr	r1, .L292+352
 3394 125c 0C008DE2 		add	r0, sp, #12
 3395              	.L290:
 3396 1260 FEFFFFEB 		bl	sprintf
 3397              	.L256:
 3398              		.loc 4 514 0
 3399 1264 0C408DE2 		add	r4, sp, #12
 3400              	.LBB299:
 3401              	.LBB300:
 3402              		.loc 3 87 0
 3403 1268 6C521FE5 		ldr	r5, .L292+356
 3404              	.LVL135:
 3405              	.LBE300:
 3406              	.LBE299:
 3407              		.loc 4 514 0
 3408 126c 0010E0E3 		mvn	r1, #0
 3409 1270 0400A0E1 		mov	r0, r4
 3410 1274 FEFFFFEB 		bl	fb_putstr
 3411              	.LBB301:
 3412              	.LBB302:
 3413              		.loc 3 87 0
 3414 1278 002095E5 		ldr	r2, [r5, #0]
 3415              	.LBE302:
 3416              	.LBE301:
 3417              		.loc 4 517 0
 3418 127c B232D2E1 		ldrh	r3, [r2, #34]
 3419 1280 023043E2 		sub	r3, r3, #2
 3420              	.LBB303:
 3421              	.LBB304:
 3422              		.loc 3 82 0
 3423 1284 B632C2E1 		strh	r3, [r2, #38]	@ movhi
 3424              	.LBE304:
 3425              	.LBE303:
 3426              		.loc 4 518 0
 3427 1288 88321FE5 		ldr	r3, .L292+360
 3428              	.LBB305:
 3429              	.LBB306:
 3430              		.loc 3 87 0
 3431 128c 0010A0E3 		mov	r1, #0
 3432              	.LBE306:
 3433              	.LBE305:
 3434              		.loc 4 518 0
 3435 1290 000093E5 		ldr	r0, [r3, #0]
 3436              	.LBB307:
 3437              	.LBB308:
 3438              		.loc 3 81 0
 3439 1294 B412C2E1 		strh	r1, [r2, #36]	@ movhi
 3440              	.LBE308:
 3441              	.LBE307:
 3442              	.LBB309:
 3443              	.LBB310:
 3444              		.loc 3 87 0
 3445 1298 281082E5 		str	r1, [r2, #40]
 3446              	.LBE310:
 3447              	.LBE309:
 3448              	.LBB311:
 3449              	.LBB312:
 3450              		.loc 3 97 0
 3451 129c 301082E5 		str	r1, [r2, #48]
 3452              	.LBE312:
 3453              	.LBE311:
 3454              		.loc 4 518 0
 3455 12a0 191081E2 		add	r1, r1, #25
 3456 12a4 FEFFFFEB 		bl	__divsi3
 3457 12a8 A4121FE5 		ldr	r1, .L292+364
 3458 12ac 0020A0E1 		mov	r2, r0
 3459 12b0 0400A0E1 		mov	r0, r4
 3460 12b4 FEFFFFEB 		bl	sprintf
 3461              		.loc 4 519 0
 3462 12b8 0400A0E1 		mov	r0, r4
 3463 12bc 0010E0E3 		mvn	r1, #0
 3464 12c0 FEFFFFEB 		bl	fb_putstr
 3465              	.LBB313:
 3466              	.LBB314:
 3467              		.loc 3 76 0
 3468 12c4 003095E5 		ldr	r3, [r5, #0]
 3469 12c8 0FE0A0E1 		mov	lr, pc
 3470 12cc 1CF093E5 		ldr	pc, [r3, #28]
 3471              	.LBE314:
 3472              	.LBE313:
 3473              		.loc 4 522 0
 3474 12d0 20D08DE2 		add	sp, sp, #32
 3475 12d4 F08FBDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 3476              	.LVL136:
 3477              	.L98:
 3478              	.LBB315:
 3479              	.LBB316:
 3480 12d8 47E0A0E3 		mov	lr, #71
 3481 12dc 46C0A0E3 		mov	ip, #70
 3482 12e0 4430A0E3 		mov	r3, #68
 3483 12e4 0E20A0E1 		mov	r2, lr
 3484 12e8 5D0000EA 		b	.L97
 3485              	.LBE316:
 3486              	.LBE315:
 3487              	.LFE112:
 3489              		.section	.text.inc_dec_arfcn,"ax",%progbits
 3490              		.align	2
 3492              	inc_dec_arfcn:
 3493              	.LFB115:
 3494              		.loc 4 600 0
 3495              		@ args = 0, pretend = 0, frame = 0
 3496              		@ frame_needed = 0, uses_anonymous_args = 0
 3497              	.LVL137:
 3498 0000 04E02DE5 		str	lr, [sp, #-4]!
 3499              	.LCFI12:
 3500              		.loc 4 600 0
 3501 0004 4C319FE5 		ldr	r3, .L340
 3502 0008 00E093E5 		ldr	lr, [r3, #0]
 3503              		.loc 4 610 0
 3504 000c 48319FE5 		ldr	r3, .L340+4
 3505 0010 48C19FE5 		ldr	ip, .L340+8
 3506 0014 B010D3E1 		ldrh	r1, [r3, #0]
 3507 0018 110000EA 		b	.L295
 3508              	.L296:
 3509              		.loc 4 606 0
 3510 001c 00309CE5 		ldr	r3, [ip, #0]
 3511 0020 020053E1 		cmp	r3, r2
 3512              		.loc 4 604 0
 3513 0024 0CE0A0E1 		mov	lr, ip
 3514              		.loc 4 606 0
 3515 0028 0C0000AA 		bge	.L297
 3516              		.loc 4 607 0
 3517 002c 030051E1 		cmp	r1, r3
 3518 0030 100000BA 		blt	.L299
 3519 0034 0E0000EA 		b	.L338
 3520              	.L297:
 3521              		.loc 4 610 0
 3522 0038 030051E1 		cmp	r1, r3
 3523 003c 180000AA 		bge	.L301
 3524              	.L338:
 3525 0040 020051E1 		cmp	r1, r2
 3526 0044 180000DA 		ble	.L301
 3527              	.L299:
 3528 0048 18C08CE2 		add	ip, ip, #24
 3529              	.L295:
 3530              		.loc 4 604 0
 3531 004c 04209CE5 		ldr	r2, [ip, #4]
 3532 0050 000052E3 		cmp	r2, #0
 3533 0054 0500001A 		bne	.L296
 3534 0058 F8309FE5 		ldr	r3, .L340
 3535 005c 1500E0E3 		mvn	r0, #21
 3536              	.LVL138:
 3537 0060 00E083E5 		str	lr, [r3, #0]
 3538 0064 04F09DE4 		ldr	pc, [sp], #4
 3539              	.LVL139:
 3540              	.L301:
 3541 0068 E8309FE5 		ldr	r3, .L340
 3542              		.loc 4 617 0
 3543 006c 000050E3 		cmp	r0, #0
 3544              		.loc 4 604 0
 3545 0070 00C083E5 		str	ip, [r3, #0]
 3546 0074 DC309FE5 		ldr	r3, .L340
 3547              		.loc 4 617 0
 3548 0078 2900000A 		beq	.L308
 3549              		.loc 4 618 0
 3550 007c 002093E5 		ldr	r2, [r3, #0]
 3551 0080 043092E5 		ldr	r3, [r2, #4]
 3552 0084 030051E1 		cmp	r1, r3
 3553              		.loc 4 619 0
 3554 0088 CC309F05 		ldreq	r3, .L340+4
 3555 008c BC20D201 		ldreqh	r2, [r2, #12]
 3556              		.loc 4 618 0
 3557 0090 2F00000A 		beq	.L336
 3558              		.loc 4 620 0
 3559 0094 C8309FE5 		ldr	r3, .L340+12
 3560 0098 BC209FE5 		ldr	r2, .L340+4
 3561 009c 030051E1 		cmp	r1, r3
 3562              		.loc 4 621 0
 3563 00a0 0030A003 		moveq	r3, #0	@ movhi
 3564              		.loc 4 623 0
 3565 00a4 01308112 		addne	r3, r1, #1
 3566 00a8 350000EA 		b	.L337
 3567              	.L308:
 3568              		.loc 4 625 0
 3569 00ac 002093E5 		ldr	r2, [r3, #0]
 3570 00b0 003092E5 		ldr	r3, [r2, #0]
 3571 00b4 030051E1 		cmp	r1, r3
 3572 00b8 3100001A 		bne	.L315
 3573              		.loc 4 626 0
 3574 00bc 98309FE5 		ldr	r3, .L340+4
 3575 00c0 B820D2E1 		ldrh	r2, [r2, #8]
 3576              	.L336:
 3577 00c4 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 3578 00c8 360000EA 		b	.L312
 3579              	.L315:
 3580              		.loc 4 627 0
 3581 00cc 000051E3 		cmp	r1, #0
 3582 00d0 84209FE5 		ldr	r2, .L340+4
 3583              		.loc 4 628 0
 3584 00d4 3F3BE003 		mvneq	r3, #64512
 3585              		.loc 4 630 0
 3586 00d8 01304112 		subne	r3, r1, #1
 3587              	.L337:
 3588 00dc B030C2E1 		strh	r3, [r2, #0]	@ movhi
 3589              	.L312:
 3590 00e0 70309FE5 		ldr	r3, .L340
 3591 00e4 00C093E5 		ldr	ip, [r3, #0]
 3592              		.loc 4 639 0
 3593 00e8 6C309FE5 		ldr	r3, .L340+4
 3594 00ec 6C009FE5 		ldr	r0, .L340+8
 3595              	.LVL140:
 3596 00f0 B010D3E1 		ldrh	r1, [r3, #0]
 3597 00f4 480000EA 		b	.L319
 3598              	.L320:
 3599              		.loc 4 635 0
 3600 00f8 003090E5 		ldr	r3, [r0, #0]
 3601 00fc 020053E1 		cmp	r3, r2
 3602              		.loc 4 633 0
 3603 0100 00C0A0E1 		mov	ip, r0
 3604              		.loc 4 635 0
 3605 0104 430000AA 		bge	.L321
 3606              		.loc 4 636 0
 3607 0108 030051E1 		cmp	r1, r3
 3608 010c 470000BA 		blt	.L323
 3609 0110 450000EA 		b	.L339
 3610              	.L321:
 3611              		.loc 4 639 0
 3612 0114 030051E1 		cmp	r1, r3
 3613 0118 4F0000AA 		bge	.L325
 3614              	.L339:
 3615 011c 020051E1 		cmp	r1, r2
 3616 0120 4F0000DA 		ble	.L325
 3617              	.L323:
 3618 0124 180080E2 		add	r0, r0, #24
 3619              	.L319:
 3620              		.loc 4 633 0
 3621 0128 042090E5 		ldr	r2, [r0, #4]
 3622 012c 000052E3 		cmp	r2, #0
 3623 0130 3C00001A 		bne	.L320
 3624 0134 1C309FE5 		ldr	r3, .L340
 3625 0138 1500E0E3 		mvn	r0, #21
 3626 013c 00C083E5 		str	ip, [r3, #0]
 3627 0140 04F09DE4 		ldr	pc, [sp], #4
 3628              	.L325:
 3629 0144 0C309FE5 		ldr	r3, .L340
 3630 0148 000083E5 		str	r0, [r3, #0]
 3631              		.loc 4 646 0
 3632 014c FEFFFFEB 		bl	refresh_display
 3633 0150 0000A0E3 		mov	r0, #0
 3634              		.loc 4 649 0
 3635 0154 04F09DE4 		ldr	pc, [sp], #4
 3636              	.L341:
 3637              		.align	2
 3638              	.L340:
 3639 0158 00000000 		.word	band
 3640 015c 30000000 		.word	arfcn
 3641 0160 14000000 		.word	bands
 3642 0164 FF030000 		.word	1023
 3643              	.LFE115:
 3645              		.section	.text.tone_inc_dec,"ax",%progbits
 3646              		.align	2
 3648              	tone_inc_dec:
 3649              	.LFB120:
 3650              		.loc 4 711 0
 3651              		@ args = 0, pretend = 0, frame = 0
 3652              		@ frame_needed = 0, uses_anonymous_args = 0
 3653              		@ link register save eliminated.
 3654              	.LVL141:
 3655              		.loc 4 712 0
 3656 0000 000050E3 		cmp	r0, #0
 3657              		.loc 4 711 0
 3658              		@ lr needed for prologue
 3659 0004 28209FE5 		ldr	r2, .L350
 3660              		.loc 4 712 0
 3661 0008 0600000A 		beq	.L343
 3662              		.loc 4 713 0
 3663 000c 003092E5 		ldr	r3, [r2, #0]
 3664 0010 193083E2 		add	r3, r3, #25
 3665 0014 FF0053E3 		cmp	r3, #255
 3666 0018 0A0000CA 		bgt	.L345
 3667 001c 090000EA 		b	.L349
 3668              	.L343:
 3669              		.loc 4 716 0
 3670 0020 003092E5 		ldr	r3, [r2, #0]
 3671 0024 193053E2 		subs	r3, r3, #25
 3672 0028 0A00004A 		bmi	.L345
 3673              	.L349:
 3674              		.loc 4 717 0
 3675 002c 003082E5 		str	r3, [r2, #0]
 3676              	.L345:
 3677              		.loc 4 721 0
 3678              		.loc 4 720 0
 3679 0030 FEFFFFEA 		b	refresh_display
 3680              	.LVL142:
 3681              	.L351:
 3682              		.align	2
 3683              	.L350:
 3684 0034 00000000 		.word	tone
 3685              	.LFE120:
 3687              		.section	.text.inc_dec_neighbour,"ax",%progbits
 3688              		.align	2
 3690              	inc_dec_neighbour:
 3691              	.LFB122:
 3692              		.loc 4 731 0
 3693              		@ args = 0, pretend = 0, frame = 0
 3694              		@ frame_needed = 0, uses_anonymous_args = 0
 3695              	.LVL143:
 3696              		.loc 4 732 0
 3697 0000 000050E3 		cmp	r0, #0
 3698              		.loc 4 731 0
 3699 0004 04E02DE5 		str	lr, [sp, #-4]!
 3700              	.LCFI13:
 3701 0008 74009FE5 		ldr	r0, .L362
 3702              	.LVL144:
 3703              		.loc 4 732 0
 3704 000c 1500000A 		beq	.L353
 3705              		.loc 4 733 0
 3706 0010 003090E5 		ldr	r3, [r0, #0]
 3707 0014 000053E3 		cmp	r3, #0
 3708 0018 01C043E2 		sub	ip, r3, #1
 3709              		.loc 4 735 0
 3710 001c 01E083E2 		add	lr, r3, #1
 3711              		.loc 4 733 0
 3712 0020 130000DA 		ble	.L355
 3713 0024 5C309FE5 		ldr	r3, .L362+4
 3714 0028 002093E5 		ldr	r2, [r3, #0]
 3715 002c 58309FE5 		ldr	r3, .L362+8
 3716 0030 001093E5 		ldr	r1, [r3, #0]
 3717 0034 B232D2E1 		ldrh	r3, [r2, #34]
 3718 0038 193043E2 		sub	r3, r3, #25
 3719 003c 000053E3 		cmp	r3, #0
 3720 0040 072083E2 		add	r2, r3, #7
 3721 0044 0230A0B1 		movlt	r3, r2
 3722 0048 C31141E0 		sub	r1, r1, r3, asr #3
 3723 004c 01005CE1 		cmp	ip, r1
 3724 0050 1D0000AA 		bge	.L357
 3725              	.L355:
 3726              		.loc 4 735 0
 3727 0054 00E080E5 		str	lr, [r0, #0]
 3728 0058 1A0000EA 		b	.L358
 3729              	.L353:
 3730              		.loc 4 737 0
 3731 005c 003090E5 		ldr	r3, [r0, #0]
 3732 0060 000053E3 		cmp	r3, #0
 3733              		.loc 4 739 0
 3734 0064 013043E2 		sub	r3, r3, #1
 3735              		.loc 4 737 0
 3736 0068 1D0000BA 		blt	.L357
 3737              		.loc 4 739 0
 3738 006c 003080E5 		str	r3, [r0, #0]
 3739              	.L358:
 3740              		.loc 4 742 0
 3741 0070 FEFFFFEB 		bl	refresh_display
 3742 0074 0000A0E3 		mov	r0, #0
 3743 0078 04F09DE4 		ldr	pc, [sp], #4
 3744              	.L357:
 3745              		.loc 4 744 0
 3746 007c 1500E0E3 		mvn	r0, #21
 3747              		.loc 4 745 0
 3748 0080 04F09DE4 		ldr	pc, [sp], #4
 3749              	.L363:
 3750              		.align	2
 3751              	.L362:
 3752 0084 00000000 		.word	cursor
 3753 0088 00000000 		.word	framebuffer
 3754 008c 00000000 		.word	nb_num
 3755              	.LFE122:
 3757              		.section	.text.inc_dec_spectrum,"ax",%progbits
 3758              		.align	2
 3760              	inc_dec_spectrum:
 3761              	.LFB123:
 3762              		.loc 4 748 0
 3763              		@ args = 0, pretend = 0, frame = 0
 3764              		@ frame_needed = 0, uses_anonymous_args = 0
 3765              	.LVL145:
 3766              		.loc 4 749 0
 3767 0000 000050E3 		cmp	r0, #0
 3768              		.loc 4 748 0
 3769 0004 04E02DE5 		str	lr, [sp, #-4]!
 3770              	.LCFI14:
 3771 0008 44209FE5 		ldr	r2, .L372
 3772              		.loc 4 749 0
 3773 000c 0900000A 		beq	.L365
 3774              		.loc 4 750 0
 3775 0010 003092E5 		ldr	r3, [r2, #0]
 3776 0014 8330A0E1 		mov	r3, r3, asl #1
 3777              		.loc 4 751 0
 3778 0018 080053E3 		cmp	r3, #8
 3779              		.loc 4 750 0
 3780 001c 003082E5 		str	r3, [r2, #0]
 3781              		.loc 4 752 0
 3782 0020 0830A0C3 		movgt	r3, #8
 3783              		.loc 4 751 0
 3784 0024 0F0000CA 		bgt	.L371
 3785 0028 100000EA 		b	.L367
 3786              	.L365:
 3787              		.loc 4 754 0
 3788 002c 003092E5 		ldr	r3, [r2, #0]
 3789 0030 C330A0E1 		mov	r3, r3, asr #1
 3790              		.loc 4 755 0
 3791 0034 000053E3 		cmp	r3, #0
 3792              		.loc 4 754 0
 3793 0038 003082E5 		str	r3, [r2, #0]
 3794              		.loc 4 755 0
 3795 003c 100000CA 		bgt	.L367
 3796              		.loc 4 756 0
 3797 0040 0130A0E3 		mov	r3, #1
 3798              	.L371:
 3799 0044 003082E5 		str	r3, [r2, #0]
 3800              	.L367:
 3801              		.loc 4 759 0
 3802 0048 FEFFFFEB 		bl	refresh_display
 3803              	.LVL146:
 3804              		.loc 4 762 0
 3805 004c 0000A0E3 		mov	r0, #0
 3806 0050 04F09DE4 		ldr	pc, [sp], #4
 3807              	.L373:
 3808              		.align	2
 3809              	.L372:
 3810 0054 00000000 		.word	pm_scale
 3811              	.LFE123:
 3813              		.section	.text.inc_dec_ul_arfcn,"ax",%progbits
 3814              		.align	2
 3816              	inc_dec_ul_arfcn:
 3817              	.LFB116:
 3818              		.loc 4 654 0
 3819              		@ args = 0, pretend = 0, frame = 0
 3820              		@ frame_needed = 0, uses_anonymous_args = 0
 3821              	.LVL147:
 3822              		.loc 4 658 0
 3823 0000 000050E3 		cmp	r0, #0
 3824              		.loc 4 654 0
 3825 0004 10402DE9 		stmfd	sp!, {r4, lr}
 3826              	.LCFI15:
 3827 0008 AC309FE5 		ldr	r3, .L385
 3828 000c AC209FE5 		ldr	r2, .L385+4
 3829              		.loc 4 658 0
 3830 0010 1500000A 		beq	.L375
 3831              		.loc 4 659 0
 3832 0014 B030D3E1 		ldrh	r3, [r3, #0]
 3833 0018 B020D2E1 		ldrh	r2, [r2, #0]
 3834 001c 013083E2 		add	r3, r3, #1
 3835 0020 034BA0E1 		mov	r4, r3, asl #22
 3836              	.LVL148:
 3837 0024 022BA0E1 		mov	r2, r2, asl #22
 3838 0028 244BA0E1 		mov	r4, r4, lsr #22
 3839 002c 222BA0E1 		mov	r2, r2, lsr #22
 3840 0030 110000EA 		b	.L377
 3841              	.L378:
 3842              		.loc 4 661 0
 3843 0034 88309FE5 		ldr	r3, .L385+8
 3844 0038 0430D3E7 		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 3845 003c 010013E3 		tst	r3, #1
 3846 0040 2600001A 		bne	.L379
 3847              		.loc 4 660 0
 3848 0044 014BA0E1 		mov	r4, r1, asl #22
 3849 0048 244BA0E1 		mov	r4, r4, lsr #22
 3850              	.L377:
 3851              		.loc 4 659 0
 3852 004c 020054E1 		cmp	r4, r2
 3853              		.loc 4 660 0
 3854 0050 011084E2 		add	r1, r4, #1
 3855              		.loc 4 659 0
 3856 0054 0B00001A 		bne	.L378
 3857 0058 260000EA 		b	.L379
 3858              	.LVL149:
 3859              	.L375:
 3860              		.loc 4 665 0
 3861 005c B030D3E1 		ldrh	r3, [r3, #0]
 3862 0060 B020D2E1 		ldrh	r2, [r2, #0]
 3863 0064 013043E2 		sub	r3, r3, #1
 3864 0068 034BA0E1 		mov	r4, r3, asl #22
 3865              	.LVL150:
 3866 006c 022BA0E1 		mov	r2, r2, asl #22
 3867 0070 244BA0E1 		mov	r4, r4, lsr #22
 3868 0074 222BA0E1 		mov	r2, r2, lsr #22
 3869 0078 230000EA 		b	.L381
 3870              	.L382:
 3871              		.loc 4 667 0
 3872 007c 40309FE5 		ldr	r3, .L385+8
 3873 0080 0430D3E7 		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 3874 0084 010013E3 		tst	r3, #1
 3875 0088 2600001A 		bne	.L379
 3876              		.loc 4 666 0
 3877 008c 014BA0E1 		mov	r4, r1, asl #22
 3878 0090 244BA0E1 		mov	r4, r4, lsr #22
 3879              	.L381:
 3880              		.loc 4 665 0
 3881 0094 020054E1 		cmp	r4, r2
 3882              		.loc 4 666 0
 3883 0098 011044E2 		sub	r1, r4, #1
 3884              		.loc 4 665 0
 3885 009c 1D00001A 		bne	.L382
 3886              	.L379:
 3887              		.loc 4 671 0
 3888 00a0 14309FE5 		ldr	r3, .L385
 3889 00a4 B040C3E1 		strh	r4, [r3, #0]	@ movhi
 3890              		.loc 4 673 0
 3891 00a8 FEFFFFEB 		bl	refresh_display
 3892              	.LVL151:
 3893              		.loc 4 675 0
 3894 00ac 0400A0E1 		mov	r0, r4
 3895 00b0 FEFFFFEB 		bl	request_ul_levels
 3896              		.loc 4 678 0
 3897 00b4 0000A0E3 		mov	r0, #0
 3898 00b8 1080BDE8 		ldmfd	sp!, {r4, pc}
 3899              	.L386:
 3900              		.align	2
 3901              	.L385:
 3902 00bc 32000000 		.word	ul_arfcn
 3903 00c0 30000000 		.word	arfcn
 3904 00c4 00000000 		.word	freq
 3905              	.LFE116:
 3907              		.section	.text.toggle_up_down,"ax",%progbits
 3908              		.align	2
 3910              	toggle_up_down:
 3911              	.LFB118:
 3912              		.loc 4 687 0
 3913              		@ args = 0, pretend = 0, frame = 0
 3914              		@ frame_needed = 0, uses_anonymous_args = 0
 3915              	.LVL152:
 3916 0000 04E02DE5 		str	lr, [sp, #-4]!
 3917              	.LCFI16:
 3918              		.loc 4 688 0
 3919 0004 40209FE5 		ldr	r2, .L392
 3920 0008 003092E5 		ldr	r3, [r2, #0]
 3921 000c 013073E2 		rsbs	r3, r3, #1
 3922 0010 0030A033 		movcc	r3, #0
 3923 0014 003082E5 		str	r3, [r2, #0]
 3924              		.loc 4 689 0
 3925 0018 FEFFFFEB 		bl	refresh_display
 3926              		.loc 4 691 0
 3927 001c 2C309FE5 		ldr	r3, .L392+4
 3928 0020 003093E5 		ldr	r3, [r3, #0]
 3929 0024 030053E3 		cmp	r3, #3
 3930 0028 04F09D14 		ldrne	pc, [sp], #4
 3931 002c 20309FE5 		ldr	r3, .L392+8
 3932 0030 003093E5 		ldr	r3, [r3, #0]
 3933 0034 000053E3 		cmp	r3, #0
 3934 0038 04F09DA4 		ldrge	pc, [sp], #4
 3935              		.loc 4 692 0
 3936 003c 14309FE5 		ldr	r3, .L392+12
 3937 0040 B000D3E1 		ldrh	r0, [r3, #0]
 3938              		.loc 4 693 0
 3939 0044 04E09DE4 		ldr	lr, [sp], #4
 3940              		.loc 4 692 0
 3941 0048 FEFFFFEA 		b	request_ul_levels
 3942              	.L393:
 3943              		.align	2
 3944              	.L392:
 3945 004c 00000000 		.word	uplink
 3946 0050 00000000 		.word	mode
 3947 0054 00000000 		.word	cursor
 3948 0058 32000000 		.word	ul_arfcn
 3949              	.LFE118:
 3951              		.section	.text.exit_arfcn,"ax",%progbits
 3952              		.align	2
 3954              	exit_arfcn:
 3955              	.LFB113:
 3956              		.loc 4 525 0
 3957              		@ args = 0, pretend = 0, frame = 0
 3958              		@ frame_needed = 0, uses_anonymous_args = 0
 3959              		@ link register save eliminated.
 3960              	.LVL153:
 3961              		.loc 4 526 0
 3962 0000 0C309FE5 		ldr	r3, .L396
 3963 0004 002093E5 		ldr	r2, [r3, #0]
 3964 0008 08309FE5 		ldr	r3, .L396+4
 3965              		.loc 4 525 0
 3966              		@ lr needed for prologue
 3967              		.loc 4 526 0
 3968 000c 002083E5 		str	r2, [r3, #0]
 3969              		.loc 4 528 0
 3970              		.loc 4 527 0
 3971 0010 FEFFFFEA 		b	refresh_display
 3972              	.L397:
 3973              		.align	2
 3974              	.L396:
 3975 0014 00000000 		.word	last_mode
 3976 0018 00000000 		.word	mode
 3977              	.LFE113:
 3979              		.section	.text.enter_arfcn,"ax",%progbits
 3980              		.align	2
 3982              	enter_arfcn:
 3983              	.LFB114:
 3984              		.loc 4 531 0
 3985              		@ args = 0, pretend = 0, frame = 0
 3986              		@ frame_needed = 0, uses_anonymous_args = 0
 3987              	.LVL154:
 3988 0000 04E02DE5 		str	lr, [sp, #-4]!
 3989              	.LCFI17:
 3990              		.loc 4 533 0
 3991 0004 60C19FE5 		ldr	ip, .L425
 3992 0008 00209CE5 		ldr	r2, [ip, #0]
 3993 000c 020052E3 		cmp	r2, #2
 3994 0010 1000000A 		beq	.L399
 3995              		.loc 4 534 0
 3996 0014 54319FE5 		ldr	r3, .L425+4
 3997              		.loc 4 536 0
 3998 0018 54119FE5 		ldr	r1, .L425+8
 3999              		.loc 4 534 0
 4000 001c 002083E5 		str	r2, [r3, #0]
 4001              		.loc 4 535 0
 4002 0020 0230A0E3 		mov	r3, #2
 4003 0024 00308CE5 		str	r3, [ip, #0]
 4004              		.loc 4 537 0
 4005 0028 0030A0E3 		mov	r3, #0
 4006 002c 0130C1E5 		strb	r3, [r1, #1]
 4007              		.loc 4 538 0
 4008 0030 40319FE5 		ldr	r3, .L425+12
 4009              		.loc 4 536 0
 4010 0034 300080E2 		add	r0, r0, #48
 4011              	.LVL155:
 4012              		.loc 4 538 0
 4013 0038 0120A0E3 		mov	r2, #1
 4014 003c 002083E5 		str	r2, [r3, #0]
 4015              		.loc 4 536 0
 4016 0040 0000C1E5 		strb	r0, [r1, #0]
 4017 0044 1D0000EA 		b	.L424
 4018              	.LVL156:
 4019              	.L399:
 4020              		.loc 4 543 0
 4021 0048 0D0050E3 		cmp	r0, #13
 4022 004c 1F00001A 		bne	.L401
 4023              		.loc 4 545 0
 4024 0050 20019FE5 		ldr	r0, .L425+12
 4025              	.LVL157:
 4026 0054 001090E5 		ldr	r1, [r0, #0]
 4027 0058 000051E3 		cmp	r1, #0
 4028 005c 1800001A 		bne	.L403
 4029              		.loc 4 597 0
 4030 0060 04E09DE4 		ldr	lr, [sp], #4
 4031              		.loc 4 546 0
 4032 0064 FEFFFFEA 		b	exit_arfcn
 4033              	.L403:
 4034              		.loc 4 551 0
 4035 0068 04319FE5 		ldr	r3, .L425+8
 4036              		.loc 4 550 0
 4037 006c 011041E2 		sub	r1, r1, #1
 4038              		.loc 4 551 0
 4039 0070 0020A0E3 		mov	r2, #0
 4040 0074 0120C3E7 		strb	r2, [r3, r1]
 4041              		.loc 4 550 0
 4042 0078 001080E5 		str	r1, [r0, #0]
 4043              	.LVL158:
 4044              	.L424:
 4045              		.loc 4 597 0
 4046 007c 04E09DE4 		ldr	lr, [sp], #4
 4047              		.loc 4 552 0
 4048 0080 FEFFFFEA 		b	refresh_display
 4049              	.LVL159:
 4050              	.L401:
 4051              		.loc 4 556 0
 4052 0084 0E0050E3 		cmp	r0, #14
 4053 0088 E8E09FE5 		ldr	lr, .L425+12
 4054 008c 4E00001A 		bne	.L405
 4055              	.LBB317:
 4056              		.loc 4 562 0
 4057 0090 00E09EE5 		ldr	lr, [lr, #0]
 4058 0094 00005EE3 		cmp	lr, #0
 4059 0098 04F09D04 		ldreq	pc, [sp], #4
 4060              		.loc 4 563 0
 4061 009c 0010A0E3 		mov	r1, #0
 4062              	.LVL160:
 4063 00a0 CC009FE5 		ldr	r0, .L425+8
 4064              	.LVL161:
 4065 00a4 0120A0E1 		mov	r2, r1
 4066              	.LVL162:
 4067 00a8 2C0000EA 		b	.L409
 4068              	.L410:
 4069              		.loc 4 566 0
 4070 00ac 013050E5 		ldrb	r3, [r0, #-1]	@ zero_extendqisi2
 4071 00b0 03308CE0 		add	r3, ip, r3
 4072 00b4 301043E2 		sub	r1, r3, #48
 4073              	.L409:
 4074 00b8 8130A0E1 		mov	r3, r1, asl #1
 4075              		.loc 4 565 0
 4076 00bc 0E0052E1 		cmp	r2, lr
 4077              		.loc 4 566 0
 4078 00c0 81C183E0 		add	ip, r3, r1, asl #3
 4079              		.loc 4 565 0
 4080 00c4 012082E2 		add	r2, r2, #1
 4081 00c8 010080E2 		add	r0, r0, #1
 4082 00cc 290000BA 		blt	.L410
 4083 00d0 A4009FE5 		ldr	r0, .L425+16
 4084 00d4 3F0000EA 		b	.L412
 4085              	.LVL163:
 4086              	.L413:
 4087              		.loc 4 571 0
 4088 00d8 003090E5 		ldr	r3, [r0, #0]
 4089 00dc 020053E1 		cmp	r3, r2
 4090 00e0 3A0000AA 		bge	.L414
 4091              		.loc 4 572 0
 4092 00e4 030051E1 		cmp	r1, r3
 4093 00e8 3E0000BA 		blt	.L416
 4094 00ec 3C0000EA 		b	.L423
 4095              	.L414:
 4096              		.loc 4 575 0
 4097 00f0 030051E1 		cmp	r1, r3
 4098 00f4 430000AA 		bge	.L418
 4099              	.L423:
 4100 00f8 020051E1 		cmp	r1, r2
 4101 00fc 430000DA 		ble	.L418
 4102              	.L416:
 4103 0100 180080E2 		add	r0, r0, #24
 4104              	.LVL164:
 4105              	.L412:
 4106              		.loc 4 569 0
 4107 0104 042090E5 		ldr	r2, [r0, #4]
 4108              	.LVL165:
 4109 0108 000052E3 		cmp	r2, #0
 4110 010c 3400001A 		bne	.L413
 4111 0110 04F09DE4 		ldr	pc, [sp], #4
 4112              	.L418:
 4113              		.loc 4 581 0
 4114 0114 010B51E3 		cmp	r1, #1024
 4115 0118 04F09DA4 		ldrge	pc, [sp], #4
 4116              		.loc 4 585 0
 4117 011c 4C309FE5 		ldr	r3, .L425+4
 4118 0120 002093E5 		ldr	r2, [r3, #0]
 4119              		.loc 4 583 0
 4120 0124 54309FE5 		ldr	r3, .L425+20
 4121 0128 B010C3E1 		strh	r1, [r3, #0]	@ movhi
 4122              		.loc 4 584 0
 4123 012c 50309FE5 		ldr	r3, .L425+24
 4124 0130 000083E5 		str	r0, [r3, #0]
 4125              		.loc 4 585 0
 4126 0134 30309FE5 		ldr	r3, .L425
 4127 0138 002083E5 		str	r2, [r3, #0]
 4128 013c 1D0000EA 		b	.L424
 4129              	.LVL166:
 4130              	.L405:
 4131              	.LBE317:
 4132              		.loc 4 590 0
 4133 0140 00C09EE5 		ldr	ip, [lr, #0]
 4134 0144 04005CE3 		cmp	ip, #4
 4135 0148 04F09D04 		ldreq	pc, [sp], #4
 4136              		.loc 4 593 0
 4137 014c 20209FE5 		ldr	r2, .L425+8
 4138 0150 303080E2 		add	r3, r0, #48
 4139              		.loc 4 594 0
 4140 0154 01108CE2 		add	r1, ip, #1
 4141              		.loc 4 593 0
 4142 0158 0C30C2E7 		strb	r3, [r2, ip]
 4143              		.loc 4 595 0
 4144 015c 0030A0E3 		mov	r3, #0
 4145 0160 0130C2E7 		strb	r3, [r2, r1]
 4146              		.loc 4 594 0
 4147 0164 00108EE5 		str	r1, [lr, #0]
 4148 0168 1D0000EA 		b	.L424
 4149              	.L426:
 4150              		.align	2
 4151              	.L425:
 4152 016c 00000000 		.word	mode
 4153 0170 00000000 		.word	last_mode
 4154 0174 00000000 		.word	input
 4155 0178 00000000 		.word	cursor
 4156 017c 14000000 		.word	bands
 4157 0180 30000000 		.word	arfcn
 4158 0184 00000000 		.word	band
 4159              	.LFE114:
 4161              		.section	.text.exit_rach,"ax",%progbits
 4162              		.align	2
 4164              	exit_rach:
 4165              	.LFB133:
 4166              		.loc 4 1231 0
 4167              		@ args = 0, pretend = 0, frame = 0
 4168              		@ frame_needed = 0, uses_anonymous_args = 0
 4169              	.LVL167:
 4170 0000 04E02DE5 		str	lr, [sp, #-4]!
 4171              	.LCFI18:
 4172              		.loc 4 1234 0
 4173 0004 24309FE5 		ldr	r3, .L429
 4174 0008 B000D3E1 		ldrh	r0, [r3, #0]
 4175              		.loc 4 1232 0
 4176 000c 20309FE5 		ldr	r3, .L429+4
 4177 0010 0020A0E3 		mov	r2, #0
 4178 0014 002083E5 		str	r2, [r3, #0]
 4179              		.loc 4 1234 0
 4180 0018 FEFFFFEB 		bl	request_ul_levels
 4181              		.loc 4 1236 0
 4182 001c 14309FE5 		ldr	r3, .L429+8
 4183 0020 0320A0E3 		mov	r2, #3
 4184 0024 002083E5 		str	r2, [r3, #0]
 4185              		.loc 4 1238 0
 4186 0028 04E09DE4 		ldr	lr, [sp], #4
 4187              		.loc 4 1237 0
 4188 002c FEFFFFEA 		b	refresh_display
 4189              	.L430:
 4190              		.align	2
 4191              	.L429:
 4192 0030 32000000 		.word	ul_arfcn
 4193 0034 00000000 		.word	rach
 4194 0038 00000000 		.word	mode
 4195              	.LFE133:
 4197              		.section	.text.toggle_spectrum,"ax",%progbits
 4198              		.align	2
 4200              	toggle_spectrum:
 4201              	.LFB119:
 4202              		.loc 4 696 0
 4203              		@ args = 0, pretend = 0, frame = 0
 4204              		@ frame_needed = 0, uses_anonymous_args = 0
 4205              	.LVL168:
 4206 0000 04E02DE5 		str	lr, [sp, #-4]!
 4207              	.LCFI19:
 4208              		.loc 4 697 0
 4209 0004 48109FE5 		ldr	r1, .L437
 4210 0008 002091E5 		ldr	r2, [r1, #0]
 4211 000c 000052E3 		cmp	r2, #0
 4212              		.loc 4 698 0
 4213 0010 0130A003 		moveq	r3, #1
 4214 0014 00308105 		streq	r3, [r1, #0]
 4215              		.loc 4 699 0
 4216 0018 38309F05 		ldreq	r3, .L437+4
 4217 001c 00208305 		streq	r2, [r3, #0]
 4218 0020 0C00000A 		beq	.L434
 4219              	.L432:
 4220              		.loc 4 700 0
 4221 0024 010052E3 		cmp	r2, #1
 4222              		.loc 4 702 0
 4223 0028 28309F05 		ldreq	r3, .L437+4
 4224              		.loc 4 701 0
 4225 002c 0020A0E3 		mov	r2, #0
 4226              		.loc 4 702 0
 4227 0030 00208305 		streq	r2, [r3, #0]
 4228              		.loc 4 701 0
 4229 0034 00208105 		streq	r2, [r1, #0]
 4230              	.L434:
 4231              		.loc 4 704 0
 4232 0038 FEFFFFEB 		bl	l1s_reset
 4233              		.loc 4 705 0
 4234 003c FEFFFFEB 		bl	l1s_reset_hw
 4235              		.loc 4 706 0
 4236 0040 14309FE5 		ldr	r3, .L437+8
 4237 0044 0020A0E3 		mov	r2, #0
 4238 0048 002083E5 		str	r2, [r3, #0]
 4239              		.loc 4 708 0
 4240 004c 04E09DE4 		ldr	lr, [sp], #4
 4241              		.loc 4 707 0
 4242 0050 FEFFFFEA 		b	refresh_display
 4243              	.L438:
 4244              		.align	2
 4245              	.L437:
 4246 0054 00000000 		.word	mode
 4247 0058 00000000 		.word	pm_mode
 4248 005c 00000000 		.word	pm_count
 4249              	.LFE119:
 4251              		.section	.rodata.str1.4
 4252 02cf 00       		.align	2
 4253              	.LC57:
 4254 02d0 0A0A4F73 		.ascii	"\012\012OsmocomBB Monitor Tool (revision osmocon_v0"
 4254      6D6F636F 
 4254      6D424220 
 4254      4D6F6E69 
 4254      746F7220 
 4255 02fd 2E302E30 		.ascii	".0.0-1748-g46188c72-modified)\012\000"
 4255      2D313734 
 4255      382D6734 
 4255      36313838 
 4255      6337322D 
 4256              		.align	2
 4257              	.LC58:
 4258 031c 74727969 		.ascii	"trying\000"
 4258      6E6700
 4259 0323 00       		.align	2
 4260              	.LC59:
 4261 0324 63636368 		.ascii	"ccch_mode=%d\012\000"
 4261      5F6D6F64 
 4261      653D2564 
 4261      0A00
 4262              		.section	.text.main,"ax",%progbits
 4263              		.align	2
 4264              		.global	main
 4266              	main:
 4267              	.LFB145:
1505:apps/rssi/main.c **** }
1506:apps/rssi/main.c **** 
1507:apps/rssi/main.c **** int main(void)
1508:apps/rssi/main.c **** {
 4268              		.loc 4 1508 0
 4269              		@ args = 0, pretend = 0, frame = 4
 4270              		@ frame_needed = 0, uses_anonymous_args = 0
 4271              	.LVL169:
 4272 0000 F04F2DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 4273              	.LCFI20:
1509:apps/rssi/main.c **** 	board_init(1);
 4274              		.loc 4 1509 0
 4275 0004 0100A0E3 		mov	r0, #1
 4276              		.loc 4 1508 0
 4277 0008 08D04DE2 		sub	sp, sp, #8
 4278              	.LCFI21:
 4279              	.LVL170:
1510:apps/rssi/main.c **** 
1511:apps/rssi/main.c **** 	puts("\n\nOsmocomBB Monitor Tool (revision " GIT_REVISION ")\n");
1512:apps/rssi/main.c **** 	puts(hr);
 4280              		.loc 4 1512 0
 4281 000c 044C9FE5 		ldr	r4, .L613
 4282              		.loc 4 1509 0
 4283 0010 FEFFFFEB 		bl	board_init
 4284              		.loc 4 1511 0
 4285 0014 000C9FE5 		ldr	r0, .L613+4
 4286 0018 FEFFFFEB 		bl	puts
 4287              		.loc 4 1512 0
 4288 001c 000094E5 		ldr	r0, [r4, #0]
 4289 0020 FEFFFFEB 		bl	puts
1513:apps/rssi/main.c **** 
1514:apps/rssi/main.c **** 	/* Dump device identification */
1515:apps/rssi/main.c **** 	dump_dev_id();
 4290              		.loc 4 1515 0
 4291 0024 FEFFFFEB 		bl	dump_dev_id
1516:apps/rssi/main.c **** 	puts(hr);
 4292              		.loc 4 1516 0
 4293 0028 000094E5 		ldr	r0, [r4, #0]
 4294 002c FEFFFFEB 		bl	puts
1517:apps/rssi/main.c **** 
1518:apps/rssi/main.c **** 	/* Dump clock config before PLL set */
1519:apps/rssi/main.c **** 	calypso_clk_dump();
 4295              		.loc 4 1519 0
 4296 0030 FEFFFFEB 		bl	calypso_clk_dump
1520:apps/rssi/main.c **** 	puts(hr);
 4297              		.loc 4 1520 0
 4298 0034 000094E5 		ldr	r0, [r4, #0]
 4299 0038 FEFFFFEB 		bl	puts
1521:apps/rssi/main.c **** 
1522:apps/rssi/main.c **** 	keypad_set_handler(&key_handler);
 4300              		.loc 4 1522 0
 4301 003c DC0B9FE5 		ldr	r0, .L613+8
 4302 0040 FEFFFFEB 		bl	keypad_set_handler
1523:apps/rssi/main.c **** 
1524:apps/rssi/main.c **** 	/* Dump clock config after PLL set */
1525:apps/rssi/main.c **** 	calypso_clk_dump();
 4303              		.loc 4 1525 0
 4304 0044 FEFFFFEB 		bl	calypso_clk_dump
1526:apps/rssi/main.c **** 	puts(hr);
 4305              		.loc 4 1526 0
 4306 0048 000094E5 		ldr	r0, [r4, #0]
 4307 004c FEFFFFEB 		bl	puts
1527:apps/rssi/main.c **** 
1528:apps/rssi/main.c **** 	sercomm_register_rx_cb(SC_DLCI_CONSOLE, console_rx_cb);
 4308              		.loc 4 1528 0
 4309 0050 CC1B9FE5 		ldr	r1, .L613+12
 4310 0054 0A00A0E3 		mov	r0, #10
 4311 0058 FEFFFFEB 		bl	sercomm_register_rx_cb
1529:apps/rssi/main.c **** 	sercomm_register_rx_cb(SC_DLCI_L1A_L23, l1a_l23_rx_cb);
 4312              		.loc 4 1529 0
 4313 005c C41B9FE5 		ldr	r1, .L613+16
 4314 0060 0500A0E3 		mov	r0, #5
 4315 0064 FEFFFFEB 		bl	sercomm_register_rx_cb
1530:apps/rssi/main.c **** 
1531:apps/rssi/main.c **** 	layer1_init();
 4316              		.loc 4 1531 0
 4317 0068 FEFFFFEB 		bl	layer1_init
1532:apps/rssi/main.c **** 	l1a_l23_tx_cb = l1a_l23_tx;
 4318              		.loc 4 1532 0
 4319 006c B83B9FE5 		ldr	r3, .L613+20
 4320 0070 B82B9FE5 		ldr	r2, .L613+24
1533:apps/rssi/main.c **** 
1534:apps/rssi/main.c **** //	display_unset_attr(DISP_ATTR_INVERT);
1535:apps/rssi/main.c **** 
1536:apps/rssi/main.c **** 	tpu_frame_irq_en(1, 1);
 4321              		.loc 4 1536 0
 4322 0074 0100A0E3 		mov	r0, #1
 4323              		.loc 4 1532 0
 4324 0078 002083E5 		str	r2, [r3, #0]
 4325              		.loc 4 1536 0
 4326 007c 0010A0E1 		mov	r1, r0
 4327 0080 FEFFFFEB 		bl	tpu_frame_irq_en
1537:apps/rssi/main.c **** 
1538:apps/rssi/main.c **** 	buzzer_mode_pwt(1);
 4328              		.loc 4 1538 0
 4329 0084 0100A0E3 		mov	r0, #1
 4330 0088 FEFFFFEB 		bl	buzzer_mode_pwt
1539:apps/rssi/main.c **** 	buzzer_volume(0);
 4331              		.loc 4 1539 0
 4332 008c 0000A0E3 		mov	r0, #0
 4333 0090 FEFFFFEB 		bl	buzzer_volume
1540:apps/rssi/main.c **** 
1541:apps/rssi/main.c **** 	memset(pm_spectrum, 0, sizeof(pm_spectrum));
 4334              		.loc 4 1541 0
 4335 0094 0010A0E3 		mov	r1, #0
 4336 0098 012BA0E3 		mov	r2, #1024
 4337 009c 900B9FE5 		ldr	r0, .L613+28
 4338 00a0 FEFFFFEB 		bl	memset
1542:apps/rssi/main.c **** 	memset(ul_max, 0, sizeof(ul_max));
 4339              		.loc 4 1542 0
 4340 00a4 8C0B9FE5 		ldr	r0, .L613+32
 4341 00a8 0010A0E3 		mov	r1, #0
 4342 00ac 0820A0E3 		mov	r2, #8
 4343 00b0 FEFFFFEB 		bl	memset
1543:apps/rssi/main.c **** 
1544:apps/rssi/main.c **** 	/* inc 0 to 1 and refresh */
1545:apps/rssi/main.c **** 	inc_dec_arfcn(1);
 4344              		.loc 4 1545 0
 4345 00b4 0100A0E3 		mov	r0, #1
 4346 00b8 FEFFFFEB 		bl	inc_dec_arfcn
 4347              	.LVL171:
 4348              	.L612:
1546:apps/rssi/main.c **** 
1547:apps/rssi/main.c **** 	while (1) {
1548:apps/rssi/main.c **** 		l1a_compl_execute();
 4349              		.loc 4 1548 0
 4350 00bc FEFFFFEB 		bl	l1a_compl_execute
 4351              	.LVL172:
1549:apps/rssi/main.c **** 		osmo_timers_update();
 4352              		.loc 4 1549 0
 4353 00c0 FEFFFFEB 		bl	osmo_timers_update
 4354              	.LBB318:
 4355              	.LBB319:
 4356              		.loc 4 773 0
 4357 00c4 703B9FE5 		ldr	r3, .L613+36
 4358 00c8 003093E5 		ldr	r3, [r3, #0]
 4359 00cc 000053E3 		cmp	r3, #0
 4360 00d0 4600000A 		beq	.L441
 4361              	.LBB320:
 4362              		.loc 4 774 0
 4363 00d4 640B9FE5 		ldr	r0, .L613+40
 4364              		.loc 4 775 0
 4365 00d8 64CB9FE5 		ldr	ip, .L613+44
 4366 00dc 64EB9FE5 		ldr	lr, .L613+48
 4367              		.loc 4 774 0
 4368 00e0 003090E5 		ldr	r3, [r0, #0]
 4369              		.loc 4 775 0
 4370 00e4 00209CE5 		ldr	r2, [ip, #0]
 4371 00e8 00109EE5 		ldr	r1, [lr, #0]
 4372 00ec 033062E0 		rsb	r3, r2, r3
 4373 00f0 010053E1 		cmp	r3, r1
 4374 00f4 4600009A 		bls	.L441
 4375              		.loc 4 779 0
 4376 00f8 4C3B9FE5 		ldr	r3, .L613+52
 4377 00fc 001093E5 		ldr	r1, [r3, #0]
 4378 0100 113041E2 		sub	r3, r1, #17
 4379 0104 010053E3 		cmp	r3, #1
 4380              		.loc 4 777 0
 4381 0108 0A30A0E3 		mov	r3, #10
 4382              		.loc 4 776 0
 4383 010c 002090E5 		ldr	r2, [r0, #0]
 4384              		.loc 4 777 0
 4385 0110 00308EE5 		str	r3, [lr, #0]
 4386              		.loc 4 781 0
 4387 0114 343B9F95 		ldrls	r3, .L613+56
 4388              		.loc 4 776 0
 4389 0118 00208CE5 		str	r2, [ip, #0]
 4390              		.loc 4 781 0
 4391 011c 00108395 		strls	r1, [r3, #0]
 4392              	.L441:
 4393              	.LBE320:
 4394              		.loc 4 785 0
 4395 0120 283B9FE5 		ldr	r3, .L613+56
 4396 0124 000093E5 		ldr	r0, [r3, #0]
 4397 0128 FF0050E3 		cmp	r0, #255
 4398 012c 8901000A 		beq	.L445
 4399              		.loc 4 789 0
 4400 0130 1C3B9FE5 		ldr	r3, .L613+60
 4401 0134 003093E5 		ldr	r3, [r3, #0]
 4402 0138 000053E3 		cmp	r3, #0
 4403 013c 8901001A 		bne	.L445
 4404              		.loc 4 792 0
 4405 0140 140050E3 		cmp	r0, #20
 4406 0144 00F19F97 		ldrls	pc, [pc, r0, asl #2]
 4407 0148 860100EA 		b	.L448
 4408              		.p2align 2
 4409              	.L460:
 4410 014c A0010000 		.word	.L449
 4411 0150 A0010000 		.word	.L449
 4412 0154 A0010000 		.word	.L449
 4413 0158 A0010000 		.word	.L449
 4414 015c A0010000 		.word	.L449
 4415 0160 A0010000 		.word	.L449
 4416 0164 A0010000 		.word	.L449
 4417 0168 A0010000 		.word	.L449
 4418 016c A0010000 		.word	.L449
 4419 0170 A0010000 		.word	.L449
 4420 0174 0C060000 		.word	.L450
 4421 0178 20060000 		.word	.L448
 4422 017c 9C050000 		.word	.L451
 4423 0180 94020000 		.word	.L452
 4424 0184 E4020000 		.word	.L453
 4425 0188 B4010000 		.word	.L454
 4426 018c E0010000 		.word	.L455
 4427 0190 54020000 		.word	.L456
 4428 0194 20020000 		.word	.L457
 4429 0198 20030000 		.word	.L458
 4430 019c C8050000 		.word	.L459
 4431              	.L449:
 4432              		.loc 4 803 0
 4433 01a0 B03A9FE5 		ldr	r3, .L613+64
 4434 01a4 003093E5 		ldr	r3, [r3, #0]
 4435 01a8 020053E3 		cmp	r3, #2
 4436 01ac 8601008A 		bhi	.L448
 4437 01b0 B00000EA 		b	.L598
 4438              	.L454:
 4439              		.loc 4 807 0
 4440 01b4 9C3A9FE5 		ldr	r3, .L613+64
 4441 01b8 000093E5 		ldr	r0, [r3, #0]
 4442 01bc 000050E3 		cmp	r0, #0
 4443              		.loc 4 808 0
 4444 01c0 01008002 		addeq	r0, r0, #1
 4445              		.loc 4 807 0
 4446 01c4 7A00000A 		beq	.L600
 4447              		.loc 4 809 0
 4448 01c8 030050E3 		cmp	r0, #3
 4449              		.loc 4 810 0
 4450 01cc 0000A003 		moveq	r0, #0
 4451              		.loc 4 809 0
 4452 01d0 7F00000A 		beq	.L601
 4453              		.loc 4 811 0
 4454 01d4 010050E3 		cmp	r0, #1
 4455 01d8 8601001A 		bne	.L448
 4456 01dc 840000EA 		b	.L602
 4457              	.L455:
 4458              		.loc 4 815 0
 4459 01e0 703A9FE5 		ldr	r3, .L613+64
 4460 01e4 000093E5 		ldr	r0, [r3, #0]
 4461 01e8 000050E3 		cmp	r0, #0
 4462 01ec 7C00001A 		bne	.L467
 4463              	.L600:
 4464              		.loc 4 816 0
 4465 01f0 FEFFFFEB 		bl	tone_inc_dec
 4466 01f4 860100EA 		b	.L448
 4467              	.L467:
 4468              		.loc 4 817 0
 4469 01f8 030050E3 		cmp	r0, #3
 4470 01fc 8100001A 		bne	.L469
 4471              		.loc 4 818 0
 4472 0200 0100A0E3 		mov	r0, #1
 4473              	.L601:
 4474 0204 FEFFFFEB 		bl	inc_dec_neighbour
 4475 0208 860100EA 		b	.L448
 4476              	.L469:
 4477              		.loc 4 819 0
 4478 020c 010050E3 		cmp	r0, #1
 4479 0210 8601001A 		bne	.L448
 4480              		.loc 4 820 0
 4481 0214 0000A0E3 		mov	r0, #0
 4482              	.L602:
 4483 0218 FEFFFFEB 		bl	inc_dec_spectrum
 4484 021c 860100EA 		b	.L448
 4485              	.L457:
 4486              		.loc 4 823 0
 4487 0220 303A9FE5 		ldr	r3, .L613+64
 4488 0224 003093E5 		ldr	r3, [r3, #0]
 4489 0228 010053E3 		cmp	r3, #1
 4490              		.loc 4 824 0
 4491 022c 0100A093 		movls	r0, #1
 4492              		.loc 4 823 0
 4493 0230 9800009A 		bls	.L603
 4494              		.loc 4 825 0
 4495 0234 030053E3 		cmp	r3, #3
 4496 0238 8601001A 		bne	.L448
 4497 023c 183A9FE5 		ldr	r3, .L613+68
 4498 0240 003093E5 		ldr	r3, [r3, #0]
 4499 0244 000053E3 		cmp	r3, #0
 4500              		.loc 4 826 0
 4501 0248 0100A0B3 		movlt	r0, #1
 4502              		.loc 4 825 0
 4503 024c A10000BA 		blt	.L604
 4504 0250 860100EA 		b	.L448
 4505              	.L456:
 4506              		.loc 4 829 0
 4507 0254 FC399FE5 		ldr	r3, .L613+64
 4508 0258 003093E5 		ldr	r3, [r3, #0]
 4509 025c 010053E3 		cmp	r3, #1
 4510 0260 9A00008A 		bhi	.L476
 4511              		.loc 4 830 0
 4512 0264 0000A0E3 		mov	r0, #0
 4513              	.L603:
 4514 0268 FEFFFFEB 		bl	inc_dec_arfcn
 4515 026c 860100EA 		b	.L448
 4516              	.L476:
 4517              		.loc 4 831 0
 4518 0270 030053E3 		cmp	r3, #3
 4519 0274 8601001A 		bne	.L448
 4520 0278 DC399FE5 		ldr	r3, .L613+68
 4521 027c 003093E5 		ldr	r3, [r3, #0]
 4522 0280 000053E3 		cmp	r3, #0
 4523 0284 860100AA 		bge	.L448
 4524              		.loc 4 832 0
 4525 0288 0000A0E3 		mov	r0, #0
 4526              	.L604:
 4527 028c FEFFFFEB 		bl	inc_dec_ul_arfcn
 4528 0290 860100EA 		b	.L448
 4529              	.L452:
 4530              		.loc 4 835 0
 4531 0294 BC399FE5 		ldr	r3, .L613+64
 4532 0298 003093E5 		ldr	r3, [r3, #0]
 4533 029c 010053E3 		cmp	r3, #1
 4534 02a0 AD00008A 		bhi	.L480
 4535              	.LBB321:
 4536              	.LBB322:
 4537              		.loc 4 682 0
 4538 02a4 B4299FE5 		ldr	r2, .L613+72
 4539 02a8 003092E5 		ldr	r3, [r2, #0]
 4540 02ac 013073E2 		rsbs	r3, r3, #1
 4541 02b0 0030A033 		movcc	r3, #0
 4542 02b4 003082E5 		str	r3, [r2, #0]
 4543 02b8 6E0100EA 		b	.L605
 4544              	.L480:
 4545              	.LBE322:
 4546              	.LBE321:
 4547              		.loc 4 837 0
 4548 02bc 020053E3 		cmp	r3, #2
 4549 02c0 B200001A 		bne	.L482
 4550              		.loc 4 838 0
 4551 02c4 0D00A0E3 		mov	r0, #13
 4552              	.L598:
 4553 02c8 FEFFFFEB 		bl	enter_arfcn
 4554 02cc 860100EA 		b	.L448
 4555              	.L482:
 4556              		.loc 4 839 0
 4557 02d0 030053E3 		cmp	r3, #3
 4558 02d4 7801000A 		beq	.L606
 4559              		.loc 4 841 0
 4560 02d8 040053E3 		cmp	r3, #4
 4561 02dc 8601001A 		bne	.L448
 4562 02e0 7C0100EA 		b	.L607
 4563              	.L453:
 4564              		.loc 4 845 0
 4565 02e4 6C399FE5 		ldr	r3, .L613+64
 4566 02e8 003093E5 		ldr	r3, [r3, #0]
 4567 02ec 010053E3 		cmp	r3, #1
 4568 02f0 C400009A 		bls	.L608
 4569              		.loc 4 847 0
 4570 02f4 020053E3 		cmp	r3, #2
 4571              		.loc 4 848 0
 4572 02f8 0E00A003 		moveq	r0, #14
 4573              		.loc 4 847 0
 4574 02fc B000000A 		beq	.L598
 4575              		.loc 4 849 0
 4576 0300 030053E3 		cmp	r3, #3
 4577 0304 8601001A 		bne	.L448
 4578 0308 4C399FE5 		ldr	r3, .L613+68
 4579 030c 003093E5 		ldr	r3, [r3, #0]
 4580 0310 000053E3 		cmp	r3, #0
 4581 0314 860100AA 		bge	.L448
 4582              	.L608:
 4583              		.loc 4 850 0
 4584 0318 FEFFFFEB 		bl	toggle_up_down
 4585 031c 860100EA 		b	.L448
 4586              	.L458:
 4587              		.loc 4 853 0
 4588 0320 30B99FE5 		ldr	fp, .L613+64
 4589 0324 00309BE5 		ldr	r3, [fp, #0]
 4590 0328 010053E3 		cmp	r3, #1
 4591 032c 2C01008A 		bhi	.L493
 4592              	.LBB323:
 4593              	.LBB324:
 4594              		.loc 4 992 0
 4595 0330 0100A0E3 		mov	r0, #1
 4596 0334 FEFFFFEB 		bl	l1ctl_msgb_alloc
 4597              		.loc 4 994 0
 4598 0338 24599FE5 		ldr	r5, .L613+76
 4599              		.loc 4 992 0
 4600 033c 0070A0E1 		mov	r7, r0
 4601              		.loc 4 994 0
 4602 0340 B040D5E1 		ldrh	r4, [r5, #0]
 4603              	.LVL173:
 4604              		.loc 4 996 0
 4605 0344 FEFFFFEB 		bl	l1s_reset
 4606              		.loc 4 997 0
 4607 0348 FEFFFFEB 		bl	l1s_reset_hw
 4608              		.loc 4 999 0
 4609 034c 14399FE5 		ldr	r3, .L613+80
 4610              		.loc 4 998 0
 4611 0350 0020A0E3 		mov	r2, #0
 4612              		.loc 4 999 0
 4613 0354 002083E5 		str	r2, [r3, #0]
 4614              		.loc 4 998 0
 4615 0358 0C399FE5 		ldr	r3, .L613+84
 4616              		.loc 4 1001 0
 4617 035c 0700A0E1 		mov	r0, r7
 4618              		.loc 4 998 0
 4619 0360 002083E5 		str	r2, [r3, #0]
 4620              		.loc 4 1001 0
 4621 0364 0D10A0E3 		mov	r1, #13
 4622 0368 FEFFFFEB 		bl	msgb_put
 4623              		.loc 4 1002 0
 4624 036c EC389FE5 		ldr	r3, .L613+72
 4625 0370 003093E5 		ldr	r3, [r3, #0]
 4626 0374 000053E3 		cmp	r3, #0
 4627              		.loc 4 1001 0
 4628 0378 0060A0E1 		mov	r6, r0
 4629              	.LVL174:
 4630              		.loc 4 1002 0
 4631 037c E400000A 		beq	.L495
 4632 0380 B020D5E1 		ldrh	r2, [r5, #0]
 4633 0384 020C52E3 		cmp	r2, #512
 4634 0388 E400003A 		bcc	.L495
 4635 038c DC389FE5 		ldr	r3, .L613+88
 4636 0390 030052E1 		cmp	r2, r3
 4637              		.loc 4 1003 0
 4638 0394 02498493 		orrls	r4, r4, #32768
 4639              	.L495:
 4640              		.loc 4 1004 0
 4641 0398 0400A0E1 		mov	r0, r4
 4642 039c FEFFFFEB 		bl	__fswab16
 4643 03a0 2034A0E1 		mov	r3, r0, lsr #8
 4644 03a4 0130C6E5 		strb	r3, [r6, #1]
 4645              		.loc 4 1005 0
 4646 03a8 6430A0E3 		mov	r3, #100
 4647 03ac 0330C6E5 		strb	r3, [r6, #3]
 4648              		.loc 4 1007 0
 4649 03b0 2730A0E3 		mov	r3, #39
 4650 03b4 0430C6E5 		strb	r3, [r6, #4]
 4651 03b8 1030A0E3 		mov	r3, #16
 4652 03bc 0530C6E5 		strb	r3, [r6, #5]
 4653              		.loc 4 1009 0
 4654 03c0 033083E0 		add	r3, r3, r3
 4655              		.loc 4 1004 0
 4656 03c4 0040A0E3 		mov	r4, #0
 4657              	.LVL175:
 4658              		.loc 4 1009 0
 4659 03c8 0350A0E3 		mov	r5, #3
 4660 03cc 0730C6E5 		strb	r3, [r6, #7]
 4661              		.loc 4 1012 0
 4662 03d0 0730A0E3 		mov	r3, #7
 4663 03d4 0930C6E5 		strb	r3, [r6, #9]
 4664              		.loc 4 1015 0
 4665 03d8 0710A0E1 		mov	r1, r7
 4666              		.loc 4 1004 0
 4667 03dc 0000C6E5 		strb	r0, [r6, #0]
 4668              		.loc 4 1014 0
 4669 03e0 0B40C6E5 		strb	r4, [r6, #11]
 4670              		.loc 4 1015 0
 4671 03e4 0500A0E3 		mov	r0, #5
 4672              		.loc 4 1005 0
 4673 03e8 0240C6E5 		strb	r4, [r6, #2]
 4674              		.loc 4 1009 0
 4675 03ec 0650C6E5 		strb	r5, [r6, #6]
 4676              		.loc 4 1011 0
 4677 03f0 0850C6E5 		strb	r5, [r6, #8]
 4678              		.loc 4 1013 0
 4679 03f4 0A40C6E5 		strb	r4, [r6, #10]
 4680              		.loc 4 1015 0
 4681 03f8 FEFFFFEB 		bl	l1a_l23_rx
 4682              		.loc 4 1017 0
 4683 03fc 54389FE5 		ldr	r3, .L613+64
 4684              		.loc 4 1018 0
 4685 0400 0410A0E1 		mov	r1, r4
 4686 0404 0820A0E3 		mov	r2, #8
 4687              		.loc 4 1017 0
 4688 0408 005083E5 		str	r5, [r3, #0]
 4689              		.loc 4 1018 0
 4690 040c 60089FE5 		ldr	r0, .L613+92
 4691 0410 FEFFFFEB 		bl	memset
 4692              		.loc 4 1021 0
 4693 0414 48C89FE5 		ldr	ip, .L613+76
 4694 0418 58389FE5 		ldr	r3, .L613+96
 4695 041c B0C0DCE1 		ldrh	ip, [ip, #0]
 4696 0420 B0C0C3E1 		strh	ip, [r3, #0]	@ movhi
 4697              		.loc 4 1027 0
 4698 0424 50389FE5 		ldr	r3, .L613+100
 4699 0428 0240C3E5 		strb	r4, [r3, #2]
 4700              		.loc 4 1029 0
 4701 042c 4C389FE5 		ldr	r3, .L613+104
 4702 0430 00C0E0E3 		mvn	ip, #0
 4703 0434 00C083E5 		str	ip, [r3, #0]
 4704              		.loc 4 1019 0
 4705 0438 44389FE5 		ldr	r3, .L613+108
 4706 043c B040C3E1 		strh	r4, [r3, #0]	@ movhi
 4707              		.loc 4 1020 0
 4708 0440 40389FE5 		ldr	r3, .L613+112
 4709 0444 B040C3E1 		strh	r4, [r3, #0]	@ movhi
 4710              		.loc 4 1022 0
 4711 0448 3C389FE5 		ldr	r3, .L613+116
 4712 044c 0240C3E5 		strb	r4, [r3, #2]
 4713              		.loc 4 1023 0
 4714 0450 38389FE5 		ldr	r3, .L613+120
 4715 0454 0240C3E5 		strb	r4, [r3, #2]
 4716              		.loc 4 1024 0
 4717 0458 34389FE5 		ldr	r3, .L613+124
 4718 045c 0240C3E5 		strb	r4, [r3, #2]
 4719              		.loc 4 1025 0
 4720 0460 30389FE5 		ldr	r3, .L613+128
 4721 0464 0240C3E5 		strb	r4, [r3, #2]
 4722              		.loc 4 1026 0
 4723 0468 2C389FE5 		ldr	r3, .L613+132
 4724 046c 0240C3E5 		strb	r4, [r3, #2]
 4725              		.loc 4 1028 0
 4726 0470 28389FE5 		ldr	r3, .L613+136
 4727 0474 B040C3E1 		strh	r4, [r3, #0]	@ movhi
 4728 0478 24389FE5 		ldr	r3, .L613+140
 4729 047c B040C3E1 		strh	r4, [r3, #0]	@ movhi
 4730 0480 20389FE5 		ldr	r3, .L613+144
 4731              		.loc 4 1030 0
 4732 0484 012BA0E3 		mov	r2, #1024
 4733              		.loc 4 1028 0
 4734 0488 B040C3E1 		strh	r4, [r3, #0]	@ movhi
 4735              		.loc 4 1030 0
 4736 048c 0410A0E1 		mov	r1, r4
 4737 0490 14089FE5 		ldr	r0, .L613+148
 4738 0494 FEFFFFEB 		bl	memset
 4739              		.loc 4 1032 0
 4740 0498 10389FE5 		ldr	r3, .L613+152
 4741              		.loc 4 1033 0
 4742 049c 10289FE5 		ldr	r2, .L613+156
 4743              		.loc 4 1032 0
 4744 04a0 004083E5 		str	r4, [r3, #0]
 4745              		.loc 4 1033 0
 4746 04a4 0C389FE5 		ldr	r3, .L613+160
 4747 04a8 002083E5 		str	r2, [r3, #0]
 4748              		.loc 4 1031 0
 4749 04ac A8379FE5 		ldr	r3, .L613+68
 4750 04b0 004083E5 		str	r4, [r3, #0]
 4751 04b4 6E0100EA 		b	.L605
 4752              	.LVL176:
 4753              	.L493:
 4754              	.LBE324:
 4755              	.LBE323:
 4756              		.loc 4 855 0
 4757 04b8 033043E2 		sub	r3, r3, #3
 4758 04bc 010053E3 		cmp	r3, #1
 4759 04c0 8601008A 		bhi	.L448
 4760              	.LBB325:
 4761              	.LBB326:
 4762              		.loc 4 1190 0
 4763 04c4 B4A79FE5 		ldr	sl, .L613+104
 4764 04c8 00309AE5 		ldr	r3, [sl, #0]
 4765 04cc 000053E3 		cmp	r3, #0
 4766 04d0 860100BA 		blt	.L448
 4767              		.loc 4 1193 0
 4768 04d4 E0979FE5 		ldr	r9, .L613+164
 4769 04d8 007099E5 		ldr	r7, [r9, #0]
 4770              	.LVL177:
 4771 04dc 000057E3 		cmp	r7, #0
 4772 04e0 8601001A 		bne	.L448
 4773              		.loc 4 1201 0
 4774 04e4 1A00A0E3 		mov	r0, #26
 4775 04e8 FEFFFFEB 		bl	l1ctl_msgb_alloc
 4776 04ec 0060A0E1 		mov	r6, r0
 4777              	.LVL178:
 4778              		.loc 4 1202 0
 4779 04f0 0400A0E3 		mov	r0, #4
 4780 04f4 FEFFFFEB 		bl	l1ctl_msgb_alloc
 4781              		.loc 4 1204 0
 4782 04f8 C210A0E3 		mov	r1, #194
 4783              		.loc 4 1202 0
 4784 04fc 0040A0E1 		mov	r4, r0
 4785              	.LVL179:
 4786              		.loc 4 1204 0
 4787 0500 0600A0E1 		mov	r0, r6
 4788 0504 FEFFFFEB 		bl	msgb_put
 4789              		.loc 4 1206 0
 4790 0508 0410A0E3 		mov	r1, #4
 4791              		.loc 4 1204 0
 4792 050c 0050A0E1 		mov	r5, r0
 4793              		.loc 4 1206 0
 4794 0510 0400A0E1 		mov	r0, r4
 4795 0514 FEFFFFEB 		bl	msgb_put
 4796              		.loc 4 1208 0
 4797 0518 0410A0E3 		mov	r1, #4
 4798 051c 0400A0E1 		mov	r0, r4
 4799 0520 FEFFFFEB 		bl	msgb_put
 4800              		.loc 4 1210 0
 4801 0524 94379FE5 		ldr	r3, .L613+168
 4802 0528 497AC3E5 		strb	r7, [r3, #2633]
 4803              		.loc 4 1214 0
 4804 052c 90379FE5 		ldr	r3, .L613+172
 4805              		.loc 4 1212 0
 4806 0530 0070C5E5 		strb	r7, [r5, #0]
 4807              		.loc 4 1214 0
 4808 0534 0070C3E5 		strb	r7, [r3, #0]
 4809              		.loc 4 1215 0
 4810 0538 0070C0E5 		strb	r7, [r0, #0]
 4811              		.loc 4 1216 0
 4812 053c 0270C0E5 		strb	r7, [r0, #2]
 4813 0540 0370C0E5 		strb	r7, [r0, #3]
 4814              		.loc 4 1217 0
 4815 0544 00309AE5 		ldr	r3, [sl, #0]
 4816 0548 010053E3 		cmp	r3, #1
 4817 054c 0030A013 		movne	r3, #0
 4818 0550 0130A003 		moveq	r3, #1
 4819 0554 0130C0E5 		strb	r3, [r0, #1]
 4820              		.loc 4 1219 0
 4821 0558 0610A0E1 		mov	r1, r6
 4822 055c 0500A0E3 		mov	r0, #5
 4823 0560 FEFFFFEB 		bl	l1a_l23_rx
 4824              		.loc 4 1220 0
 4825 0564 0410A0E1 		mov	r1, r4
 4826 0568 0500A0E3 		mov	r0, #5
 4827 056c FEFFFFEB 		bl	l1a_l23_rx
 4828              		.loc 4 1222 0
 4829 0570 C8369FE5 		ldr	r3, .L613+40
 4830 0574 002093E5 		ldr	r2, [r3, #0]
 4831              		.loc 4 1221 0
 4832 0578 0130A0E3 		mov	r3, #1
 4833 057c 003089E5 		str	r3, [r9, #0]
 4834              		.loc 4 1222 0
 4835 0580 40379FE5 		ldr	r3, .L613+176
 4836 0584 002083E5 		str	r2, [r3, #0]
 4837              		.loc 4 1223 0
 4838 0588 3C379FE5 		ldr	r3, .L613+180
 4839 058c 007083E5 		str	r7, [r3, #0]
 4840              		.loc 4 1224 0
 4841 0590 0430A0E3 		mov	r3, #4
 4842 0594 00308BE5 		str	r3, [fp, #0]
 4843 0598 6E0100EA 		b	.L605
 4844              	.LVL180:
 4845              	.L451:
 4846              	.LBE326:
 4847              	.LBE325:
 4848              	.LBB327:
 4849              	.LBB328:
 4850              		.loc 4 725 0
 4851 059c 2C179FE5 		ldr	r1, .L613+184
 4852 05a0 003091E5 		ldr	r3, [r1, #0]
 4853              		.loc 4 726 0
 4854 05a4 28279FE5 		ldr	r2, .L613+188
 4855              		.loc 4 725 0
 4856 05a8 013073E2 		rsbs	r3, r3, #1
 4857 05ac 0030A033 		movcc	r3, #0
 4858              		.loc 4 726 0
 4859 05b0 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 4860              		.loc 4 725 0
 4861 05b4 003081E5 		str	r3, [r1, #0]
 4862              		.loc 4 726 0
 4863 05b8 18379FE5 		ldr	r3, .L613+192
 4864 05bc 0020C3E5 		strb	r2, [r3, #0]
 4865              	.LVL181:
 4866              	.L605:
 4867              		.loc 4 727 0
 4868 05c0 FEFFFFEB 		bl	refresh_display
 4869 05c4 860100EA 		b	.L448
 4870              	.LVL182:
 4871              	.L459:
 4872              	.LBE328:
 4873              	.LBE327:
 4874              		.loc 4 862 0
 4875 05c8 88369FE5 		ldr	r3, .L613+64
 4876 05cc 003093E5 		ldr	r3, [r3, #0]
 4877 05d0 020053E3 		cmp	r3, #2
 4878 05d4 7601001A 		bne	.L502
 4879              		.loc 4 863 0
 4880 05d8 FEFFFFEB 		bl	exit_arfcn
 4881 05dc 860100EA 		b	.L448
 4882              	.L502:
 4883              		.loc 4 864 0
 4884 05e0 030053E3 		cmp	r3, #3
 4885 05e4 7A01001A 		bne	.L504
 4886              	.L606:
 4887              		.loc 4 865 0
 4888 05e8 FEFFFFEB 		bl	exit_sync
 4889 05ec 860100EA 		b	.L448
 4890              	.L504:
 4891              		.loc 4 866 0
 4892 05f0 040053E3 		cmp	r3, #4
 4893 05f4 7E01001A 		bne	.L506
 4894              	.L607:
 4895              		.loc 4 867 0
 4896 05f8 FEFFFFEB 		bl	exit_rach
 4897 05fc 860100EA 		b	.L448
 4898              	.L506:
 4899              		.loc 4 868 0
 4900 0600 010053E3 		cmp	r3, #1
 4901 0604 8601001A 		bne	.L448
 4902 0608 850100EA 		b	.L599
 4903              	.L450:
 4904              		.loc 4 872 0
 4905 060c 44369FE5 		ldr	r3, .L613+64
 4906 0610 003093E5 		ldr	r3, [r3, #0]
 4907 0614 010053E3 		cmp	r3, #1
 4908 0618 8601008A 		bhi	.L448
 4909              	.L599:
 4910              		.loc 4 873 0
 4911 061c FEFFFFEB 		bl	toggle_spectrum
 4912              	.LVL183:
 4913              	.L448:
 4914              		.loc 4 879 0
 4915 0620 28369FE5 		ldr	r3, .L613+56
 4916 0624 FF20A0E3 		mov	r2, #255
 4917 0628 002083E5 		str	r2, [r3, #0]
 4918              	.L445:
 4919              	.LBE319:
 4920              	.LBE318:
1550:apps/rssi/main.c **** 		handle_key_code();
1551:apps/rssi/main.c **** 		l1a_l23_handler();
 4921              		.loc 4 1551 0
 4922 062c FEFFFFEB 		bl	l1a_l23_handler
 4923              	.LBB329:
 4924              	.LBB330:
 4925              		.loc 4 911 0
 4926 0630 30269FE5 		ldr	r2, .L613+80
 4927 0634 003092E5 		ldr	r3, [r2, #0]
 4928 0638 000053E3 		cmp	r3, #0
 4929 063c E601001A 		bne	.L510
 4930 0640 10569FE5 		ldr	r5, .L613+64
 4931 0644 003095E5 		ldr	r3, [r5, #0]
 4932 0648 010053E3 		cmp	r3, #1
 4933 064c 3102008A 		bhi	.L512
 4934              	.LBB331:
 4935              		.loc 4 912 0
 4936 0650 0800A0E3 		mov	r0, #8
 4937 0654 FEFFFFEB 		bl	l1ctl_msgb_alloc
 4938              		.loc 4 916 0
 4939 0658 0810A0E3 		mov	r1, #8
 4940              		.loc 4 912 0
 4941 065c 0060A0E1 		mov	r6, r0
 4942              	.LVL184:
 4943              		.loc 4 916 0
 4944 0660 FEFFFFEB 		bl	msgb_put
 4945              		.loc 4 917 0
 4946 0664 0130A0E3 		mov	r3, #1
 4947              	.LVL185:
 4948 0668 0030C0E5 		strb	r3, [r0, #0]
 4949              		.loc 4 918 0
 4950 066c 003095E5 		ldr	r3, [r5, #0]
 4951 0670 000053E3 		cmp	r3, #0
 4952              	.LVL186:
 4953              		.loc 4 916 0
 4954 0674 0040A0E1 		mov	r4, r0
 4955              	.LVL187:
 4956              		.loc 4 918 0
 4957 0678 B201001A 		bne	.L514
 4958              		.loc 4 920 0
 4959 067c DC359FE5 		ldr	r3, .L613+72
 4960 0680 003093E5 		ldr	r3, [r3, #0]
 4961 0684 000053E3 		cmp	r3, #0
 4962              		.loc 4 919 0
 4963 0688 D4359FE5 		ldr	r3, .L613+76
 4964 068c B080D3E1 		ldrh	r8, [r3, #0]
 4965              		.loc 4 920 0
 4966 0690 A801000A 		beq	.L516
 4967 0694 020C58E3 		cmp	r8, #512
 4968 0698 A801003A 		bcc	.L516
 4969 069c CC359FE5 		ldr	r3, .L613+88
 4970 06a0 030058E1 		cmp	r8, r3
 4971              		.loc 4 921 0
 4972 06a4 02898893 		orrls	r8, r8, #32768
 4973              	.L516:
 4974              		.loc 4 922 0
 4975 06a8 2C369FE5 		ldr	r3, .L613+196
 4976 06ac 003093E5 		ldr	r3, [r3, #0]
 4977 06b0 000053E3 		cmp	r3, #0
 4978              		.loc 4 923 0
 4979 06b4 01398813 		orrne	r3, r8, #16384
 4980 06b8 0338A011 		movne	r3, r3, asl #16
 4981 06bc 2388A011 		movne	r8, r3, lsr #16
 4982              		.loc 4 925 0
 4983 06c0 A0359FE5 		ldr	r3, .L613+80
 4984 06c4 0120A0E3 		mov	r2, #1
 4985 06c8 002083E5 		str	r2, [r3, #0]
 4986 06cc 04808DE5 		str	r8, [sp, #4]
 4987              	.L514:
 4988              		.loc 4 927 0
 4989 06d0 80359FE5 		ldr	r3, .L613+64
 4990 06d4 003093E5 		ldr	r3, [r3, #0]
 4991 06d8 010053E3 		cmp	r3, #1
 4992 06dc CC01001A 		bne	.L522
 4993              		.loc 4 928 0
 4994 06e0 78359FE5 		ldr	r3, .L613+72
 4995 06e4 003093E5 		ldr	r3, [r3, #0]
 4996 06e8 000053E3 		cmp	r3, #0
 4997 06ec C401000A 		beq	.L524
 4998 06f0 6C359FE5 		ldr	r3, .L613+76
 4999 06f4 B020D3E1 		ldrh	r2, [r3, #0]
 5000 06f8 020C52E3 		cmp	r2, #512
 5001 06fc C401003A 		bcc	.L524
 5002 0700 68359FE5 		ldr	r3, .L613+88
 5003 0704 030052E1 		cmp	r2, r3
 5004 0708 D0159F95 		ldrls	r1, .L613+200
 5005 070c 828CA093 		movls	r8, #33280
 5006 0710 04108D95 		strls	r1, [sp, #4]
 5007 0714 C901009A 		bls	.L528
 5008              	.L524:
 5009              		.loc 4 932 0
 5010 0718 C4359FE5 		ldr	r3, .L613+204
 5011 071c 003093E5 		ldr	r3, [r3, #0]
 5012              		.loc 4 933 0
 5013 0720 B420D3E1 		ldrh	r2, [r3, #4]
 5014              		.loc 4 932 0
 5015 0724 B080D3E1 		ldrh	r8, [r3, #0]
 5016              		.loc 4 933 0
 5017 0728 04208DE5 		str	r2, [sp, #4]
 5018              	.L528:
 5019              		.loc 4 935 0
 5020 072c 34359FE5 		ldr	r3, .L613+80
 5021 0730 0220A0E3 		mov	r2, #2
 5022 0734 002083E5 		str	r2, [r3, #0]
 5023              	.L522:
 5024              		.loc 4 937 0
 5025 0738 9C359FE5 		ldr	r3, .L613+196
 5026 073c 003093E5 		ldr	r3, [r3, #0]
 5027 0740 000053E3 		cmp	r3, #0
 5028 0744 D801000A 		beq	.L529
 5029              		.loc 4 939 0
 5030 0748 04109DE5 		ldr	r1, [sp, #4]
 5031 074c 012981E3 		orr	r2, r1, #16384
 5032 0750 0228A0E1 		mov	r2, r2, asl #16
 5033              		.loc 4 938 0
 5034 0754 013988E3 		orr	r3, r8, #16384
 5035              		.loc 4 939 0
 5036 0758 2228A0E1 		mov	r2, r2, lsr #16
 5037              		.loc 4 938 0
 5038 075c 0338A0E1 		mov	r3, r3, asl #16
 5039              		.loc 4 939 0
 5040 0760 04208DE5 		str	r2, [sp, #4]
 5041              		.loc 4 938 0
 5042 0764 2388A0E1 		mov	r8, r3, lsr #16
 5043              	.L529:
 5044              		.loc 4 941 0
 5045 0768 0800A0E1 		mov	r0, r8
 5046 076c FEFFFFEB 		bl	__fswab16
 5047 0770 2034A0E1 		mov	r3, r0, lsr #8
 5048 0774 0530C4E5 		strb	r3, [r4, #5]
 5049 0778 0400C4E5 		strb	r0, [r4, #4]
 5050              		.loc 4 942 0
 5051 077c 04009DE5 		ldr	r0, [sp, #4]
 5052 0780 FEFFFFEB 		bl	__fswab16
 5053 0784 2034A0E1 		mov	r3, r0, lsr #8
 5054 0788 0600C4E5 		strb	r0, [r4, #6]
 5055 078c 0730C4E5 		strb	r3, [r4, #7]
 5056              		.loc 4 944 0
 5057 0790 0610A0E1 		mov	r1, r6
 5058 0794 0500A0E3 		mov	r0, #5
 5059 0798 FEFFFFEB 		bl	l1a_l23_rx
 5060 079c 310200EA 		b	.L512
 5061              	.LVL188:
 5062              	.L510:
 5063              	.LBE331:
 5064              		.loc 4 949 0
 5065 07a0 040053E3 		cmp	r3, #4
 5066 07a4 2002001A 		bne	.L531
 5067              		.loc 4 951 0
 5068 07a8 BC349FE5 		ldr	r3, .L613+84
 5069 07ac 001093E5 		ldr	r1, [r3, #0]
 5070 07b0 30359FE5 		ldr	r3, .L613+208
 5071 07b4 003093E5 		ldr	r3, [r3, #0]
 5072              		.loc 4 950 0
 5073 07b8 00C0A0E3 		mov	ip, #0
 5074              		.loc 4 951 0
 5075 07bc 030051E1 		cmp	r1, r3
 5076              		.loc 4 950 0
 5077 07c0 00C082E5 		str	ip, [r2, #0]
 5078              		.loc 4 951 0
 5079 07c4 3102001A 		bne	.L512
 5080              	.LBB332:
 5081              		.loc 4 955 0
 5082 07c8 0C359FE5 		ldr	r3, .L613+196
 5083 07cc 000093E5 		ldr	r0, [r3, #0]
 5084 07d0 0C0050E1 		cmp	r0, ip
 5085 07d4 10C59F05 		ldreq	ip, .L613+212
 5086              	.LVL189:
 5087 07d8 0020A001 		moveq	r2, r0
 5088              	.LVL190:
 5089 07dc 0302000A 		beq	.L536
 5090 07e0 0C00A0E1 		mov	r0, ip
 5091              	.LVL191:
 5092 07e4 00C59FE5 		ldr	ip, .L613+212
 5093 07e8 0020A0E1 		mov	r2, r0
 5094              	.LVL192:
 5095 07ec FD0100EA 		b	.L537
 5096              	.LVL193:
 5097              	.L538:
 5098              		.loc 4 958 0
 5099 07f0 04309CE4 		ldr	r3, [ip], #4
 5100 07f4 030050E1 		cmp	r0, r3
 5101 07f8 0300A0B1 		movlt	r0, r3
 5102              	.L537:
 5103              		.loc 4 957 0
 5104 07fc 010052E1 		cmp	r2, r1
 5105 0800 012082E2 		add	r2, r2, #1
 5106 0804 FA0100BA 		blt	.L538
 5107 0808 080200EA 		b	.L609
 5108              	.LVL194:
 5109              	.L543:
 5110              		.loc 4 964 0
 5111 080c 04301CE5 		ldr	r3, [ip, #-4]
 5112 0810 030080E0 		add	r0, r0, r3
 5113              	.L536:
 5114              		.loc 4 963 0
 5115 0814 010052E1 		cmp	r2, r1
 5116 0818 04C08CE2 		add	ip, ip, #4
 5117 081c 012082E2 		add	r2, r2, #1
 5118 0820 010200BA 		blt	.L543
 5119              		.loc 4 965 0
 5120 0824 FEFFFFEB 		bl	__divsi3
 5121              	.LVL195:
 5122              	.L609:
 5123 0828 A4349FE5 		ldr	r3, .L613+188
 5124              	.LVL196:
 5125              		.loc 4 967 0
 5126 082c A4149FE5 		ldr	r1, .L613+192
 5127              	.LVL197:
 5128              		.loc 4 965 0
 5129 0830 0000C3E5 		strb	r0, [r3, #0]
 5130              		.loc 4 967 0
 5131 0834 98349FE5 		ldr	r3, .L613+188
 5132 0838 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 5133              	.LVL198:
 5134 083c 0030D1E5 		ldrb	r3, [r1, #0]	@ zero_extendqisi2
 5135 0840 020053E1 		cmp	r3, r2
 5136              		.loc 4 970 0
 5137 0844 90349FE5 		ldr	r3, .L613+196
 5138              		.loc 4 968 0
 5139 0848 0020C135 		strccb	r2, [r1, #0]
 5140              		.loc 4 970 0
 5141 084c 001093E5 		ldr	r1, [r3, #0]
 5142              		.loc 4 971 0
 5143 0850 FC339FE5 		ldr	r3, .L613+60
 5144 0854 003093E5 		ldr	r3, [r3, #0]
 5145              		.loc 4 970 0
 5146 0858 000051E3 		cmp	r1, #0
 5147 085c 0210A003 		moveq	r1, #2
 5148 0860 0A10A013 		movne	r1, #10
 5149              		.loc 4 971 0
 5150 0864 000053E3 		cmp	r3, #0
 5151              		.loc 4 969 0
 5152 0868 FC339FE5 		ldr	r3, .L613+84
 5153 086c 0020A0E3 		mov	r2, #0
 5154 0870 002083E5 		str	r2, [r3, #0]
 5155              		.loc 4 970 0
 5156 0874 6C349FE5 		ldr	r3, .L613+208
 5157 0878 001083E5 		str	r1, [r3, #0]
 5158              		.loc 4 971 0
 5159 087c 3102001A 		bne	.L512
 5160              		.loc 4 972 0
 5161 0880 FEFFFFEB 		bl	refresh_display
 5162 0884 310200EA 		b	.L512
 5163              	.L531:
 5164              	.LBE332:
 5165              		.loc 4 977 0
 5166 0888 030053E3 		cmp	r3, #3
 5167 088c 3102001A 		bne	.L512
 5168              		.loc 4 978 0
 5169 0890 0030A0E3 		mov	r3, #0
 5170 0894 003082E5 		str	r3, [r2, #0]
 5171              		.loc 4 979 0
 5172 0898 FEFFFFEB 		bl	refresh_display
 5173              		.loc 4 980 0
 5174 089c 4C349FE5 		ldr	r3, .L613+216
 5175 08a0 0000D3E5 		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 5176 08a4 FEFFFFEB 		bl	buzzer_volume
 5177              		.loc 4 981 0
 5178 08a8 1000A0E3 		mov	r0, #16
 5179 08ac FEFFFFEB 		bl	buzzer_note
 5180              		.loc 4 982 0
 5181 08b0 88339FE5 		ldr	r3, .L613+40
 5182 08b4 002093E5 		ldr	r2, [r3, #0]
 5183 08b8 34349FE5 		ldr	r3, .L613+220
 5184 08bc 002083E5 		str	r2, [r3, #0]
 5185              		.loc 4 983 0
 5186 08c0 8C339FE5 		ldr	r3, .L613+60
 5187 08c4 0120A0E3 		mov	r2, #1
 5188 08c8 002083E5 		str	r2, [r3, #0]
 5189              	.LVL199:
 5190              	.L512:
 5191              	.LBE330:
 5192              	.LBE329:
 5193              	.LBB333:
 5194              	.LBB334:
 5195              		.loc 4 1088 0
 5196 08cc 84339FE5 		ldr	r3, .L613+64
 5197 08d0 003093E5 		ldr	r3, [r3, #0]
 5198 08d4 030053E3 		cmp	r3, #3
 5199 08d8 C302001A 		bne	.L552
 5200              		.loc 4 1092 0
 5201 08dc 14149FE5 		ldr	r1, .L613+224
 5202 08e0 002091E5 		ldr	r2, [r1, #0]
 5203 08e4 000052E3 		cmp	r2, #0
 5204 08e8 4702000A 		beq	.L554
 5205              	.LBB335:
 5206              		.loc 4 1095 0
 5207 08ec C4439FE5 		ldr	r4, .L613+160
 5208              	.LVL200:
 5209              		.loc 4 1096 0
 5210 08f0 0030A0E3 		mov	r3, #0
 5211 08f4 003081E5 		str	r3, [r1, #0]
 5212              		.loc 4 1093 0
 5213 08f8 78339FE5 		ldr	r3, .L613+96
 5214              		.loc 4 1095 0
 5215 08fc 002084E5 		str	r2, [r4, #0]
 5216              		.loc 4 1093 0
 5217 0900 B050D3E1 		ldrh	r5, [r3, #0]
 5218              	.LVL201:
 5219              		.loc 4 1097 0
 5220 0904 FEFFFFEB 		bl	refresh_display
 5221              		.loc 4 1099 0
 5222 0908 003094E5 		ldr	r3, [r4, #0]
 5223 090c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 5224 0910 6F0053E3 		cmp	r3, #111
 5225 0914 C302001A 		bne	.L552
 5226              		.loc 4 1102 0
 5227 0918 0500A0E1 		mov	r0, r5
 5228 091c FEFFFFEB 		bl	request_ul_levels
 5229 0920 C30200EA 		b	.L552
 5230              	.LVL202:
 5231              	.L554:
 5232              	.LBE335:
 5233              		.loc 4 1107 0
 5234 0924 28339FE5 		ldr	r3, .L613+60
 5235 0928 002093E5 		ldr	r2, [r3, #0]
 5236 092c 000052E3 		cmp	r2, #0
 5237 0930 C302001A 		bne	.L552
 5238              		.loc 4 1111 0
 5239 0934 4C139FE5 		ldr	r1, .L613+112
 5240 0938 B030D1E1 		ldrh	r3, [r1, #0]
 5241 093c 000053E3 		cmp	r3, #0
 5242 0940 5402001A 		bne	.L558
 5243 0944 38339FE5 		ldr	r3, .L613+108
 5244 0948 B030D3E1 		ldrh	r3, [r3, #0]
 5245 094c 010C13E3 		tst	r3, #256
 5246 0950 C302000A 		beq	.L552
 5247 0954 5B0200EA 		b	.L596
 5248              	.L558:
 5249              		.loc 4 1117 0
 5250 0958 FC329FE5 		ldr	r3, .L613+68
 5251 095c 003093E5 		ldr	r3, [r3, #0]
 5252 0960 000053E3 		cmp	r3, #0
 5253              		.loc 4 1116 0
 5254 0964 B020C1E1 		strh	r2, [r1, #0]	@ movhi
 5255              		.loc 4 1117 0
 5256 0968 C30200AA 		bge	.L552
 5257              		.loc 4 1118 0
 5258 096c FEFFFFEB 		bl	refresh_display
 5259 0970 C30200EA 		b	.L552
 5260              	.L596:
 5261              		.loc 4 1123 0
 5262 0974 FF3003E2 		and	r3, r3, #255
 5263 0978 190053E3 		cmp	r3, #25
 5264 097c 6A02000A 		beq	.L565
 5265 0980 640200CA 		bgt	.L569
 5266 0984 020053E3 		cmp	r3, #2
 5267 0988 7802000A 		beq	.L563
 5268 098c 030053E3 		cmp	r3, #3
 5269 0990 AC02001A 		bne	.L562
 5270 0994 7E0200EA 		b	.L564
 5271              	.L569:
 5272 0998 1B0053E3 		cmp	r3, #27
 5273 099c 8402000A 		beq	.L567
 5274 09a0 700200BA 		blt	.L566
 5275 09a4 1C0053E3 		cmp	r3, #28
 5276 09a8 AC02001A 		bne	.L562
 5277 09ac A70200EA 		b	.L568
 5278              	.L565:
 5279              		.loc 4 1126 0
 5280 09b0 44139FE5 		ldr	r1, .L613+228
 5281 09b4 F0029FE5 		ldr	r0, .L613+148
 5282 09b8 1020A0E3 		mov	r2, #16
 5283 09bc CE30A0E3 		mov	r3, #206
 5284 09c0 01C0A0E3 		mov	ip, #1
 5285 09c4 750200EA 		b	.L610
 5286              	.L566:
 5287              		.loc 4 1132 0
 5288 09c8 30139FE5 		ldr	r1, .L613+232
 5289 09cc D8029FE5 		ldr	r0, .L613+148
 5290 09d0 1020A0E3 		mov	r2, #16
 5291 09d4 CE30A0E3 		mov	r3, #206
 5292 09d8 04C0A0E3 		mov	ip, #4
 5293              	.L610:
 5294 09dc 00C08DE5 		str	ip, [sp, #0]
 5295 09e0 FEFFFFEB 		bl	gsm48_decode_freq_list
 5296 09e4 AC0200EA 		b	.L562
 5297              	.L563:
 5298              		.loc 4 1138 0
 5299 09e8 14139FE5 		ldr	r1, .L613+236
 5300 09ec B8029FE5 		ldr	r0, .L613+148
 5301 09f0 1020A0E3 		mov	r2, #16
 5302 09f4 CE30A0E3 		mov	r3, #206
 5303 09f8 08C0A0E3 		mov	ip, #8
 5304 09fc 750200EA 		b	.L610
 5305              	.L564:
 5306              		.loc 4 1144 0
 5307 0a00 10C0A0E3 		mov	ip, #16
 5308 0a04 FC129FE5 		ldr	r1, .L613+240
 5309 0a08 9C029FE5 		ldr	r0, .L613+148
 5310 0a0c 0C20A0E1 		mov	r2, ip
 5311 0a10 8E30A0E3 		mov	r3, #142
 5312 0a14 750200EA 		b	.L610
 5313              	.L567:
 5314              		.loc 4 1149 0
 5315 0a18 7C629FE5 		ldr	r6, .L613+132
 5316              	.LVL203:
 5317              		.loc 4 1150 0
 5318 0a1c 84129FE5 		ldr	r1, .L613+144
 5319 0a20 7C229FE5 		ldr	r2, .L613+140
 5320 0a24 74329FE5 		ldr	r3, .L613+136
 5321 0a28 050086E2 		add	r0, r6, #5
 5322 0a2c FEFFFFEB 		bl	gsm48_decode_lai
 5323              		.loc 4 1151 0
 5324 0a30 0330D6E5 		ldrb	r3, [r6, #3]	@ zero_extendqisi2
 5325 0a34 0400D6E5 		ldrb	r0, [r6, #4]	@ zero_extendqisi2
 5326 0a38 000483E1 		orr	r0, r3, r0, asl #8
 5327 0a3c FEFFFFEB 		bl	__fswab16
 5328              		.loc 4 1152 0
 5329 0a40 38529FE5 		ldr	r5, .L613+104
 5330 0a44 003095E5 		ldr	r3, [r5, #0]
 5331 0a48 000053E3 		cmp	r3, #0
 5332              		.loc 4 1151 0
 5333 0a4c B8329FE5 		ldr	r3, .L613+244
 5334 0a50 B000C3E1 		strh	r0, [r3, #0]	@ movhi
 5335              		.loc 4 1152 0
 5336 0a54 AC0200AA 		bge	.L562
 5337              	.LBB336:
 5338              		.loc 4 1154 0
 5339 0a58 1000A0E3 		mov	r0, #16
 5340 0a5c FEFFFFEB 		bl	l1ctl_msgb_alloc
 5341              		.loc 4 1157 0
 5342 0a60 0410A0E3 		mov	r1, #4
 5343              		.loc 4 1154 0
 5344 0a64 0040A0E1 		mov	r4, r0
 5345              	.LVL204:
 5346              		.loc 4 1157 0
 5347 0a68 FEFFFFEB 		bl	msgb_put
 5348              		.loc 4 1159 0
 5349 0a6c 0A30D6E5 		ldrb	r3, [r6, #10]	@ zero_extendqisi2
 5350 0a70 073003E2 		and	r3, r3, #7
 5351              		.loc 4 1160 0
 5352 0a74 010053E3 		cmp	r3, #1
 5353 0a78 0120A013 		movne	r2, #1
 5354 0a7c 0220A003 		moveq	r2, #2
 5355              		.loc 4 1159 0
 5356 0a80 003085E5 		str	r3, [r5, #0]
 5357              		.loc 4 1160 0
 5358 0a84 0020C0E5 		strb	r2, [r0, #0]
 5359              		.loc 4 1163 0
 5360 0a88 80029FE5 		ldr	r0, .L613+248
 5361 0a8c 001095E5 		ldr	r1, [r5, #0]
 5362 0a90 FEFFFFEB 		bl	printf
 5363              		.loc 4 1165 0
 5364 0a94 0410A0E1 		mov	r1, r4
 5365 0a98 0500A0E3 		mov	r0, #5
 5366 0a9c FEFFFFEB 		bl	l1a_l23_rx
 5367 0aa0 AC0200EA 		b	.L562
 5368              	.LVL205:
 5369              	.L568:
 5370              	.LBE336:
 5371              		.loc 4 1170 0
 5372 0aa4 68029FE5 		ldr	r0, .L613+252
 5373 0aa8 F8119FE5 		ldr	r1, .L613+144
 5374 0aac F0219FE5 		ldr	r2, .L613+140
 5375 0ab0 E8319FE5 		ldr	r3, .L613+136
 5376 0ab4 FEFFFFEB 		bl	gsm48_decode_lai
 5377              	.LVL206:
 5378              	.L562:
 5379              		.loc 4 1174 0
 5380 0ab8 9C319FE5 		ldr	r3, .L613+68
 5381 0abc 003093E5 		ldr	r3, [r3, #0]
 5382 0ac0 000053E3 		cmp	r3, #0
 5383              		.loc 4 1175 0
 5384 0ac4 FEFFFFAB 		blge	refresh_display
 5385              	.L574:
 5386              		.loc 4 1178 0
 5387 0ac8 20329FE5 		ldr	r3, .L613+216
 5388 0acc 0000D3E5 		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 5389 0ad0 FEFFFFEB 		bl	buzzer_volume
 5390              		.loc 4 1181 0
 5391 0ad4 A8319FE5 		ldr	r3, .L613+108
 5392 0ad8 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 5393              		.loc 4 1179 0
 5394 0adc 5C319FE5 		ldr	r3, .L613+40
 5395 0ae0 001093E5 		ldr	r1, [r3, #0]
 5396 0ae4 08329FE5 		ldr	r3, .L613+220
 5397 0ae8 001083E5 		str	r1, [r3, #0]
 5398              		.loc 4 1180 0
 5399 0aec 60319FE5 		ldr	r3, .L613+60
 5400              		.loc 4 1181 0
 5401 0af0 FF0052E3 		cmp	r2, #255
 5402              		.loc 4 1180 0
 5403 0af4 0120A0E3 		mov	r2, #1
 5404 0af8 002083E5 		str	r2, [r3, #0]
 5405              		.loc 4 1182 0
 5406 0afc 1300A003 		moveq	r0, #19
 5407              		.loc 4 1184 0
 5408 0b00 1000A013 		movne	r0, #16
 5409 0b04 FEFFFFEB 		bl	buzzer_note
 5410              		.loc 4 1185 0
 5411 0b08 74319FE5 		ldr	r3, .L613+108
 5412 0b0c 0020A0E3 		mov	r2, #0	@ movhi
 5413 0b10 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 5414              	.LVL207:
 5415              	.L552:
 5416              	.LBE334:
 5417              	.LBE333:
 5418              	.LBB337:
 5419              	.LBB338:
 5420              		.loc 4 1242 0
 5421 0b14 3C319FE5 		ldr	r3, .L613+64
 5422 0b18 00C093E5 		ldr	ip, [r3, #0]
 5423 0b1c 04005CE3 		cmp	ip, #4
 5424 0b20 DB02001A 		bne	.L579
 5425              		.loc 4 1245 0
 5426 0b24 A0419FE5 		ldr	r4, .L613+180
 5427              	.LVL208:
 5428 0b28 000094E5 		ldr	r0, [r4, #0]
 5429 0b2c 000050E3 		cmp	r0, #0
 5430 0b30 D802001A 		bne	.L581
 5431              	.LBB339:
 5432              		.loc 4 1246 0
 5433 0b34 04319FE5 		ldr	r3, .L613+40
 5434              		.loc 4 1248 0
 5435 0b38 7CE19FE5 		ldr	lr, .L613+164
 5436              		.loc 4 1246 0
 5437 0b3c 002093E5 		ldr	r2, [r3, #0]
 5438 0b40 80319FE5 		ldr	r3, .L613+176
 5439              		.loc 4 1248 0
 5440 0b44 00109EE5 		ldr	r1, [lr, #0]
 5441              		.loc 4 1246 0
 5442 0b48 003093E5 		ldr	r3, [r3, #0]
 5443              		.loc 4 1248 0
 5444 0b4c 000051E3 		cmp	r1, #0
 5445              		.loc 4 1246 0
 5446 0b50 022063E0 		rsb	r2, r3, r2
 5447              	.LVL209:
 5448              		.loc 4 1248 0
 5449 0b54 DB02000A 		beq	.L579
 5450              		.loc 4 1250 0
 5451 0b58 C70052E3 		cmp	r2, #199
 5452 0b5c DB02009A 		bls	.L579
 5453              		.loc 4 1253 0
 5454 0b60 00008EE5 		str	r0, [lr, #0]
 5455              		.loc 4 1252 0
 5456 0b64 00C084E5 		str	ip, [r4, #0]
 5457              	.L581:
 5458              	.LBE339:
 5459              		.loc 4 1256 0
 5460 0b68 FEFFFFEB 		bl	refresh_display
 5461              	.LVL210:
 5462              		.loc 4 1257 0
 5463 0b6c 0030A0E3 		mov	r3, #0
 5464 0b70 003084E5 		str	r3, [r4, #0]
 5465              	.LVL211:
 5466              	.L579:
 5467              	.LBE338:
 5468              	.LBE337:
 5469              	.LBB340:
 5470              	.LBB341:
 5471              		.loc 4 886 0
 5472 0b74 D8609FE5 		ldr	r6, .L613+60
 5473              	.LVL212:
 5474              		.loc 4 884 0
 5475 0b78 C0409FE5 		ldr	r4, .L613+40
 5476              	.LVL213:
 5477 0b7c 70519FE5 		ldr	r5, .L613+220
 5478              	.LVL214:
 5479              		.loc 4 886 0
 5480 0b80 003096E5 		ldr	r3, [r6, #0]
 5481              		.loc 4 884 0
 5482 0b84 001094E5 		ldr	r1, [r4, #0]
 5483 0b88 002095E5 		ldr	r2, [r5, #0]
 5484              	.LVL215:
 5485              		.loc 4 886 0
 5486 0b8c 000053E3 		cmp	r3, #0
 5487              		.loc 4 884 0
 5488 0b90 011062E0 		rsb	r1, r2, r1
 5489              	.LVL216:
 5490              		.loc 4 886 0
 5491 0b94 FB02001A 		bne	.L585
 5492              		.loc 4 887 0
 5493 0b98 50319FE5 		ldr	r3, .L613+216
 5494 0b9c 000093E5 		ldr	r0, [r3, #0]
 5495 0ba0 000050E3 		cmp	r0, #0
 5496 0ba4 2D00000A 		beq	.L612
 5497 0ba8 A8309FE5 		ldr	r3, .L613+64
 5498 0bac 003093E5 		ldr	r3, [r3, #0]
 5499 0bb0 000053E3 		cmp	r3, #0
 5500 0bb4 2D00001A 		bne	.L612
 5501              		.loc 4 890 0
 5502 0bb8 14319FE5 		ldr	r3, .L613+188
 5503 0bbc 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 5504 0bc0 3F3063E2 		rsb	r3, r3, #63
 5505 0bc4 FF3003E2 		and	r3, r3, #255
 5506 0bc8 030051E1 		cmp	r1, r3
 5507 0bcc 2D00003A 		bcc	.L612
 5508              		.loc 4 892 0
 5509 0bd0 FF0000E2 		and	r0, r0, #255
 5510 0bd4 FEFFFFEB 		bl	buzzer_volume
 5511              	.LVL217:
 5512              		.loc 4 893 0
 5513 0bd8 1000A0E3 		mov	r0, #16
 5514 0bdc FEFFFFEB 		bl	buzzer_note
 5515              		.loc 4 894 0
 5516 0be0 003094E5 		ldr	r3, [r4, #0]
 5517 0be4 003085E5 		str	r3, [r5, #0]
 5518              		.loc 4 895 0
 5519 0be8 0130A0E3 		mov	r3, #1
 5520 0bec 003086E5 		str	r3, [r6, #0]
 5521 0bf0 2D0000EA 		b	.L612
 5522              	.LVL218:
 5523              	.L585:
 5524              		.loc 4 899 0
 5525 0bf4 030051E3 		cmp	r1, #3
 5526 0bf8 2D00009A 		bls	.L612
 5527              		.loc 4 901 0
 5528 0bfc 002094E5 		ldr	r2, [r4, #0]
 5529              		.loc 4 900 0
 5530 0c00 0030A0E3 		mov	r3, #0
 5531              		.loc 4 902 0
 5532 0c04 0300A0E1 		mov	r0, r3
 5533              		.loc 4 901 0
 5534 0c08 002085E5 		str	r2, [r5, #0]
 5535              		.loc 4 900 0
 5536 0c0c 003086E5 		str	r3, [r6, #0]
 5537              		.loc 4 902 0
 5538 0c10 FEFFFFEB 		bl	buzzer_volume
 5539              	.LVL219:
 5540 0c14 2D0000EA 		b	.L612
 5541              	.L614:
 5542              		.align	2
 5543              	.L613:
 5544 0c18 00000000 		.word	hr
 5545 0c1c D0020000 		.word	.LC57
 5546 0c20 00000000 		.word	key_handler
 5547 0c24 00000000 		.word	console_rx_cb
 5548 0c28 00000000 		.word	l1a_l23_rx_cb
 5549 0c2c 00000000 		.word	l1a_l23_tx_cb
 5550 0c30 00000000 		.word	l1a_l23_tx
 5551 0c34 00000000 		.word	pm_spectrum
 5552 0c38 00000000 		.word	ul_max
 5553 0c3c 00000000 		.word	key_pressed
 5554 0c40 00000000 		.word	jiffies
 5555 0c44 00000000 		.word	key_pressed_when
 5556 0c48 00000000 		.word	key_pressed_delay
 5557 0c4c 00000000 		.word	key_pressed_code
 5558 0c50 00000000 		.word	key_code
 5559 0c54 00000000 		.word	tone_on
 5560 0c58 00000000 		.word	mode
 5561 0c5c 00000000 		.word	cursor
 5562 0c60 00000000 		.word	pcs
 5563 0c64 30000000 		.word	arfcn
 5564 0c68 00000000 		.word	pm_mode
 5565 0c6c 00000000 		.word	pm_count
 5566 0c70 2A030000 		.word	810
 5567 0c74 00000000 		.word	ul_levels
 5568 0c78 32000000 		.word	ul_arfcn
 5569 0c7c 00000000 		.word	si_4
 5570 0c80 00000000 		.word	ccch_conf
 5571 0c84 00000000 		.word	si_new
 5572 0c88 00000000 		.word	ul_new
 5573 0c8c 00000000 		.word	si_1
 5574 0c90 00000000 		.word	si_2
 5575 0c94 00000000 		.word	si_2bis
 5576 0c98 00000000 		.word	si_2ter
 5577 0c9c 00000000 		.word	si_3
 5578 0ca0 00000000 		.word	lac
 5579 0ca4 00000000 		.word	mnc
 5580 0ca8 00000000 		.word	mcc
 5581 0cac 00000000 		.word	freq
 5582 0cb0 00000000 		.word	nb_num
 5583 0cb4 1C030000 		.word	.LC58
 5584 0cb8 00000000 		.word	sync_msg
 5585 0cbc 00000000 		.word	rach
 5586 0cc0 00000000 		.word	l1s
 5587 0cc4 00000000 		.word	rach_ra
 5588 0cc8 00000000 		.word	rach_when
 5589 0ccc 00000000 		.word	assign
 5590 0cd0 00000000 		.word	max
 5591 0cd4 00000000 		.word	power
 5592 0cd8 00000000 		.word	max_power
 5593 0cdc 00000000 		.word	uplink
 5594 0ce0 2A830000 		.word	33578
 5595 0ce4 00000000 		.word	band
 5596 0ce8 00000000 		.word	pm_max
 5597 0cec 00000000 		.word	pm_meas
 5598 0cf0 00000000 		.word	tone
 5599 0cf4 00000000 		.word	tone_time
 5600 0cf8 00000000 		.word	sync_result
 5601 0cfc 03000000 		.word	si_1+3
 5602 0d00 03000000 		.word	si_2+3
 5603 0d04 03000000 		.word	si_2bis+3
 5604 0d08 03000000 		.word	si_2ter+3
 5605 0d0c 00000000 		.word	cell_id
 5606 0d10 24030000 		.word	.LC59
 5607 0d14 03000000 		.word	si_4+3
 5608              	.LBE341:
 5609              	.LBE340:
 5610              	.LFE145:
 5612              		.section	.rodata.str1.4
 5613 0332 0000     		.align	2
 5614              	.LC60:
 5615 0334 6F6B00   		.ascii	"ok\000"
 5616 0337 00       		.align	2
 5617              	.LC61:
 5618 0338 6572726F 		.ascii	"error\000"
 5618      7200
 5619 033e 0000     		.section	.text.l1a_l23_tx,"ax",%progbits
 5620              		.align	2
 5622              	l1a_l23_tx:
 5623              	.LFB141:
 5624              		.loc 4 1384 0
 5625              		@ args = 0, pretend = 0, frame = 16
 5626              		@ frame_needed = 0, uses_anonymous_args = 0
 5627              	.LVL220:
 5628 0000 70402DE9 		stmfd	sp!, {r4, r5, r6, lr}
 5629              	.LCFI22:
 5630              		.loc 4 1385 0
 5631 0004 105090E5 		ldr	r5, [r0, #16]
 5632              	.LVL221:
 5633              		.loc 4 1393 0
 5634 0008 0030D5E5 		ldrb	r3, [r5, #0]	@ zero_extendqisi2
 5635 000c 090053E3 		cmp	r3, #9
 5636              		.loc 4 1384 0
 5637 0010 10D04DE2 		sub	sp, sp, #16
 5638              	.LCFI23:
 5639              	.LVL222:
 5640              		.loc 4 1384 0
 5641 0014 0060A0E1 		mov	r6, r0
 5642              		.loc 4 1393 0
 5643 0018 1000000A 		beq	.L619
 5644              	.LVL223:
 5645 001c 0B00008A 		bhi	.L622
 5646 0020 020053E3 		cmp	r3, #2
 5647 0024 4800000A 		beq	.L617
 5648 0028 030053E3 		cmp	r3, #3
 5649 002c 2301001A 		bne	.L616
 5650 0030 530000EA 		b	.L618
 5651              	.L622:
 5652 0034 0C0053E3 		cmp	r3, #12
 5653 0038 FE00000A 		beq	.L620
 5654 003c 1B0053E3 		cmp	r3, #27
 5655 0040 2301001A 		bne	.L616
 5656 0044 DF0000EA 		b	.L621
 5657              	.L619:
 5658              		.loc 4 1395 0
 5659 0048 54E49FE5 		ldr	lr, .L675
 5660 004c 00309EE5 		ldr	r3, [lr, #0]
 5661 0050 010053E3 		cmp	r3, #1
 5662 0054 1D00001A 		bne	.L623
 5663              		.loc 4 1397 0
 5664 0058 48C49FE5 		ldr	ip, .L675+4
 5665 005c 0610D5E5 		ldrb	r1, [r5, #6]	@ zero_extendqisi2
 5666 0060 00209CE5 		ldr	r2, [ip, #0]
 5667 0064 40349FE5 		ldr	r3, .L675+8
 5668              		.loc 4 1398 0
 5669 0068 010082E2 		add	r0, r2, #1
 5670              		.loc 4 1397 0
 5671 006c 021183E7 		str	r1, [r3, r2, asl #2]
 5672              		.loc 4 1399 0
 5673 0070 0430A0E3 		mov	r3, #4
 5674              		.loc 4 1398 0
 5675 0074 00008CE5 		str	r0, [ip, #0]
 5676              		.loc 4 1399 0
 5677 0078 00308EE5 		str	r3, [lr, #0]
 5678              	.LVL224:
 5679              	.L623:
 5680              		.loc 4 1401 0
 5681 007c 00309EE5 		ldr	r3, [lr, #0]
 5682 0080 020053E3 		cmp	r3, #2
 5683              		.loc 4 1402 0
 5684 0084 04408502 		addeq	r4, r5, #4
 5685              	.LVL225:
 5686              		.loc 4 1401 0
 5687 0088 3B00000A 		beq	.L627
 5688 008c 430000EA 		b	.L625
 5689              	.L628:
 5690              		.loc 4 1404 0
 5691 0090 18349FE5 		ldr	r3, .L675+12
 5692 0094 003093E5 		ldr	r3, [r3, #0]
 5693 0098 000053E3 		cmp	r3, #0
 5694 009c 3100000A 		beq	.L629
 5695 00a0 0030D4E5 		ldrb	r3, [r4, #0]	@ zero_extendqisi2
 5696 00a4 0100D4E5 		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 5697 00a8 000483E1 		orr	r0, r3, r0, asl #8
 5698 00ac FEFFFFEB 		bl	__fswab16
 5699 00b0 FC339FE5 		ldr	r3, .L675+16
 5700 00b4 000BA0E1 		mov	r0, r0, asl #22
 5701 00b8 200BA0E1 		mov	r0, r0, lsr #22
 5702 00bc 0020D3E7 		ldrb	r2, [r3, r0]	@ zero_extendqisi2
 5703 00c0 0230D4E5 		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 5704 00c4 030052E1 		cmp	r2, r3
 5705 00c8 3A00002A 		bcs	.L631
 5706              	.LVL226:
 5707              	.L629:
 5708              		.loc 4 1405 0
 5709 00cc 0030D4E5 		ldrb	r3, [r4, #0]	@ zero_extendqisi2
 5710 00d0 0100D4E5 		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 5711 00d4 000483E1 		orr	r0, r3, r0, asl #8
 5712 00d8 FEFFFFEB 		bl	__fswab16
 5713 00dc 0220D4E5 		ldrb	r2, [r4, #2]	@ zero_extendqisi2
 5714 00e0 000BA0E1 		mov	r0, r0, asl #22
 5715 00e4 C8339FE5 		ldr	r3, .L675+16
 5716 00e8 200BA0E1 		mov	r0, r0, lsr #22
 5717 00ec 0020C3E7 		strb	r2, [r3, r0]
 5718              	.L631:
 5719              		.loc 4 1403 0
 5720 00f0 044084E2 		add	r4, r4, #4
 5721              	.LVL227:
 5722              	.L627:
 5723 00f4 3C3096E5 		ldr	r3, [r6, #60]
 5724 00f8 030054E1 		cmp	r4, r3
 5725 00fc 2200003A 		bcc	.L628
 5726              		.loc 4 1407 0
 5727 0100 0130D5E5 		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 5728 0104 010013E3 		tst	r3, #1
 5729              		.loc 4 1408 0
 5730 0108 94339F15 		ldrne	r3, .L675
 5731 010c 0320A013 		movne	r2, #3
 5732 0110 00208315 		strne	r2, [r3, #0]
 5733              	.L625:
 5734              		.loc 4 1410 0
 5735 0114 9C239FE5 		ldr	r2, .L675+20
 5736 0118 443A92E5 		ldr	r3, [r2, #2628]
 5737 011c 7D3F83E2 		add	r3, r3, #500
 5738 0120 443A82E5 		str	r3, [r2, #2628]
 5739 0124 230100EA 		b	.L616
 5740              	.LVL228:
 5741              	.L617:
 5742              		.loc 4 1414 0
 5743 0128 104085E2 		add	r4, r5, #16
 5744              	.LVL229:
 5745              		.loc 4 1415 0
 5746 012c 0230D4E5 		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 5747 0130 000053E3 		cmp	r3, #0
 5748 0134 80239FE5 		ldr	r2, .L675+24
 5749              		.loc 4 1416 0
 5750 0138 80339F05 		ldreq	r3, .L675+28
 5751              		.loc 4 1418 0
 5752 013c 80339F15 		ldrne	r3, .L675+32
 5753 0140 003082E5 		str	r3, [r2, #0]
 5754              		.loc 4 1419 0
 5755 0144 7C339FE5 		ldr	r3, .L675+36
 5756 0148 0320D4E5 		ldrb	r2, [r4, #3]	@ zero_extendqisi2
 5757 014c 0020C3E5 		strb	r2, [r3, #0]
 5758 0150 230100EA 		b	.L616
 5759              	.LVL230:
 5760              	.L618:
 5761              		.loc 4 1423 0
 5762 0154 103085E2 		add	r3, r5, #16
 5763 0158 143080E5 		str	r3, [r0, #20]
 5764              		.loc 4 1422 0
 5765 015c 044085E2 		add	r4, r5, #4
 5766              	.LVL231:
 5767              		.loc 4 1424 0
 5768 0160 0D208DE2 		add	r2, sp, #13
 5769 0164 0E308DE2 		add	r3, sp, #14
 5770 0168 0400D5E5 		ldrb	r0, [r5, #4]	@ zero_extendqisi2
 5771 016c 0F108DE2 		add	r1, sp, #15
 5772 0170 FEFFFFEB 		bl	rsl_dec_chan_nr
 5773              		.loc 4 1426 0
 5774 0174 50339FE5 		ldr	r3, .L675+40
 5775 0178 0820D4E5 		ldrb	r2, [r4, #8]	@ zero_extendqisi2
 5776 017c 0020C3E5 		strb	r2, [r3, #0]
 5777              		.loc 4 1427 0
 5778 0180 0B30D4E5 		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 5779 0184 010053E3 		cmp	r3, #1
 5780              	.LVL232:
 5781 0188 0F30DDE5 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 5782 018c 6700009A 		bls	.L637
 5783              	.LVL233:
 5784              		.loc 4 1428 0
 5785 0190 800053E3 		cmp	r3, #128
 5786              		.loc 4 1429 0
 5787 0194 34339F05 		ldreq	r3, .L675+44
 5788              	.LVL234:
 5789 0198 FE2CE003 		mvneq	r2, #65024
 5790 019c B020C301 		streqh	r2, [r3, #0]	@ movhi
 5791 01a0 230100EA 		b	.L616
 5792              	.LVL235:
 5793              	.L637:
 5794              		.loc 4 1433 0
 5795 01a4 FF3003E2 		and	r3, r3, #255
 5796              	.LVL236:
 5797 01a8 800053E3 		cmp	r3, #128
 5798 01ac 6D00000A 		beq	.L641
 5799 01b0 900053E3 		cmp	r3, #144
 5800 01b4 DB00001A 		bne	.L640
 5801 01b8 A10000EA 		b	.L642
 5802              	.L641:
 5803              		.loc 4 1435 0
 5804 01bc 144096E5 		ldr	r4, [r6, #20]
 5805              	.LVL237:
 5806 01c0 184086E5 		str	r4, [r6, #24]
 5807              	.LBB342:
 5808              	.LBB343:
 5809              		.loc 4 1359 0
 5810 01c4 0230D4E5 		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 5811 01c8 190053E3 		cmp	r3, #25
 5812 01cc 7E00000A 		beq	.L646
 5813 01d0 7800008A 		bhi	.L650
 5814 01d4 020053E3 		cmp	r3, #2
 5815 01d8 8800000A 		beq	.L644
 5816 01dc 030053E3 		cmp	r3, #3
 5817 01e0 9C00001A 		bne	.L643
 5818 01e4 8D0000EA 		b	.L645
 5819              	.L650:
 5820 01e8 1B0053E3 		cmp	r3, #27
 5821 01ec 9200000A 		beq	.L648
 5822 01f0 8300003A 		bcc	.L647
 5823 01f4 1C0053E3 		cmp	r3, #28
 5824 01f8 9C00001A 		bne	.L643
 5825 01fc 970000EA 		b	.L649
 5826              	.L646:
 5827              		.loc 4 1361 0
 5828 0200 3C2096E5 		ldr	r2, [r6, #60]
 5829 0204 C8029FE5 		ldr	r0, .L675+48
 5830 0208 022064E0 		rsb	r2, r4, r2
 5831 020c 0410A0E1 		mov	r1, r4
 5832 0210 9B0000EA 		b	.L672
 5833              	.L647:
 5834              		.loc 4 1364 0
 5835 0214 3C2096E5 		ldr	r2, [r6, #60]
 5836 0218 B8029FE5 		ldr	r0, .L675+52
 5837 021c 022064E0 		rsb	r2, r4, r2
 5838 0220 0410A0E1 		mov	r1, r4
 5839 0224 9B0000EA 		b	.L672
 5840              	.L644:
 5841              		.loc 4 1367 0
 5842 0228 3C2096E5 		ldr	r2, [r6, #60]
 5843 022c A8029FE5 		ldr	r0, .L675+56
 5844 0230 022064E0 		rsb	r2, r4, r2
 5845 0234 0410A0E1 		mov	r1, r4
 5846 0238 9B0000EA 		b	.L672
 5847              	.L645:
 5848              		.loc 4 1370 0
 5849 023c 3C2096E5 		ldr	r2, [r6, #60]
 5850 0240 98029FE5 		ldr	r0, .L675+60
 5851 0244 022064E0 		rsb	r2, r4, r2
 5852 0248 0410A0E1 		mov	r1, r4
 5853 024c 9B0000EA 		b	.L672
 5854              	.L648:
 5855              		.loc 4 1373 0
 5856 0250 3C2096E5 		ldr	r2, [r6, #60]
 5857 0254 88029FE5 		ldr	r0, .L675+64
 5858 0258 022064E0 		rsb	r2, r4, r2
 5859 025c 0410A0E1 		mov	r1, r4
 5860 0260 9B0000EA 		b	.L672
 5861              	.L649:
 5862              		.loc 4 1376 0
 5863 0264 3C2096E5 		ldr	r2, [r6, #60]
 5864 0268 78029FE5 		ldr	r0, .L675+68
 5865 026c 022064E0 		rsb	r2, r4, r2
 5866 0270 0410A0E1 		mov	r1, r4
 5867              	.L672:
 5868 0274 FEFFFFEB 		bl	memcpy
 5869              	.L643:
 5870              		.loc 4 1379 0
 5871 0278 0230D4E5 		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 5872 027c 4C229FE5 		ldr	r2, .L675+44
 5873 0280 013C83E3 		orr	r3, r3, #256
 5874 0284 B030C2E1 		strh	r3, [r2, #0]	@ movhi
 5875 0288 DB0000EA 		b	.L640
 5876              	.LVL238:
 5877              	.L642:
 5878              	.LBE343:
 5879              	.LBE342:
 5880              		.loc 4 1439 0
 5881 028c 144096E5 		ldr	r4, [r6, #20]
 5882              	.LVL239:
 5883 0290 184086E5 		str	r4, [r6, #24]
 5884              	.LBB344:
 5885              	.LBB345:
 5886              		.loc 4 1339 0
 5887 0294 0230D4E5 		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 5888 0298 390053E3 		cmp	r3, #57
 5889 029c B100000A 		beq	.L651
 5890 02a0 DB00003A 		bcc	.L640
 5891 02a4 3A0053E3 		cmp	r3, #58
 5892 02a8 CC00000A 		beq	.L652
 5893 02ac 3F0053E3 		cmp	r3, #63
 5894 02b0 DB00001A 		bne	.L640
 5895              	.LBB346:
 5896              	.LBB347:
 5897              		.loc 4 1290 0
 5898 02b4 070084E2 		add	r0, r4, #7
 5899 02b8 FEFFFFEB 		bl	gsm48_match_ra
 5900 02bc 000050E3 		cmp	r0, #0
 5901              		.loc 4 1292 0
 5902 02c0 0A10D415 		ldrneb	r1, [r4, #10]	@ zero_extendqisi2
 5903              		.loc 4 1290 0
 5904 02c4 C300001A 		bne	.L673
 5905 02c8 DB0000EA 		b	.L640
 5906              	.L651:
 5907              	.LBE347:
 5908              	.LBE346:
 5909              	.LBB348:
 5910              	.LBB349:
 5911              		.loc 4 1302 0
 5912 02cc 070084E2 		add	r0, r4, #7
 5913 02d0 FEFFFFEB 		bl	gsm48_match_ra
 5914 02d4 000050E3 		cmp	r0, #0
 5915 02d8 BE00000A 		beq	.L655
 5916              		.loc 4 1303 0
 5917 02dc 08329FE5 		ldr	r3, .L675+72
 5918 02e0 0220A0E3 		mov	r2, #2
 5919              		.loc 4 1304 0
 5920 02e4 0A10D4E5 		ldrb	r1, [r4, #10]	@ zero_extendqisi2
 5921              		.loc 4 1303 0
 5922 02e8 002083E5 		str	r2, [r3, #0]
 5923              		.loc 4 1304 0
 5924 02ec FC319FE5 		ldr	r3, .L675+76
 5925 02f0 0010C3E5 		strb	r1, [r3, #0]
 5926              		.loc 4 1305 0
 5927 02f4 F8319FE5 		ldr	r3, .L675+80
 5928 02f8 0020A0E3 		mov	r2, #0
 5929 02fc 002083E5 		str	r2, [r3, #0]
 5930              	.L655:
 5931              		.loc 4 1307 0
 5932 0300 0E0084E2 		add	r0, r4, #14
 5933 0304 FEFFFFEB 		bl	gsm48_match_ra
 5934 0308 000050E3 		cmp	r0, #0
 5935 030c DB00000A 		beq	.L640
 5936              		.loc 4 1309 0
 5937 0310 1110D4E5 		ldrb	r1, [r4, #17]	@ zero_extendqisi2
 5938              	.L673:
 5939              		.loc 4 1308 0
 5940 0314 D0319FE5 		ldr	r3, .L675+72
 5941 0318 0220A0E3 		mov	r2, #2
 5942 031c 002083E5 		str	r2, [r3, #0]
 5943              		.loc 4 1309 0
 5944 0320 C8319FE5 		ldr	r3, .L675+76
 5945 0324 0010C3E5 		strb	r1, [r3, #0]
 5946              		.loc 4 1310 0
 5947 0328 C4319FE5 		ldr	r3, .L675+80
 5948 032c 0020A0E3 		mov	r2, #0
 5949 0330 002083E5 		str	r2, [r3, #0]
 5950 0334 DB0000EA 		b	.L640
 5951              	.L652:
 5952              	.LBE349:
 5953              	.LBE348:
 5954              	.LBB350:
 5955              	.LBB351:
 5956              		.loc 4 1317 0
 5957 0338 0050A0E3 		mov	r5, #0
 5958              	.LVL240:
 5959              	.L658:
 5960              		.loc 4 1325 0
 5961 033c 040084E2 		add	r0, r4, #4
 5962 0340 050080E0 		add	r0, r0, r5
 5963 0344 FEFFFFEB 		bl	gsm48_match_ra
 5964 0348 000050E3 		cmp	r0, #0
 5965              		.loc 4 1327 0
 5966 034c 045085E2 		add	r5, r5, #4
 5967              		.loc 4 1325 0
 5968 0350 D900000A 		beq	.L659
 5969              		.loc 4 1326 0
 5970 0354 90319FE5 		ldr	r3, .L675+72
 5971 0358 0320A0E3 		mov	r2, #3
 5972 035c 002083E5 		str	r2, [r3, #0]
 5973              		.loc 4 1327 0
 5974 0360 8C319FE5 		ldr	r3, .L675+80
 5975 0364 0020A0E3 		mov	r2, #0
 5976 0368 002083E5 		str	r2, [r3, #0]
 5977              	.L659:
 5978              		.loc 4 1321 0
 5979 036c 100055E3 		cmp	r5, #16
 5980 0370 CD00001A 		bne	.L658
 5981              	.LVL241:
 5982              	.L640:
 5983              	.LBE351:
 5984              	.LBE350:
 5985              	.LBE345:
 5986              	.LBE344:
 5987              		.loc 4 1443 0
 5988 0374 0610A0E1 		mov	r1, r6
 5989 0378 0500A0E3 		mov	r0, #5
 5990 037c FEFFFFEB 		bl	sercomm_sendmsg
 5991 0380 250100EA 		b	.L669
 5992              	.LVL242:
 5993              	.L621:
 5994              		.loc 4 1446 0
 5995 0384 044085E2 		add	r4, r5, #4
 5996              	.LVL243:
 5997 0388 F90000EA 		b	.L674
 5998              	.LVL244:
 5999              	.L663:
 6000              		.loc 4 1450 0
 6001 038c 1C319FE5 		ldr	r3, .L675+12
 6002 0390 003093E5 		ldr	r3, [r3, #0]
 6003              		.loc 4 1448 0
 6004 0394 0410D4E5 		ldrb	r1, [r4, #4]	@ zero_extendqisi2
 6005 0398 0220D4E5 		ldrb	r2, [r4, #2]	@ zero_extendqisi2
 6006              		.loc 4 1450 0
 6007 039c 000053E3 		cmp	r3, #0
 6008              		.loc 4 1384 0
 6009 03a0 04C084E2 		add	ip, r4, #4
 6010              		.loc 4 1448 0
 6011 03a4 0120C0E7 		strb	r2, [r0, r1]
 6012              		.loc 4 1450 0
 6013 03a8 EF00000A 		beq	.L664
 6014 03ac 0420D4E5 		ldrb	r2, [r4, #4]	@ zero_extendqisi2
 6015 03b0 40319FE5 		ldr	r3, .L675+84
 6016 03b4 0210D0E7 		ldrb	r1, [r0, r2]	@ zero_extendqisi2
 6017 03b8 0230D3E7 		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 6018 03bc 030051E1 		cmp	r1, r3
 6019 03c0 F300009A 		bls	.L666
 6020              	.L664:
 6021              		.loc 4 1451 0
 6022 03c4 0430D4E5 		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 6023 03c8 28219FE5 		ldr	r2, .L675+84
 6024 03cc 0310D0E7 		ldrb	r1, [r0, r3]	@ zero_extendqisi2
 6025 03d0 0310C2E7 		strb	r1, [r2, r3]
 6026              	.L666:
 6027              		.loc 4 1452 0
 6028 03d4 0030DCE5 		ldrb	r3, [ip, #0]	@ zero_extendqisi2
 6029 03d8 070053E3 		cmp	r3, #7
 6030              		.loc 4 1453 0
 6031 03dc 18319F05 		ldreq	r3, .L675+88
 6032 03e0 0120A003 		moveq	r2, #1	@ movhi
 6033 03e4 B020C301 		streqh	r2, [r3, #0]	@ movhi
 6034              		.loc 4 1447 0
 6035 03e8 064084E2 		add	r4, r4, #6
 6036              	.LVL245:
 6037              	.L674:
 6038 03ec 3C3096E5 		ldr	r3, [r6, #60]
 6039 03f0 030054E1 		cmp	r4, r3
 6040              		.loc 4 1448 0
 6041 03f4 04019FE5 		ldr	r0, .L675+92
 6042              		.loc 4 1447 0
 6043 03f8 E100003A 		bcc	.L663
 6044 03fc 230100EA 		b	.L616
 6045              	.LVL246:
 6046              	.L620:
 6047              		.loc 4 1458 0
 6048 0400 0920D5E5 		ldrb	r2, [r5, #9]	@ zero_extendqisi2
 6049 0404 0830D5E5 		ldrb	r3, [r5, #8]	@ zero_extendqisi2
 6050 0408 0A10D5E5 		ldrb	r1, [r5, #10]	@ zero_extendqisi2
 6051 040c 023483E1 		orr	r3, r3, r2, asl #8
 6052 0410 0B20D5E5 		ldrb	r2, [r5, #11]	@ zero_extendqisi2
 6053 0414 013883E1 		orr	r3, r3, r1, asl #16
 6054 0418 023C83E1 		orr	r3, r3, r2, asl #24
 6055              	.LBB352:
 6056              	.LBB353:
 6057              	.LBB354:
 6058              	.LBB355:
 6059              		.file 5 "include/asm/swab.h"
   1:include/asm/swab.h **** /*
   2:include/asm/swab.h ****  *  arch/arm/include/asm/byteorder.h
   3:include/asm/swab.h ****  *
   4:include/asm/swab.h ****  * ARM Endian-ness.  In little endian mode, the data bus is connected such
   5:include/asm/swab.h ****  * that byte accesses appear as:
   6:include/asm/swab.h ****  *  0 = d0...d7, 1 = d8...d15, 2 = d16...d23, 3 = d24...d31
   7:include/asm/swab.h ****  * and word accesses (data or instruction) appear as:
   8:include/asm/swab.h ****  *  d0...d31
   9:include/asm/swab.h ****  *
  10:include/asm/swab.h ****  * When in big endian mode, byte accesses appear as:
  11:include/asm/swab.h ****  *  0 = d24...d31, 1 = d16...d23, 2 = d8...d15, 3 = d0...d7
  12:include/asm/swab.h ****  * and word accesses (data or instruction) appear as:
  13:include/asm/swab.h ****  *  d0...d31
  14:include/asm/swab.h ****  */
  15:include/asm/swab.h **** #ifndef __ASM_ARM_SWAB_H
  16:include/asm/swab.h **** #define __ASM_ARM_SWAB_H
  17:include/asm/swab.h **** 
  18:include/asm/swab.h **** #include <stdint.h>
  19:include/asm/swab.h **** #include <defines.h>
  20:include/asm/swab.h **** 
  21:include/asm/swab.h **** static inline uint32_t __arch_swab32(uint32_t x)
  22:include/asm/swab.h **** {
  23:include/asm/swab.h **** 	uint32_t t;
  24:include/asm/swab.h **** 
  25:include/asm/swab.h **** #ifndef __thumb__
  26:include/asm/swab.h **** 	if (!__builtin_constant_p(x)) {
  27:include/asm/swab.h **** 		/*
  28:include/asm/swab.h **** 		 * The compiler needs a bit of a hint here to always do the
  29:include/asm/swab.h **** 		 * right thing and not screw it up to different degrees
  30:include/asm/swab.h **** 		 * depending on the gcc version.
  31:include/asm/swab.h **** 		 */
  32:include/asm/swab.h **** 		asm ("eor\t%0, %1, %1, ror #16" : "=r" (t) : "r" (x));
 6060              		.loc 5 32 0
 6061 041c 631823E0 		eor	r1, r3, r3, ror #16
 6062              	.LVL247:
 6063              	.LBE355:
 6064              	.LBE354:
 6065              	.LBE353:
 6066              	.LBE352:
 6067              		.loc 4 1458 0
 6068 0420 FF18C1E3 		bic	r1, r1, #16711680
 6069              	.LVL248:
 6070 0424 2114A0E1 		mov	r1, r1, lsr #8
 6071 0428 631421E0 		eor	r1, r1, r3, ror #8
 6072 042c 0D00A0E1 		mov	r0, sp
 6073 0430 FEFFFFEB 		bl	gsm_fn2gsmtime
 6074              		.loc 4 1459 0
 6075 0434 C8009FE5 		ldr	r0, .L675+96
 6076 0438 B4C0DDE1 		ldrh	ip, [sp, #4]
 6077              		.loc 4 1460 0
 6078 043c 0630DDE5 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 6079              		.loc 4 1459 0
 6080 0440 0120D0E5 		ldrb	r2, [r0, #1]	@ zero_extendqisi2
 6081              		.loc 4 1460 0
 6082 0444 0210D0E5 		ldrb	r1, [r0, #2]	@ zero_extendqisi2
 6083              		.loc 4 1459 0
 6084 0448 1FC00CE2 		and	ip, ip, #31
 6085              		.loc 4 1460 0
 6086 044c 1F10C1E3 		bic	r1, r1, #31
 6087              		.loc 4 1459 0
 6088 0450 F820C2E3 		bic	r2, r2, #248
 6089              		.loc 4 1460 0
 6090 0454 1F3003E2 		and	r3, r3, #31
 6091              		.loc 4 1459 0
 6092 0458 8C2182E1 		orr	r2, r2, ip, asl #3
 6093              		.loc 4 1460 0
 6094 045c 013083E1 		orr	r3, r3, r1
 6095 0460 0230C0E5 		strb	r3, [r0, #2]
 6096              		.loc 4 1459 0
 6097 0464 0120C0E5 		strb	r2, [r0, #1]
 6098              		.loc 4 1461 0
 6099 0468 0210D0E5 		ldrb	r1, [r0, #2]	@ zero_extendqisi2
 6100 046c 0720DDE5 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 6101              		.loc 4 1462 0
 6102 0470 0130D0E5 		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 6103 0474 02CDA0E1 		mov	ip, r2, asl #26
 6104              		.loc 4 1461 0
 6105 0478 E010C1E3 		bic	r1, r1, #224
 6106              		.loc 4 1462 0
 6107 047c 0730C3E3 		bic	r3, r3, #7
 6108              		.loc 4 1461 0
 6109 0480 072002E2 		and	r2, r2, #7
 6110 0484 821281E1 		orr	r1, r1, r2, asl #5
 6111              		.loc 4 1462 0
 6112 0488 AC3E83E1 		orr	r3, r3, ip, lsr #29
 6113 048c 0130C0E5 		strb	r3, [r0, #1]
 6114              		.loc 4 1461 0
 6115 0490 0210C0E5 		strb	r1, [r0, #2]
 6116              	.LVL249:
 6117              	.L616:
 6118              		.loc 4 1466 0
 6119 0494 0600A0E1 		mov	r0, r6
 6120 0498 FEFFFFEB 		bl	msgb_free
 6121              	.L669:
 6122              		.loc 4 1468 0
 6123 049c 10D08DE2 		add	sp, sp, #16
 6124 04a0 7080BDE8 		ldmfd	sp!, {r4, r5, r6, pc}
 6125              	.L676:
 6126              		.align	2
 6127              	.L675:
 6128 04a4 00000000 		.word	pm_mode
 6129 04a8 00000000 		.word	pm_count
 6130 04ac 00000000 		.word	pm_meas
 6131 04b0 00000000 		.word	max
 6132 04b4 00000000 		.word	pm_spectrum
 6133 04b8 00000000 		.word	l1s
 6134 04bc 00000000 		.word	sync_result
 6135 04c0 34030000 		.word	.LC60
 6136 04c4 38030000 		.word	.LC61
 6137 04c8 00000000 		.word	bsic
 6138 04cc 00000000 		.word	power
 6139 04d0 00000000 		.word	si_new
 6140 04d4 00000000 		.word	si_1
 6141 04d8 00000000 		.word	si_2
 6142 04dc 00000000 		.word	si_2bis
 6143 04e0 00000000 		.word	si_2ter
 6144 04e4 00000000 		.word	si_3
 6145 04e8 00000000 		.word	si_4
 6146 04ec 00000000 		.word	assign
 6147 04f0 00000000 		.word	ta
 6148 04f4 00000000 		.word	rach
 6149 04f8 00000000 		.word	ul_max
 6150 04fc 00000000 		.word	ul_new
 6151 0500 00000000 		.word	ul_levels
 6152 0504 00000000 		.word	rach_ref
 6153              	.LFE141:
 6155              		.comm	assign,4,4
 6156              		.comm	ta,1,1
 6157              		.comm	rach_when,4,4
 6158              		.comm	rach_ra,1,1
 6159              		.comm	rach_ref,3,1
 6160              		.comm	freq,1024,1
 6161              		.comm	nb_num,4,4
 6162              		.comm	ccch_conf,4,4
 6163              		.comm	cell_id,2,2
 6164              		.comm	lac,2,2
 6165              		.comm	mnc,2,2
 6166              		.comm	mcc,2,2
 6167              		.comm	ul_new,2,2
 6168              		.comm	si_4,23,1
 6169              		.comm	si_3,23,1
 6170              		.comm	si_2ter,23,1
 6171              		.comm	si_2bis,23,1
 6172              		.comm	si_2,23,1
 6173              		.comm	si_1,23,1
 6174              		.comm	ul_max,8,1
 6175              		.comm	ul_levels,8,1
 6176              		.comm	bsic,1,1
 6177              		.comm	tone_time,4,4
 6178              		.comm	pm_spectrum,1024,1
 6179              		.comm	pm_meas,40,4
 6180              		.comm	band,4,4
 6181              		.comm	cursor,4,4
 6182              		.comm	input,5,1
 6183              		.comm	max_power,1,1
 6184              		.comm	power,1,1
 6185              		.comm	last_mode,4,4
 6186              		.comm	key_pressed_delay,4,4
 6187              		.comm	key_pressed_when,4,4
 6188              		.comm	key_pressed_code,4,4
 6189              		.bss
 6190              		.align	1
 6191              	ul_arfcn:
 6192 0032 0000     		.space	2
 6635              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccIWMGXg.s:20     .data:0000000000000000 hr
     /tmp/ccIWMGXg.s:21     .data:0000000000000000 $d
     /tmp/ccIWMGXg.s:27     .bss:0000000000000000 rach
     /tmp/ccIWMGXg.s:33     .bss:0000000000000004 si_new
     /tmp/ccIWMGXg.s:39     .bss:0000000000000008 tone_on
     /tmp/ccIWMGXg.s:45     .bss:000000000000000c tone
     /tmp/ccIWMGXg.s:52     .data:0000000000000004 pm_scale
     /tmp/ccIWMGXg.s:58     .data:0000000000000008 pm_max
     /tmp/ccIWMGXg.s:65     .bss:0000000000000010 pm_count
     /tmp/ccIWMGXg.s:71     .bss:0000000000000014 pm_mode
     /tmp/ccIWMGXg.s:83     .data:000000000000000c sync_msg
     /tmp/ccIWMGXg.s:90     .bss:0000000000000018 sync_result
     /tmp/ccIWMGXg.s:96     .bss:000000000000001c max
     /tmp/ccIWMGXg.s:102    .bss:0000000000000020 uplink
     /tmp/ccIWMGXg.s:108    .bss:0000000000000024 pcs
     /tmp/ccIWMGXg.s:114    .bss:0000000000000028 mode
     /tmp/ccIWMGXg.s:120    .bss:000000000000002c key_pressed
     /tmp/ccIWMGXg.s:127    .data:0000000000000010 key_code
     /tmp/ccIWMGXg.s:131    .bss:0000000000000030 arfcn
     /tmp/ccIWMGXg.s:137    .data:0000000000000014 bands
     /tmp/ccIWMGXg.s:165    .text.__fswab16:0000000000000000 __fswab16
     /tmp/ccIWMGXg.s:173    .text.__fswab16:0000000000000000 $a
     /tmp/ccIWMGXg.s:192    .text.msgb_tailroom:0000000000000000 msgb_tailroom
     /tmp/ccIWMGXg.s:200    .text.msgb_tailroom:0000000000000000 $a
     /tmp/ccIWMGXg.s:221    .text.msgb_put:0000000000000000 msgb_put
     /tmp/ccIWMGXg.s:227    .text.msgb_put:0000000000000000 $a
     /tmp/ccIWMGXg.s:269    .text.msgb_put:000000000000004c $d
     /tmp/ccIWMGXg.s:275    .text.fb_boxto:0000000000000000 fb_boxto
     /tmp/ccIWMGXg.s:282    .text.fb_boxto:0000000000000000 $a
     /tmp/ccIWMGXg.s:305    .text.fb_boxto:0000000000000028 $d
     /tmp/ccIWMGXg.s:311    .text.fb_putstr:0000000000000000 fb_putstr
     /tmp/ccIWMGXg.s:317    .text.fb_putstr:0000000000000000 $a
     /tmp/ccIWMGXg.s:330    .text.fb_putstr:0000000000000018 $d
     /tmp/ccIWMGXg.s:336    .text.exit_sync:0000000000000000 exit_sync
     /tmp/ccIWMGXg.s:343    .text.exit_sync:0000000000000000 $a
     /tmp/ccIWMGXg.s:366    .text.exit_sync:000000000000002c $d
     /tmp/ccIWMGXg.s:374    .text.request_ul_levels:0000000000000000 request_ul_levels
     /tmp/ccIWMGXg.s:380    .text.request_ul_levels:0000000000000000 $a
     /tmp/ccIWMGXg.s:453    .text.request_ul_levels:00000000000000ac $d
     /tmp/ccIWMGXg.s:462    .text.gsm48_decode_lai:0000000000000000 gsm48_decode_lai
     /tmp/ccIWMGXg.s:468    .text.gsm48_decode_lai:0000000000000000 $a
     /tmp/ccIWMGXg.s:508    .text.gsm48_match_ra:0000000000000000 gsm48_match_ra
     /tmp/ccIWMGXg.s:514    .text.gsm48_match_ra:0000000000000000 $a
     /tmp/ccIWMGXg.s:577    .text.gsm48_match_ra:0000000000000094 $d
                            *COM*:0000000000000001 rach_ra
                            *COM*:0000000000000003 rach_ref
     /tmp/ccIWMGXg.s:592    .text.console_rx_cb:0000000000000000 console_rx_cb
     /tmp/ccIWMGXg.s:598    .text.console_rx_cb:0000000000000000 $a
     /tmp/ccIWMGXg.s:638    .text.console_rx_cb:0000000000000040 $d
     /tmp/ccIWMGXg.s:655    .text.l1a_l23_rx_cb:0000000000000000 l1a_l23_rx_cb
     /tmp/ccIWMGXg.s:661    .text.l1a_l23_rx_cb:0000000000000000 $a
     /tmp/ccIWMGXg.s:699    .text.l1a_l23_rx_cb:000000000000004c $d
     /tmp/ccIWMGXg.s:707    .text.key_handler:0000000000000000 key_handler
     /tmp/ccIWMGXg.s:715    .text.key_handler:0000000000000000 $a
     /tmp/ccIWMGXg.s:754    .text.key_handler:0000000000000058 $d
                            *COM*:0000000000000004 key_pressed_when
                            *COM*:0000000000000004 key_pressed_delay
                            *COM*:0000000000000004 key_pressed_code
     /tmp/ccIWMGXg.s:765    .text.print_display:0000000000000000 print_display
     /tmp/ccIWMGXg.s:771    .text.print_display:0000000000000000 $a
     /tmp/ccIWMGXg.s:824    .text.print_display:0000000000000064 $d
     /tmp/ccIWMGXg.s:981    .text.refresh_display:0000000000000000 refresh_display
     /tmp/ccIWMGXg.s:987    .text.refresh_display:0000000000000000 $a
     /tmp/ccIWMGXg.s:1347   .text.refresh_display:0000000000000234 $d
     /tmp/ccIWMGXg.s:1354   .text.refresh_display:0000000000000248 $a
     /tmp/ccIWMGXg.s:2995   .text.refresh_display:0000000000000ea0 $d
                            *COM*:0000000000000001 power
                            *COM*:0000000000000004 rach_when
                            *COM*:0000000000000004 assign
                            *COM*:0000000000000001 ta
                            *COM*:0000000000000008 ul_max
                            *COM*:0000000000000008 ul_levels
     /tmp/ccIWMGXg.s:6191   .bss:0000000000000032 ul_arfcn
                            *COM*:0000000000000001 bsic
                            *COM*:0000000000000017 si_1
                            *COM*:0000000000000017 si_2
                            *COM*:0000000000000017 si_2bis
                            *COM*:0000000000000017 si_2ter
                            *COM*:0000000000000017 si_3
                            *COM*:0000000000000017 si_4
                            *COM*:0000000000000002 mcc
                            *COM*:0000000000000002 mnc
                            *COM*:0000000000000002 lac
                            *COM*:0000000000000002 cell_id
                            *COM*:0000000000000400 freq
                            *COM*:0000000000000004 nb_num
                            *COM*:0000000000000005 input
                            *COM*:0000000000000004 band
                            *COM*:0000000000000001 max_power
                            *COM*:0000000000000400 pm_spectrum
                            *COM*:0000000000000004 cursor
     /tmp/ccIWMGXg.s:3090   .text.refresh_display:0000000000001010 $a
     /tmp/ccIWMGXg.s:3492   .text.inc_dec_arfcn:0000000000000000 inc_dec_arfcn
     /tmp/ccIWMGXg.s:3498   .text.inc_dec_arfcn:0000000000000000 $a
     /tmp/ccIWMGXg.s:3639   .text.inc_dec_arfcn:0000000000000158 $d
     /tmp/ccIWMGXg.s:3648   .text.tone_inc_dec:0000000000000000 tone_inc_dec
     /tmp/ccIWMGXg.s:3656   .text.tone_inc_dec:0000000000000000 $a
     /tmp/ccIWMGXg.s:3684   .text.tone_inc_dec:0000000000000034 $d
     /tmp/ccIWMGXg.s:3690   .text.inc_dec_neighbour:0000000000000000 inc_dec_neighbour
     /tmp/ccIWMGXg.s:3697   .text.inc_dec_neighbour:0000000000000000 $a
     /tmp/ccIWMGXg.s:3752   .text.inc_dec_neighbour:0000000000000084 $d
     /tmp/ccIWMGXg.s:3760   .text.inc_dec_spectrum:0000000000000000 inc_dec_spectrum
     /tmp/ccIWMGXg.s:3767   .text.inc_dec_spectrum:0000000000000000 $a
     /tmp/ccIWMGXg.s:3810   .text.inc_dec_spectrum:0000000000000054 $d
     /tmp/ccIWMGXg.s:3816   .text.inc_dec_ul_arfcn:0000000000000000 inc_dec_ul_arfcn
     /tmp/ccIWMGXg.s:3823   .text.inc_dec_ul_arfcn:0000000000000000 $a
     /tmp/ccIWMGXg.s:3902   .text.inc_dec_ul_arfcn:00000000000000bc $d
     /tmp/ccIWMGXg.s:3910   .text.toggle_up_down:0000000000000000 toggle_up_down
     /tmp/ccIWMGXg.s:3916   .text.toggle_up_down:0000000000000000 $a
     /tmp/ccIWMGXg.s:3945   .text.toggle_up_down:000000000000004c $d
     /tmp/ccIWMGXg.s:3954   .text.exit_arfcn:0000000000000000 exit_arfcn
     /tmp/ccIWMGXg.s:3962   .text.exit_arfcn:0000000000000000 $a
     /tmp/ccIWMGXg.s:3975   .text.exit_arfcn:0000000000000014 $d
                            *COM*:0000000000000004 last_mode
     /tmp/ccIWMGXg.s:3982   .text.enter_arfcn:0000000000000000 enter_arfcn
     /tmp/ccIWMGXg.s:3988   .text.enter_arfcn:0000000000000000 $a
     /tmp/ccIWMGXg.s:4152   .text.enter_arfcn:000000000000016c $d
     /tmp/ccIWMGXg.s:4164   .text.exit_rach:0000000000000000 exit_rach
     /tmp/ccIWMGXg.s:4170   .text.exit_rach:0000000000000000 $a
     /tmp/ccIWMGXg.s:4192   .text.exit_rach:0000000000000030 $d
     /tmp/ccIWMGXg.s:4200   .text.toggle_spectrum:0000000000000000 toggle_spectrum
     /tmp/ccIWMGXg.s:4206   .text.toggle_spectrum:0000000000000000 $a
     /tmp/ccIWMGXg.s:4246   .text.toggle_spectrum:0000000000000054 $d
     /tmp/ccIWMGXg.s:4266   .text.main:0000000000000000 main
     /tmp/ccIWMGXg.s:4272   .text.main:0000000000000000 $a
     /tmp/ccIWMGXg.s:4410   .text.main:000000000000014c $d
     /tmp/ccIWMGXg.s:4433   .text.main:00000000000001a0 $a
     /tmp/ccIWMGXg.s:5544   .text.main:0000000000000c18 $d
     /tmp/ccIWMGXg.s:5622   .text.l1a_l23_tx:0000000000000000 l1a_l23_tx
                            *COM*:0000000000000004 ccch_conf
                            *COM*:0000000000000002 ul_new
                            *COM*:0000000000000028 pm_meas
                            *COM*:0000000000000004 tone_time
     /tmp/ccIWMGXg.s:5628   .text.l1a_l23_tx:0000000000000000 $a
     /tmp/ccIWMGXg.s:6128   .text.l1a_l23_tx:00000000000004a4 $d

UNDEFINED SYMBOLS
osmo_panic
framebuffer
l1s_reset
l1s_reset_hw
l1ctl_msgb_alloc
l1a_l23_rx
printf
msgb_free
puts
jiffies
__udivsi3
__divsi3
__modsi3
sprintf
battery_info
board_init
dump_dev_id
calypso_clk_dump
keypad_set_handler
sercomm_register_rx_cb
layer1_init
tpu_frame_irq_en
buzzer_mode_pwt
buzzer_volume
memset
l1a_compl_execute
osmo_timers_update
l1a_l23_handler
buzzer_note
gsm48_decode_freq_list
l1a_l23_tx_cb
l1s
rsl_dec_chan_nr
memcpy
sercomm_sendmsg
gsm_fn2gsmtime
